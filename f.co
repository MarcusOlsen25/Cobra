



Optimised

comp_end_0:
	cmp $0, %rax			# Check the condition
	je else_part_0			# Skip to the else if the condition is false
	pushq %rbp				# Push simple static link
	subq $24, %rsp			# Add many dummy spaces
	movq $1, %rax			# Put a number in %rax
	negq %rax				# Negate value
	call print				# Call the print procedure
end_then_0:				# Clean up then block stack frame
	addq $24, %rsp			# Deallocate dummy spaces and static link
	jmp end_0				# Skip the else
else_part_0:
	pushq %rbp				# Push simple static link
	subq $24, %rsp			# Add many dummy spaces
	movq $33, %rax			# Put a number in %rax
	call print				# Call the print procedure
end_else_0:
	addq $24, %rsp			# Deallocate dummy spaces and static link
end_0:
end_test33:			# End function
	addq $8, %rsp			# Remove dummy base pointer
	ret						# Return from the function