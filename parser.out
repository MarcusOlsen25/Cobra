Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration_list declaration
Rule 4     declaration -> varDeclaration
Rule 5     declaration -> statement
Rule 6     declaration -> funcDeclaration
Rule 7     declaration -> class
Rule 8     class -> CLASS ID extends LBRACE classDeclarationList RBRACE
Rule 9     extends -> EXTENDS ID
Rule 10    extends -> empty
Rule 11    classDeclarationList -> classDeclarationList classDeclaration
Rule 12    classDeclarationList -> classDeclaration
Rule 13    classDeclaration -> varDeclaration
Rule 14    classDeclaration -> methodDeclaration
Rule 15    methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
Rule 16    statement -> expression
Rule 17    statement -> ifStatement
Rule 18    statement -> whileStatement
Rule 19    statement -> printStatement
Rule 20    statement -> returnStatement
Rule 21    returnStatement -> RETURN expression
Rule 22    returnStatement -> RETURN
Rule 23    ifStatement -> IF expression THEN LBRACE declaration_list RBRACE
Rule 24    ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
Rule 25    whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE
Rule 26    printStatement -> PRINT expression
Rule 27    varDeclaration -> type ID
Rule 28    varDeclaration -> type ID ASSIGN expression
Rule 29    type -> INT
Rule 30    type -> BOOL
Rule 31    type -> VOID
Rule 32    type -> ID
Rule 33    expression -> assignment
Rule 34    assignment -> property ASSIGN logical
Rule 35    assignment -> logical
Rule 36    logical -> logical OR equality
Rule 37    logical -> logical AND equality
Rule 38    logical -> equality
Rule 39    equality -> equality EQUALS comparison
Rule 40    equality -> equality NOTEQUALS comparison
Rule 41    equality -> comparison
Rule 42    comparison -> comparison GREATER term
Rule 43    comparison -> comparison LESS term
Rule 44    comparison -> comparison GREATEROREQUAL term
Rule 45    comparison -> comparison LESSOREQUAL term
Rule 46    comparison -> term
Rule 47    term -> term PLUS factor
Rule 48    term -> term MINUS factor
Rule 49    term -> factor
Rule 50    factor -> factor TIMES unary
Rule 51    factor -> factor DIVIDE unary
Rule 52    factor -> unary
Rule 53    unary -> NOT unary
Rule 54    unary -> MINUS unary
Rule 55    unary -> property
Rule 56    property -> NEW primary LPAREN RPAREN
Rule 57    property -> property DOT ID
Rule 58    property -> property LPAREN arguments RPAREN
Rule 59    property_list -> property_list DOT primary
Rule 60    property_list -> primary
Rule 61    property -> call
Rule 62    call -> primary LPAREN arguments RPAREN
Rule 63    call -> primary
Rule 64    primary -> NUMBER
Rule 65    primary -> ID
Rule 66    primary -> TRUE
Rule 67    primary -> FALSE
Rule 68    primary -> LPAREN expression RPAREN
Rule 69    arguments -> arguments COMMA expression
Rule 70    arguments -> expression
Rule 71    arguments -> <empty>
Rule 72    funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
Rule 73    parameter_list -> parameter_list COMMA ID
Rule 74    parameter_list -> ID
Rule 75    parameter_list -> parameter_list COMMA type ID
Rule 76    parameter_list -> type ID
Rule 77    parameter_list -> <empty>
Rule 78    empty -> <empty>

Terminals, with rules where they appear

AND                  : 37
ASSIGN               : 28 34
BOOL                 : 30
CLASS                : 8
COMMA                : 69 73 75
DIVIDE               : 51
DOT                  : 57 59
ELSE                 : 24
EQUALS               : 39
EXTENDS              : 9
FALSE                : 67
FUNC                 : 15 72
GREATER              : 42
GREATEROREQUAL       : 44
ID                   : 8 9 15 27 28 32 57 65 72 73 74 75 76
IF                   : 23 24
INT                  : 29
LBRACE               : 8 15 23 24 24 25 72
LESS                 : 43
LESSOREQUAL          : 45
LPAREN               : 15 56 58 62 68 72
MINUS                : 48 54
NEW                  : 56
NOT                  : 53
NOTEQUALS            : 40
NUMBER               : 64
OR                   : 36
PLUS                 : 47
PRINT                : 26
RBRACE               : 8 15 23 24 24 25 72
RETURN               : 21 22
RPAREN               : 15 56 58 62 68 72
THEN                 : 23 24 25
TIMES                : 50
TRUE                 : 66
VOID                 : 31
WHILE                : 25
error                : 

Nonterminals, with rules where they appear

arguments            : 58 62 69
assignment           : 33
call                 : 61
class                : 7
classDeclaration     : 11 12
classDeclarationList : 8 11
comparison           : 39 40 41 42 43 44 45
declaration          : 2 3
declaration_list     : 1 3 15 23 24 24 25 72
empty                : 10
equality             : 36 37 38 39 40
expression           : 16 21 23 24 25 26 28 68 69 70
extends              : 8
factor               : 47 48 49 50 51
funcDeclaration      : 6
ifStatement          : 17
logical              : 34 35 36 37
methodDeclaration    : 14
parameter_list       : 15 72 73 75
primary              : 56 59 60 62 63
printStatement       : 19
program              : 0
property             : 34 55 57 58
property_list        : 59
returnStatement      : 20
statement            : 5
term                 : 42 43 44 45 46 47 48
type                 : 15 27 28 72 75 76
unary                : 50 51 52 53 54
varDeclaration       : 4 13
whileStatement       : 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    $end            reduce using rule 1 (program -> declaration_list .)
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    declaration                    shift and go to state 41
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 3

    (2) declaration_list -> declaration .

    FUNC            reduce using rule 2 (declaration_list -> declaration .)
    CLASS           reduce using rule 2 (declaration_list -> declaration .)
    INT             reduce using rule 2 (declaration_list -> declaration .)
    BOOL            reduce using rule 2 (declaration_list -> declaration .)
    VOID            reduce using rule 2 (declaration_list -> declaration .)
    ID              reduce using rule 2 (declaration_list -> declaration .)
    IF              reduce using rule 2 (declaration_list -> declaration .)
    WHILE           reduce using rule 2 (declaration_list -> declaration .)
    PRINT           reduce using rule 2 (declaration_list -> declaration .)
    RETURN          reduce using rule 2 (declaration_list -> declaration .)
    NEW             reduce using rule 2 (declaration_list -> declaration .)
    NUMBER          reduce using rule 2 (declaration_list -> declaration .)
    TRUE            reduce using rule 2 (declaration_list -> declaration .)
    FALSE           reduce using rule 2 (declaration_list -> declaration .)
    LPAREN          reduce using rule 2 (declaration_list -> declaration .)
    NOT             reduce using rule 2 (declaration_list -> declaration .)
    MINUS           reduce using rule 2 (declaration_list -> declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration .)
    RBRACE          reduce using rule 2 (declaration_list -> declaration .)


state 4

    (4) declaration -> varDeclaration .

    FUNC            reduce using rule 4 (declaration -> varDeclaration .)
    CLASS           reduce using rule 4 (declaration -> varDeclaration .)
    INT             reduce using rule 4 (declaration -> varDeclaration .)
    BOOL            reduce using rule 4 (declaration -> varDeclaration .)
    VOID            reduce using rule 4 (declaration -> varDeclaration .)
    ID              reduce using rule 4 (declaration -> varDeclaration .)
    IF              reduce using rule 4 (declaration -> varDeclaration .)
    WHILE           reduce using rule 4 (declaration -> varDeclaration .)
    PRINT           reduce using rule 4 (declaration -> varDeclaration .)
    RETURN          reduce using rule 4 (declaration -> varDeclaration .)
    NEW             reduce using rule 4 (declaration -> varDeclaration .)
    NUMBER          reduce using rule 4 (declaration -> varDeclaration .)
    TRUE            reduce using rule 4 (declaration -> varDeclaration .)
    FALSE           reduce using rule 4 (declaration -> varDeclaration .)
    LPAREN          reduce using rule 4 (declaration -> varDeclaration .)
    NOT             reduce using rule 4 (declaration -> varDeclaration .)
    MINUS           reduce using rule 4 (declaration -> varDeclaration .)
    $end            reduce using rule 4 (declaration -> varDeclaration .)
    RBRACE          reduce using rule 4 (declaration -> varDeclaration .)


state 5

    (5) declaration -> statement .

    FUNC            reduce using rule 5 (declaration -> statement .)
    CLASS           reduce using rule 5 (declaration -> statement .)
    INT             reduce using rule 5 (declaration -> statement .)
    BOOL            reduce using rule 5 (declaration -> statement .)
    VOID            reduce using rule 5 (declaration -> statement .)
    ID              reduce using rule 5 (declaration -> statement .)
    IF              reduce using rule 5 (declaration -> statement .)
    WHILE           reduce using rule 5 (declaration -> statement .)
    PRINT           reduce using rule 5 (declaration -> statement .)
    RETURN          reduce using rule 5 (declaration -> statement .)
    NEW             reduce using rule 5 (declaration -> statement .)
    NUMBER          reduce using rule 5 (declaration -> statement .)
    TRUE            reduce using rule 5 (declaration -> statement .)
    FALSE           reduce using rule 5 (declaration -> statement .)
    LPAREN          reduce using rule 5 (declaration -> statement .)
    NOT             reduce using rule 5 (declaration -> statement .)
    MINUS           reduce using rule 5 (declaration -> statement .)
    $end            reduce using rule 5 (declaration -> statement .)
    RBRACE          reduce using rule 5 (declaration -> statement .)


state 6

    (6) declaration -> funcDeclaration .

    FUNC            reduce using rule 6 (declaration -> funcDeclaration .)
    CLASS           reduce using rule 6 (declaration -> funcDeclaration .)
    INT             reduce using rule 6 (declaration -> funcDeclaration .)
    BOOL            reduce using rule 6 (declaration -> funcDeclaration .)
    VOID            reduce using rule 6 (declaration -> funcDeclaration .)
    ID              reduce using rule 6 (declaration -> funcDeclaration .)
    IF              reduce using rule 6 (declaration -> funcDeclaration .)
    WHILE           reduce using rule 6 (declaration -> funcDeclaration .)
    PRINT           reduce using rule 6 (declaration -> funcDeclaration .)
    RETURN          reduce using rule 6 (declaration -> funcDeclaration .)
    NEW             reduce using rule 6 (declaration -> funcDeclaration .)
    NUMBER          reduce using rule 6 (declaration -> funcDeclaration .)
    TRUE            reduce using rule 6 (declaration -> funcDeclaration .)
    FALSE           reduce using rule 6 (declaration -> funcDeclaration .)
    LPAREN          reduce using rule 6 (declaration -> funcDeclaration .)
    NOT             reduce using rule 6 (declaration -> funcDeclaration .)
    MINUS           reduce using rule 6 (declaration -> funcDeclaration .)
    $end            reduce using rule 6 (declaration -> funcDeclaration .)
    RBRACE          reduce using rule 6 (declaration -> funcDeclaration .)


state 7

    (7) declaration -> class .

    FUNC            reduce using rule 7 (declaration -> class .)
    CLASS           reduce using rule 7 (declaration -> class .)
    INT             reduce using rule 7 (declaration -> class .)
    BOOL            reduce using rule 7 (declaration -> class .)
    VOID            reduce using rule 7 (declaration -> class .)
    ID              reduce using rule 7 (declaration -> class .)
    IF              reduce using rule 7 (declaration -> class .)
    WHILE           reduce using rule 7 (declaration -> class .)
    PRINT           reduce using rule 7 (declaration -> class .)
    RETURN          reduce using rule 7 (declaration -> class .)
    NEW             reduce using rule 7 (declaration -> class .)
    NUMBER          reduce using rule 7 (declaration -> class .)
    TRUE            reduce using rule 7 (declaration -> class .)
    FALSE           reduce using rule 7 (declaration -> class .)
    LPAREN          reduce using rule 7 (declaration -> class .)
    NOT             reduce using rule 7 (declaration -> class .)
    MINUS           reduce using rule 7 (declaration -> class .)
    $end            reduce using rule 7 (declaration -> class .)
    RBRACE          reduce using rule 7 (declaration -> class .)


state 8

    (27) varDeclaration -> type . ID
    (28) varDeclaration -> type . ID ASSIGN expression

    ID              shift and go to state 42


state 9

    (32) type -> ID .
    (65) primary -> ID .

  ! reduce/reduce conflict for ID resolved using rule 32 (type -> ID .)
    ID              reduce using rule 32 (type -> ID .)
    LPAREN          reduce using rule 65 (primary -> ID .)
    ASSIGN          reduce using rule 65 (primary -> ID .)
    DOT             reduce using rule 65 (primary -> ID .)
    TIMES           reduce using rule 65 (primary -> ID .)
    DIVIDE          reduce using rule 65 (primary -> ID .)
    PLUS            reduce using rule 65 (primary -> ID .)
    MINUS           reduce using rule 65 (primary -> ID .)
    GREATER         reduce using rule 65 (primary -> ID .)
    LESS            reduce using rule 65 (primary -> ID .)
    GREATEROREQUAL  reduce using rule 65 (primary -> ID .)
    LESSOREQUAL     reduce using rule 65 (primary -> ID .)
    EQUALS          reduce using rule 65 (primary -> ID .)
    NOTEQUALS       reduce using rule 65 (primary -> ID .)
    OR              reduce using rule 65 (primary -> ID .)
    AND             reduce using rule 65 (primary -> ID .)
    FUNC            reduce using rule 65 (primary -> ID .)
    CLASS           reduce using rule 65 (primary -> ID .)
    INT             reduce using rule 65 (primary -> ID .)
    BOOL            reduce using rule 65 (primary -> ID .)
    VOID            reduce using rule 65 (primary -> ID .)
    IF              reduce using rule 65 (primary -> ID .)
    WHILE           reduce using rule 65 (primary -> ID .)
    PRINT           reduce using rule 65 (primary -> ID .)
    RETURN          reduce using rule 65 (primary -> ID .)
    NEW             reduce using rule 65 (primary -> ID .)
    NUMBER          reduce using rule 65 (primary -> ID .)
    TRUE            reduce using rule 65 (primary -> ID .)
    FALSE           reduce using rule 65 (primary -> ID .)
    NOT             reduce using rule 65 (primary -> ID .)
    $end            reduce using rule 65 (primary -> ID .)
    RBRACE          reduce using rule 65 (primary -> ID .)

  ! ID              [ reduce using rule 65 (primary -> ID .) ]


state 10

    (16) statement -> expression .

    FUNC            reduce using rule 16 (statement -> expression .)
    CLASS           reduce using rule 16 (statement -> expression .)
    INT             reduce using rule 16 (statement -> expression .)
    BOOL            reduce using rule 16 (statement -> expression .)
    VOID            reduce using rule 16 (statement -> expression .)
    ID              reduce using rule 16 (statement -> expression .)
    IF              reduce using rule 16 (statement -> expression .)
    WHILE           reduce using rule 16 (statement -> expression .)
    PRINT           reduce using rule 16 (statement -> expression .)
    RETURN          reduce using rule 16 (statement -> expression .)
    NEW             reduce using rule 16 (statement -> expression .)
    NUMBER          reduce using rule 16 (statement -> expression .)
    TRUE            reduce using rule 16 (statement -> expression .)
    FALSE           reduce using rule 16 (statement -> expression .)
    LPAREN          reduce using rule 16 (statement -> expression .)
    NOT             reduce using rule 16 (statement -> expression .)
    MINUS           reduce using rule 16 (statement -> expression .)
    $end            reduce using rule 16 (statement -> expression .)
    RBRACE          reduce using rule 16 (statement -> expression .)


state 11

    (17) statement -> ifStatement .

    FUNC            reduce using rule 17 (statement -> ifStatement .)
    CLASS           reduce using rule 17 (statement -> ifStatement .)
    INT             reduce using rule 17 (statement -> ifStatement .)
    BOOL            reduce using rule 17 (statement -> ifStatement .)
    VOID            reduce using rule 17 (statement -> ifStatement .)
    ID              reduce using rule 17 (statement -> ifStatement .)
    IF              reduce using rule 17 (statement -> ifStatement .)
    WHILE           reduce using rule 17 (statement -> ifStatement .)
    PRINT           reduce using rule 17 (statement -> ifStatement .)
    RETURN          reduce using rule 17 (statement -> ifStatement .)
    NEW             reduce using rule 17 (statement -> ifStatement .)
    NUMBER          reduce using rule 17 (statement -> ifStatement .)
    TRUE            reduce using rule 17 (statement -> ifStatement .)
    FALSE           reduce using rule 17 (statement -> ifStatement .)
    LPAREN          reduce using rule 17 (statement -> ifStatement .)
    NOT             reduce using rule 17 (statement -> ifStatement .)
    MINUS           reduce using rule 17 (statement -> ifStatement .)
    $end            reduce using rule 17 (statement -> ifStatement .)
    RBRACE          reduce using rule 17 (statement -> ifStatement .)


state 12

    (18) statement -> whileStatement .

    FUNC            reduce using rule 18 (statement -> whileStatement .)
    CLASS           reduce using rule 18 (statement -> whileStatement .)
    INT             reduce using rule 18 (statement -> whileStatement .)
    BOOL            reduce using rule 18 (statement -> whileStatement .)
    VOID            reduce using rule 18 (statement -> whileStatement .)
    ID              reduce using rule 18 (statement -> whileStatement .)
    IF              reduce using rule 18 (statement -> whileStatement .)
    WHILE           reduce using rule 18 (statement -> whileStatement .)
    PRINT           reduce using rule 18 (statement -> whileStatement .)
    RETURN          reduce using rule 18 (statement -> whileStatement .)
    NEW             reduce using rule 18 (statement -> whileStatement .)
    NUMBER          reduce using rule 18 (statement -> whileStatement .)
    TRUE            reduce using rule 18 (statement -> whileStatement .)
    FALSE           reduce using rule 18 (statement -> whileStatement .)
    LPAREN          reduce using rule 18 (statement -> whileStatement .)
    NOT             reduce using rule 18 (statement -> whileStatement .)
    MINUS           reduce using rule 18 (statement -> whileStatement .)
    $end            reduce using rule 18 (statement -> whileStatement .)
    RBRACE          reduce using rule 18 (statement -> whileStatement .)


state 13

    (19) statement -> printStatement .

    FUNC            reduce using rule 19 (statement -> printStatement .)
    CLASS           reduce using rule 19 (statement -> printStatement .)
    INT             reduce using rule 19 (statement -> printStatement .)
    BOOL            reduce using rule 19 (statement -> printStatement .)
    VOID            reduce using rule 19 (statement -> printStatement .)
    ID              reduce using rule 19 (statement -> printStatement .)
    IF              reduce using rule 19 (statement -> printStatement .)
    WHILE           reduce using rule 19 (statement -> printStatement .)
    PRINT           reduce using rule 19 (statement -> printStatement .)
    RETURN          reduce using rule 19 (statement -> printStatement .)
    NEW             reduce using rule 19 (statement -> printStatement .)
    NUMBER          reduce using rule 19 (statement -> printStatement .)
    TRUE            reduce using rule 19 (statement -> printStatement .)
    FALSE           reduce using rule 19 (statement -> printStatement .)
    LPAREN          reduce using rule 19 (statement -> printStatement .)
    NOT             reduce using rule 19 (statement -> printStatement .)
    MINUS           reduce using rule 19 (statement -> printStatement .)
    $end            reduce using rule 19 (statement -> printStatement .)
    RBRACE          reduce using rule 19 (statement -> printStatement .)


state 14

    (20) statement -> returnStatement .

    FUNC            reduce using rule 20 (statement -> returnStatement .)
    CLASS           reduce using rule 20 (statement -> returnStatement .)
    INT             reduce using rule 20 (statement -> returnStatement .)
    BOOL            reduce using rule 20 (statement -> returnStatement .)
    VOID            reduce using rule 20 (statement -> returnStatement .)
    ID              reduce using rule 20 (statement -> returnStatement .)
    IF              reduce using rule 20 (statement -> returnStatement .)
    WHILE           reduce using rule 20 (statement -> returnStatement .)
    PRINT           reduce using rule 20 (statement -> returnStatement .)
    RETURN          reduce using rule 20 (statement -> returnStatement .)
    NEW             reduce using rule 20 (statement -> returnStatement .)
    NUMBER          reduce using rule 20 (statement -> returnStatement .)
    TRUE            reduce using rule 20 (statement -> returnStatement .)
    FALSE           reduce using rule 20 (statement -> returnStatement .)
    LPAREN          reduce using rule 20 (statement -> returnStatement .)
    NOT             reduce using rule 20 (statement -> returnStatement .)
    MINUS           reduce using rule 20 (statement -> returnStatement .)
    $end            reduce using rule 20 (statement -> returnStatement .)
    RBRACE          reduce using rule 20 (statement -> returnStatement .)


state 15

    (72) funcDeclaration -> FUNC . ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE

    ID              shift and go to state 43


state 16

    (68) primary -> LPAREN . expression RPAREN
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 44
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 17

    (8) class -> CLASS . ID extends LBRACE classDeclarationList RBRACE

    ID              shift and go to state 46


state 18

    (29) type -> INT .

    ID              reduce using rule 29 (type -> INT .)
    LBRACE          reduce using rule 29 (type -> INT .)


state 19

    (30) type -> BOOL .

    ID              reduce using rule 30 (type -> BOOL .)
    LBRACE          reduce using rule 30 (type -> BOOL .)


state 20

    (31) type -> VOID .

    ID              reduce using rule 31 (type -> VOID .)
    LBRACE          reduce using rule 31 (type -> VOID .)


state 21

    (33) expression -> assignment .

    FUNC            reduce using rule 33 (expression -> assignment .)
    CLASS           reduce using rule 33 (expression -> assignment .)
    INT             reduce using rule 33 (expression -> assignment .)
    BOOL            reduce using rule 33 (expression -> assignment .)
    VOID            reduce using rule 33 (expression -> assignment .)
    ID              reduce using rule 33 (expression -> assignment .)
    IF              reduce using rule 33 (expression -> assignment .)
    WHILE           reduce using rule 33 (expression -> assignment .)
    PRINT           reduce using rule 33 (expression -> assignment .)
    RETURN          reduce using rule 33 (expression -> assignment .)
    NEW             reduce using rule 33 (expression -> assignment .)
    NUMBER          reduce using rule 33 (expression -> assignment .)
    TRUE            reduce using rule 33 (expression -> assignment .)
    FALSE           reduce using rule 33 (expression -> assignment .)
    LPAREN          reduce using rule 33 (expression -> assignment .)
    NOT             reduce using rule 33 (expression -> assignment .)
    MINUS           reduce using rule 33 (expression -> assignment .)
    $end            reduce using rule 33 (expression -> assignment .)
    RPAREN          reduce using rule 33 (expression -> assignment .)
    THEN            reduce using rule 33 (expression -> assignment .)
    RBRACE          reduce using rule 33 (expression -> assignment .)
    COMMA           reduce using rule 33 (expression -> assignment .)


state 22

    (23) ifStatement -> IF . expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> IF . expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 47
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 23

    (25) whileStatement -> WHILE . expression THEN LBRACE declaration_list RBRACE
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 48
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 24

    (26) printStatement -> PRINT . expression
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 49
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 25

    (21) returnStatement -> RETURN . expression
    (22) returnStatement -> RETURN .
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    FUNC            reduce using rule 22 (returnStatement -> RETURN .)
    CLASS           reduce using rule 22 (returnStatement -> RETURN .)
    INT             reduce using rule 22 (returnStatement -> RETURN .)
    BOOL            reduce using rule 22 (returnStatement -> RETURN .)
    VOID            reduce using rule 22 (returnStatement -> RETURN .)
    IF              reduce using rule 22 (returnStatement -> RETURN .)
    WHILE           reduce using rule 22 (returnStatement -> RETURN .)
    PRINT           reduce using rule 22 (returnStatement -> RETURN .)
    RETURN          reduce using rule 22 (returnStatement -> RETURN .)
    $end            reduce using rule 22 (returnStatement -> RETURN .)
    RBRACE          reduce using rule 22 (returnStatement -> RETURN .)
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

  ! ID              [ reduce using rule 22 (returnStatement -> RETURN .) ]
  ! NEW             [ reduce using rule 22 (returnStatement -> RETURN .) ]
  ! NUMBER          [ reduce using rule 22 (returnStatement -> RETURN .) ]
  ! TRUE            [ reduce using rule 22 (returnStatement -> RETURN .) ]
  ! FALSE           [ reduce using rule 22 (returnStatement -> RETURN .) ]
  ! LPAREN          [ reduce using rule 22 (returnStatement -> RETURN .) ]
  ! NOT             [ reduce using rule 22 (returnStatement -> RETURN .) ]
  ! MINUS           [ reduce using rule 22 (returnStatement -> RETURN .) ]

    expression                     shift and go to state 50
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 26

    (34) assignment -> property . ASSIGN logical
    (57) property -> property . DOT ID
    (58) property -> property . LPAREN arguments RPAREN
    (55) unary -> property .

  ! shift/reduce conflict for LPAREN resolved as shift
    ASSIGN          shift and go to state 51
    DOT             shift and go to state 52
    LPAREN          shift and go to state 53
    TIMES           reduce using rule 55 (unary -> property .)
    DIVIDE          reduce using rule 55 (unary -> property .)
    PLUS            reduce using rule 55 (unary -> property .)
    MINUS           reduce using rule 55 (unary -> property .)
    GREATER         reduce using rule 55 (unary -> property .)
    LESS            reduce using rule 55 (unary -> property .)
    GREATEROREQUAL  reduce using rule 55 (unary -> property .)
    LESSOREQUAL     reduce using rule 55 (unary -> property .)
    EQUALS          reduce using rule 55 (unary -> property .)
    NOTEQUALS       reduce using rule 55 (unary -> property .)
    OR              reduce using rule 55 (unary -> property .)
    AND             reduce using rule 55 (unary -> property .)
    FUNC            reduce using rule 55 (unary -> property .)
    CLASS           reduce using rule 55 (unary -> property .)
    INT             reduce using rule 55 (unary -> property .)
    BOOL            reduce using rule 55 (unary -> property .)
    VOID            reduce using rule 55 (unary -> property .)
    ID              reduce using rule 55 (unary -> property .)
    IF              reduce using rule 55 (unary -> property .)
    WHILE           reduce using rule 55 (unary -> property .)
    PRINT           reduce using rule 55 (unary -> property .)
    RETURN          reduce using rule 55 (unary -> property .)
    NEW             reduce using rule 55 (unary -> property .)
    NUMBER          reduce using rule 55 (unary -> property .)
    TRUE            reduce using rule 55 (unary -> property .)
    FALSE           reduce using rule 55 (unary -> property .)
    NOT             reduce using rule 55 (unary -> property .)
    $end            reduce using rule 55 (unary -> property .)
    RPAREN          reduce using rule 55 (unary -> property .)
    THEN            reduce using rule 55 (unary -> property .)
    RBRACE          reduce using rule 55 (unary -> property .)
    COMMA           reduce using rule 55 (unary -> property .)

  ! LPAREN          [ reduce using rule 55 (unary -> property .) ]


state 27

    (35) assignment -> logical .
    (36) logical -> logical . OR equality
    (37) logical -> logical . AND equality

    FUNC            reduce using rule 35 (assignment -> logical .)
    CLASS           reduce using rule 35 (assignment -> logical .)
    INT             reduce using rule 35 (assignment -> logical .)
    BOOL            reduce using rule 35 (assignment -> logical .)
    VOID            reduce using rule 35 (assignment -> logical .)
    ID              reduce using rule 35 (assignment -> logical .)
    IF              reduce using rule 35 (assignment -> logical .)
    WHILE           reduce using rule 35 (assignment -> logical .)
    PRINT           reduce using rule 35 (assignment -> logical .)
    RETURN          reduce using rule 35 (assignment -> logical .)
    NEW             reduce using rule 35 (assignment -> logical .)
    NUMBER          reduce using rule 35 (assignment -> logical .)
    TRUE            reduce using rule 35 (assignment -> logical .)
    FALSE           reduce using rule 35 (assignment -> logical .)
    LPAREN          reduce using rule 35 (assignment -> logical .)
    NOT             reduce using rule 35 (assignment -> logical .)
    MINUS           reduce using rule 35 (assignment -> logical .)
    $end            reduce using rule 35 (assignment -> logical .)
    RPAREN          reduce using rule 35 (assignment -> logical .)
    THEN            reduce using rule 35 (assignment -> logical .)
    RBRACE          reduce using rule 35 (assignment -> logical .)
    COMMA           reduce using rule 35 (assignment -> logical .)
    OR              shift and go to state 54
    AND             shift and go to state 55


state 28

    (56) property -> NEW . primary LPAREN RPAREN
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    primary                        shift and go to state 56

state 29

    (62) call -> primary . LPAREN arguments RPAREN
    (63) call -> primary .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 57
    ASSIGN          reduce using rule 63 (call -> primary .)
    DOT             reduce using rule 63 (call -> primary .)
    TIMES           reduce using rule 63 (call -> primary .)
    DIVIDE          reduce using rule 63 (call -> primary .)
    PLUS            reduce using rule 63 (call -> primary .)
    MINUS           reduce using rule 63 (call -> primary .)
    GREATER         reduce using rule 63 (call -> primary .)
    LESS            reduce using rule 63 (call -> primary .)
    GREATEROREQUAL  reduce using rule 63 (call -> primary .)
    LESSOREQUAL     reduce using rule 63 (call -> primary .)
    EQUALS          reduce using rule 63 (call -> primary .)
    NOTEQUALS       reduce using rule 63 (call -> primary .)
    OR              reduce using rule 63 (call -> primary .)
    AND             reduce using rule 63 (call -> primary .)
    FUNC            reduce using rule 63 (call -> primary .)
    CLASS           reduce using rule 63 (call -> primary .)
    INT             reduce using rule 63 (call -> primary .)
    BOOL            reduce using rule 63 (call -> primary .)
    VOID            reduce using rule 63 (call -> primary .)
    ID              reduce using rule 63 (call -> primary .)
    IF              reduce using rule 63 (call -> primary .)
    WHILE           reduce using rule 63 (call -> primary .)
    PRINT           reduce using rule 63 (call -> primary .)
    RETURN          reduce using rule 63 (call -> primary .)
    NEW             reduce using rule 63 (call -> primary .)
    NUMBER          reduce using rule 63 (call -> primary .)
    TRUE            reduce using rule 63 (call -> primary .)
    FALSE           reduce using rule 63 (call -> primary .)
    NOT             reduce using rule 63 (call -> primary .)
    $end            reduce using rule 63 (call -> primary .)
    RPAREN          reduce using rule 63 (call -> primary .)
    THEN            reduce using rule 63 (call -> primary .)
    RBRACE          reduce using rule 63 (call -> primary .)
    COMMA           reduce using rule 63 (call -> primary .)

  ! LPAREN          [ reduce using rule 63 (call -> primary .) ]


state 30

    (61) property -> call .

    ASSIGN          reduce using rule 61 (property -> call .)
    DOT             reduce using rule 61 (property -> call .)
    LPAREN          reduce using rule 61 (property -> call .)
    TIMES           reduce using rule 61 (property -> call .)
    DIVIDE          reduce using rule 61 (property -> call .)
    PLUS            reduce using rule 61 (property -> call .)
    MINUS           reduce using rule 61 (property -> call .)
    GREATER         reduce using rule 61 (property -> call .)
    LESS            reduce using rule 61 (property -> call .)
    GREATEROREQUAL  reduce using rule 61 (property -> call .)
    LESSOREQUAL     reduce using rule 61 (property -> call .)
    EQUALS          reduce using rule 61 (property -> call .)
    NOTEQUALS       reduce using rule 61 (property -> call .)
    OR              reduce using rule 61 (property -> call .)
    AND             reduce using rule 61 (property -> call .)
    FUNC            reduce using rule 61 (property -> call .)
    CLASS           reduce using rule 61 (property -> call .)
    INT             reduce using rule 61 (property -> call .)
    BOOL            reduce using rule 61 (property -> call .)
    VOID            reduce using rule 61 (property -> call .)
    ID              reduce using rule 61 (property -> call .)
    IF              reduce using rule 61 (property -> call .)
    WHILE           reduce using rule 61 (property -> call .)
    PRINT           reduce using rule 61 (property -> call .)
    RETURN          reduce using rule 61 (property -> call .)
    NEW             reduce using rule 61 (property -> call .)
    NUMBER          reduce using rule 61 (property -> call .)
    TRUE            reduce using rule 61 (property -> call .)
    FALSE           reduce using rule 61 (property -> call .)
    NOT             reduce using rule 61 (property -> call .)
    $end            reduce using rule 61 (property -> call .)
    RPAREN          reduce using rule 61 (property -> call .)
    THEN            reduce using rule 61 (property -> call .)
    RBRACE          reduce using rule 61 (property -> call .)
    COMMA           reduce using rule 61 (property -> call .)


state 31

    (38) logical -> equality .
    (39) equality -> equality . EQUALS comparison
    (40) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 38 (logical -> equality .)
    AND             reduce using rule 38 (logical -> equality .)
    FUNC            reduce using rule 38 (logical -> equality .)
    CLASS           reduce using rule 38 (logical -> equality .)
    INT             reduce using rule 38 (logical -> equality .)
    BOOL            reduce using rule 38 (logical -> equality .)
    VOID            reduce using rule 38 (logical -> equality .)
    ID              reduce using rule 38 (logical -> equality .)
    IF              reduce using rule 38 (logical -> equality .)
    WHILE           reduce using rule 38 (logical -> equality .)
    PRINT           reduce using rule 38 (logical -> equality .)
    RETURN          reduce using rule 38 (logical -> equality .)
    NEW             reduce using rule 38 (logical -> equality .)
    NUMBER          reduce using rule 38 (logical -> equality .)
    TRUE            reduce using rule 38 (logical -> equality .)
    FALSE           reduce using rule 38 (logical -> equality .)
    LPAREN          reduce using rule 38 (logical -> equality .)
    NOT             reduce using rule 38 (logical -> equality .)
    MINUS           reduce using rule 38 (logical -> equality .)
    $end            reduce using rule 38 (logical -> equality .)
    RPAREN          reduce using rule 38 (logical -> equality .)
    THEN            reduce using rule 38 (logical -> equality .)
    RBRACE          reduce using rule 38 (logical -> equality .)
    COMMA           reduce using rule 38 (logical -> equality .)
    EQUALS          shift and go to state 58
    NOTEQUALS       shift and go to state 59


state 32

    (41) equality -> comparison .
    (42) comparison -> comparison . GREATER term
    (43) comparison -> comparison . LESS term
    (44) comparison -> comparison . GREATEROREQUAL term
    (45) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 41 (equality -> comparison .)
    NOTEQUALS       reduce using rule 41 (equality -> comparison .)
    OR              reduce using rule 41 (equality -> comparison .)
    AND             reduce using rule 41 (equality -> comparison .)
    FUNC            reduce using rule 41 (equality -> comparison .)
    CLASS           reduce using rule 41 (equality -> comparison .)
    INT             reduce using rule 41 (equality -> comparison .)
    BOOL            reduce using rule 41 (equality -> comparison .)
    VOID            reduce using rule 41 (equality -> comparison .)
    ID              reduce using rule 41 (equality -> comparison .)
    IF              reduce using rule 41 (equality -> comparison .)
    WHILE           reduce using rule 41 (equality -> comparison .)
    PRINT           reduce using rule 41 (equality -> comparison .)
    RETURN          reduce using rule 41 (equality -> comparison .)
    NEW             reduce using rule 41 (equality -> comparison .)
    NUMBER          reduce using rule 41 (equality -> comparison .)
    TRUE            reduce using rule 41 (equality -> comparison .)
    FALSE           reduce using rule 41 (equality -> comparison .)
    LPAREN          reduce using rule 41 (equality -> comparison .)
    NOT             reduce using rule 41 (equality -> comparison .)
    MINUS           reduce using rule 41 (equality -> comparison .)
    $end            reduce using rule 41 (equality -> comparison .)
    RPAREN          reduce using rule 41 (equality -> comparison .)
    THEN            reduce using rule 41 (equality -> comparison .)
    RBRACE          reduce using rule 41 (equality -> comparison .)
    COMMA           reduce using rule 41 (equality -> comparison .)
    GREATER         shift and go to state 60
    LESS            shift and go to state 61
    GREATEROREQUAL  shift and go to state 62
    LESSOREQUAL     shift and go to state 63


state 33

    (64) primary -> NUMBER .

    LPAREN          reduce using rule 64 (primary -> NUMBER .)
    ASSIGN          reduce using rule 64 (primary -> NUMBER .)
    DOT             reduce using rule 64 (primary -> NUMBER .)
    TIMES           reduce using rule 64 (primary -> NUMBER .)
    DIVIDE          reduce using rule 64 (primary -> NUMBER .)
    PLUS            reduce using rule 64 (primary -> NUMBER .)
    MINUS           reduce using rule 64 (primary -> NUMBER .)
    GREATER         reduce using rule 64 (primary -> NUMBER .)
    LESS            reduce using rule 64 (primary -> NUMBER .)
    GREATEROREQUAL  reduce using rule 64 (primary -> NUMBER .)
    LESSOREQUAL     reduce using rule 64 (primary -> NUMBER .)
    EQUALS          reduce using rule 64 (primary -> NUMBER .)
    NOTEQUALS       reduce using rule 64 (primary -> NUMBER .)
    OR              reduce using rule 64 (primary -> NUMBER .)
    AND             reduce using rule 64 (primary -> NUMBER .)
    FUNC            reduce using rule 64 (primary -> NUMBER .)
    CLASS           reduce using rule 64 (primary -> NUMBER .)
    INT             reduce using rule 64 (primary -> NUMBER .)
    BOOL            reduce using rule 64 (primary -> NUMBER .)
    VOID            reduce using rule 64 (primary -> NUMBER .)
    ID              reduce using rule 64 (primary -> NUMBER .)
    IF              reduce using rule 64 (primary -> NUMBER .)
    WHILE           reduce using rule 64 (primary -> NUMBER .)
    PRINT           reduce using rule 64 (primary -> NUMBER .)
    RETURN          reduce using rule 64 (primary -> NUMBER .)
    NEW             reduce using rule 64 (primary -> NUMBER .)
    NUMBER          reduce using rule 64 (primary -> NUMBER .)
    TRUE            reduce using rule 64 (primary -> NUMBER .)
    FALSE           reduce using rule 64 (primary -> NUMBER .)
    NOT             reduce using rule 64 (primary -> NUMBER .)
    $end            reduce using rule 64 (primary -> NUMBER .)
    RPAREN          reduce using rule 64 (primary -> NUMBER .)
    THEN            reduce using rule 64 (primary -> NUMBER .)
    RBRACE          reduce using rule 64 (primary -> NUMBER .)
    COMMA           reduce using rule 64 (primary -> NUMBER .)


state 34

    (66) primary -> TRUE .

    LPAREN          reduce using rule 66 (primary -> TRUE .)
    ASSIGN          reduce using rule 66 (primary -> TRUE .)
    DOT             reduce using rule 66 (primary -> TRUE .)
    TIMES           reduce using rule 66 (primary -> TRUE .)
    DIVIDE          reduce using rule 66 (primary -> TRUE .)
    PLUS            reduce using rule 66 (primary -> TRUE .)
    MINUS           reduce using rule 66 (primary -> TRUE .)
    GREATER         reduce using rule 66 (primary -> TRUE .)
    LESS            reduce using rule 66 (primary -> TRUE .)
    GREATEROREQUAL  reduce using rule 66 (primary -> TRUE .)
    LESSOREQUAL     reduce using rule 66 (primary -> TRUE .)
    EQUALS          reduce using rule 66 (primary -> TRUE .)
    NOTEQUALS       reduce using rule 66 (primary -> TRUE .)
    OR              reduce using rule 66 (primary -> TRUE .)
    AND             reduce using rule 66 (primary -> TRUE .)
    FUNC            reduce using rule 66 (primary -> TRUE .)
    CLASS           reduce using rule 66 (primary -> TRUE .)
    INT             reduce using rule 66 (primary -> TRUE .)
    BOOL            reduce using rule 66 (primary -> TRUE .)
    VOID            reduce using rule 66 (primary -> TRUE .)
    ID              reduce using rule 66 (primary -> TRUE .)
    IF              reduce using rule 66 (primary -> TRUE .)
    WHILE           reduce using rule 66 (primary -> TRUE .)
    PRINT           reduce using rule 66 (primary -> TRUE .)
    RETURN          reduce using rule 66 (primary -> TRUE .)
    NEW             reduce using rule 66 (primary -> TRUE .)
    NUMBER          reduce using rule 66 (primary -> TRUE .)
    TRUE            reduce using rule 66 (primary -> TRUE .)
    FALSE           reduce using rule 66 (primary -> TRUE .)
    NOT             reduce using rule 66 (primary -> TRUE .)
    $end            reduce using rule 66 (primary -> TRUE .)
    RPAREN          reduce using rule 66 (primary -> TRUE .)
    THEN            reduce using rule 66 (primary -> TRUE .)
    RBRACE          reduce using rule 66 (primary -> TRUE .)
    COMMA           reduce using rule 66 (primary -> TRUE .)


state 35

    (67) primary -> FALSE .

    LPAREN          reduce using rule 67 (primary -> FALSE .)
    ASSIGN          reduce using rule 67 (primary -> FALSE .)
    DOT             reduce using rule 67 (primary -> FALSE .)
    TIMES           reduce using rule 67 (primary -> FALSE .)
    DIVIDE          reduce using rule 67 (primary -> FALSE .)
    PLUS            reduce using rule 67 (primary -> FALSE .)
    MINUS           reduce using rule 67 (primary -> FALSE .)
    GREATER         reduce using rule 67 (primary -> FALSE .)
    LESS            reduce using rule 67 (primary -> FALSE .)
    GREATEROREQUAL  reduce using rule 67 (primary -> FALSE .)
    LESSOREQUAL     reduce using rule 67 (primary -> FALSE .)
    EQUALS          reduce using rule 67 (primary -> FALSE .)
    NOTEQUALS       reduce using rule 67 (primary -> FALSE .)
    OR              reduce using rule 67 (primary -> FALSE .)
    AND             reduce using rule 67 (primary -> FALSE .)
    FUNC            reduce using rule 67 (primary -> FALSE .)
    CLASS           reduce using rule 67 (primary -> FALSE .)
    INT             reduce using rule 67 (primary -> FALSE .)
    BOOL            reduce using rule 67 (primary -> FALSE .)
    VOID            reduce using rule 67 (primary -> FALSE .)
    ID              reduce using rule 67 (primary -> FALSE .)
    IF              reduce using rule 67 (primary -> FALSE .)
    WHILE           reduce using rule 67 (primary -> FALSE .)
    PRINT           reduce using rule 67 (primary -> FALSE .)
    RETURN          reduce using rule 67 (primary -> FALSE .)
    NEW             reduce using rule 67 (primary -> FALSE .)
    NUMBER          reduce using rule 67 (primary -> FALSE .)
    TRUE            reduce using rule 67 (primary -> FALSE .)
    FALSE           reduce using rule 67 (primary -> FALSE .)
    NOT             reduce using rule 67 (primary -> FALSE .)
    $end            reduce using rule 67 (primary -> FALSE .)
    RPAREN          reduce using rule 67 (primary -> FALSE .)
    THEN            reduce using rule 67 (primary -> FALSE .)
    RBRACE          reduce using rule 67 (primary -> FALSE .)
    COMMA           reduce using rule 67 (primary -> FALSE .)


state 36

    (46) comparison -> term .
    (47) term -> term . PLUS factor
    (48) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 46 (comparison -> term .)
    LESS            reduce using rule 46 (comparison -> term .)
    GREATEROREQUAL  reduce using rule 46 (comparison -> term .)
    LESSOREQUAL     reduce using rule 46 (comparison -> term .)
    EQUALS          reduce using rule 46 (comparison -> term .)
    NOTEQUALS       reduce using rule 46 (comparison -> term .)
    OR              reduce using rule 46 (comparison -> term .)
    AND             reduce using rule 46 (comparison -> term .)
    FUNC            reduce using rule 46 (comparison -> term .)
    CLASS           reduce using rule 46 (comparison -> term .)
    INT             reduce using rule 46 (comparison -> term .)
    BOOL            reduce using rule 46 (comparison -> term .)
    VOID            reduce using rule 46 (comparison -> term .)
    ID              reduce using rule 46 (comparison -> term .)
    IF              reduce using rule 46 (comparison -> term .)
    WHILE           reduce using rule 46 (comparison -> term .)
    PRINT           reduce using rule 46 (comparison -> term .)
    RETURN          reduce using rule 46 (comparison -> term .)
    NEW             reduce using rule 46 (comparison -> term .)
    NUMBER          reduce using rule 46 (comparison -> term .)
    TRUE            reduce using rule 46 (comparison -> term .)
    FALSE           reduce using rule 46 (comparison -> term .)
    LPAREN          reduce using rule 46 (comparison -> term .)
    NOT             reduce using rule 46 (comparison -> term .)
    $end            reduce using rule 46 (comparison -> term .)
    RPAREN          reduce using rule 46 (comparison -> term .)
    THEN            reduce using rule 46 (comparison -> term .)
    RBRACE          reduce using rule 46 (comparison -> term .)
    COMMA           reduce using rule 46 (comparison -> term .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65

  ! MINUS           [ reduce using rule 46 (comparison -> term .) ]


state 37

    (49) term -> factor .
    (50) factor -> factor . TIMES unary
    (51) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 49 (term -> factor .)
    MINUS           reduce using rule 49 (term -> factor .)
    GREATER         reduce using rule 49 (term -> factor .)
    LESS            reduce using rule 49 (term -> factor .)
    GREATEROREQUAL  reduce using rule 49 (term -> factor .)
    LESSOREQUAL     reduce using rule 49 (term -> factor .)
    EQUALS          reduce using rule 49 (term -> factor .)
    NOTEQUALS       reduce using rule 49 (term -> factor .)
    OR              reduce using rule 49 (term -> factor .)
    AND             reduce using rule 49 (term -> factor .)
    FUNC            reduce using rule 49 (term -> factor .)
    CLASS           reduce using rule 49 (term -> factor .)
    INT             reduce using rule 49 (term -> factor .)
    BOOL            reduce using rule 49 (term -> factor .)
    VOID            reduce using rule 49 (term -> factor .)
    ID              reduce using rule 49 (term -> factor .)
    IF              reduce using rule 49 (term -> factor .)
    WHILE           reduce using rule 49 (term -> factor .)
    PRINT           reduce using rule 49 (term -> factor .)
    RETURN          reduce using rule 49 (term -> factor .)
    NEW             reduce using rule 49 (term -> factor .)
    NUMBER          reduce using rule 49 (term -> factor .)
    TRUE            reduce using rule 49 (term -> factor .)
    FALSE           reduce using rule 49 (term -> factor .)
    LPAREN          reduce using rule 49 (term -> factor .)
    NOT             reduce using rule 49 (term -> factor .)
    $end            reduce using rule 49 (term -> factor .)
    RPAREN          reduce using rule 49 (term -> factor .)
    THEN            reduce using rule 49 (term -> factor .)
    RBRACE          reduce using rule 49 (term -> factor .)
    COMMA           reduce using rule 49 (term -> factor .)
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67


state 38

    (54) unary -> MINUS . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    unary                          shift and go to state 68
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 39

    (52) factor -> unary .

    TIMES           reduce using rule 52 (factor -> unary .)
    DIVIDE          reduce using rule 52 (factor -> unary .)
    PLUS            reduce using rule 52 (factor -> unary .)
    MINUS           reduce using rule 52 (factor -> unary .)
    GREATER         reduce using rule 52 (factor -> unary .)
    LESS            reduce using rule 52 (factor -> unary .)
    GREATEROREQUAL  reduce using rule 52 (factor -> unary .)
    LESSOREQUAL     reduce using rule 52 (factor -> unary .)
    EQUALS          reduce using rule 52 (factor -> unary .)
    NOTEQUALS       reduce using rule 52 (factor -> unary .)
    OR              reduce using rule 52 (factor -> unary .)
    AND             reduce using rule 52 (factor -> unary .)
    FUNC            reduce using rule 52 (factor -> unary .)
    CLASS           reduce using rule 52 (factor -> unary .)
    INT             reduce using rule 52 (factor -> unary .)
    BOOL            reduce using rule 52 (factor -> unary .)
    VOID            reduce using rule 52 (factor -> unary .)
    ID              reduce using rule 52 (factor -> unary .)
    IF              reduce using rule 52 (factor -> unary .)
    WHILE           reduce using rule 52 (factor -> unary .)
    PRINT           reduce using rule 52 (factor -> unary .)
    RETURN          reduce using rule 52 (factor -> unary .)
    NEW             reduce using rule 52 (factor -> unary .)
    NUMBER          reduce using rule 52 (factor -> unary .)
    TRUE            reduce using rule 52 (factor -> unary .)
    FALSE           reduce using rule 52 (factor -> unary .)
    LPAREN          reduce using rule 52 (factor -> unary .)
    NOT             reduce using rule 52 (factor -> unary .)
    $end            reduce using rule 52 (factor -> unary .)
    RPAREN          reduce using rule 52 (factor -> unary .)
    THEN            reduce using rule 52 (factor -> unary .)
    RBRACE          reduce using rule 52 (factor -> unary .)
    COMMA           reduce using rule 52 (factor -> unary .)


state 40

    (53) unary -> NOT . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    unary                          shift and go to state 70
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 41

    (3) declaration_list -> declaration_list declaration .

    FUNC            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    CLASS           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    BOOL            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 3 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 3 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    PRINT           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    RETURN          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NEW             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NUMBER          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    TRUE            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    FALSE           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NOT             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    MINUS           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    RBRACE          reduce using rule 3 (declaration_list -> declaration_list declaration .)


state 42

    (27) varDeclaration -> type ID .
    (28) varDeclaration -> type ID . ASSIGN expression

    FUNC            reduce using rule 27 (varDeclaration -> type ID .)
    CLASS           reduce using rule 27 (varDeclaration -> type ID .)
    INT             reduce using rule 27 (varDeclaration -> type ID .)
    BOOL            reduce using rule 27 (varDeclaration -> type ID .)
    VOID            reduce using rule 27 (varDeclaration -> type ID .)
    ID              reduce using rule 27 (varDeclaration -> type ID .)
    IF              reduce using rule 27 (varDeclaration -> type ID .)
    WHILE           reduce using rule 27 (varDeclaration -> type ID .)
    PRINT           reduce using rule 27 (varDeclaration -> type ID .)
    RETURN          reduce using rule 27 (varDeclaration -> type ID .)
    NEW             reduce using rule 27 (varDeclaration -> type ID .)
    NUMBER          reduce using rule 27 (varDeclaration -> type ID .)
    TRUE            reduce using rule 27 (varDeclaration -> type ID .)
    FALSE           reduce using rule 27 (varDeclaration -> type ID .)
    LPAREN          reduce using rule 27 (varDeclaration -> type ID .)
    NOT             reduce using rule 27 (varDeclaration -> type ID .)
    MINUS           reduce using rule 27 (varDeclaration -> type ID .)
    $end            reduce using rule 27 (varDeclaration -> type ID .)
    RBRACE          reduce using rule 27 (varDeclaration -> type ID .)
    ASSIGN          shift and go to state 71


state 43

    (72) funcDeclaration -> FUNC ID . LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE

    LPAREN          shift and go to state 72


state 44

    (68) primary -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 73


state 45

    (65) primary -> ID .

    LPAREN          reduce using rule 65 (primary -> ID .)
    ASSIGN          reduce using rule 65 (primary -> ID .)
    DOT             reduce using rule 65 (primary -> ID .)
    TIMES           reduce using rule 65 (primary -> ID .)
    DIVIDE          reduce using rule 65 (primary -> ID .)
    PLUS            reduce using rule 65 (primary -> ID .)
    MINUS           reduce using rule 65 (primary -> ID .)
    GREATER         reduce using rule 65 (primary -> ID .)
    LESS            reduce using rule 65 (primary -> ID .)
    GREATEROREQUAL  reduce using rule 65 (primary -> ID .)
    LESSOREQUAL     reduce using rule 65 (primary -> ID .)
    EQUALS          reduce using rule 65 (primary -> ID .)
    NOTEQUALS       reduce using rule 65 (primary -> ID .)
    OR              reduce using rule 65 (primary -> ID .)
    AND             reduce using rule 65 (primary -> ID .)
    RPAREN          reduce using rule 65 (primary -> ID .)
    THEN            reduce using rule 65 (primary -> ID .)
    FUNC            reduce using rule 65 (primary -> ID .)
    CLASS           reduce using rule 65 (primary -> ID .)
    INT             reduce using rule 65 (primary -> ID .)
    BOOL            reduce using rule 65 (primary -> ID .)
    VOID            reduce using rule 65 (primary -> ID .)
    ID              reduce using rule 65 (primary -> ID .)
    IF              reduce using rule 65 (primary -> ID .)
    WHILE           reduce using rule 65 (primary -> ID .)
    PRINT           reduce using rule 65 (primary -> ID .)
    RETURN          reduce using rule 65 (primary -> ID .)
    NEW             reduce using rule 65 (primary -> ID .)
    NUMBER          reduce using rule 65 (primary -> ID .)
    TRUE            reduce using rule 65 (primary -> ID .)
    FALSE           reduce using rule 65 (primary -> ID .)
    NOT             reduce using rule 65 (primary -> ID .)
    $end            reduce using rule 65 (primary -> ID .)
    RBRACE          reduce using rule 65 (primary -> ID .)
    COMMA           reduce using rule 65 (primary -> ID .)


state 46

    (8) class -> CLASS ID . extends LBRACE classDeclarationList RBRACE
    (9) extends -> . EXTENDS ID
    (10) extends -> . empty
    (78) empty -> .

    EXTENDS         shift and go to state 75
    LBRACE          reduce using rule 78 (empty -> .)

    extends                        shift and go to state 74
    empty                          shift and go to state 76

state 47

    (23) ifStatement -> IF expression . THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> IF expression . THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE

    THEN            shift and go to state 77


state 48

    (25) whileStatement -> WHILE expression . THEN LBRACE declaration_list RBRACE

    THEN            shift and go to state 78


state 49

    (26) printStatement -> PRINT expression .

    FUNC            reduce using rule 26 (printStatement -> PRINT expression .)
    CLASS           reduce using rule 26 (printStatement -> PRINT expression .)
    INT             reduce using rule 26 (printStatement -> PRINT expression .)
    BOOL            reduce using rule 26 (printStatement -> PRINT expression .)
    VOID            reduce using rule 26 (printStatement -> PRINT expression .)
    ID              reduce using rule 26 (printStatement -> PRINT expression .)
    IF              reduce using rule 26 (printStatement -> PRINT expression .)
    WHILE           reduce using rule 26 (printStatement -> PRINT expression .)
    PRINT           reduce using rule 26 (printStatement -> PRINT expression .)
    RETURN          reduce using rule 26 (printStatement -> PRINT expression .)
    NEW             reduce using rule 26 (printStatement -> PRINT expression .)
    NUMBER          reduce using rule 26 (printStatement -> PRINT expression .)
    TRUE            reduce using rule 26 (printStatement -> PRINT expression .)
    FALSE           reduce using rule 26 (printStatement -> PRINT expression .)
    LPAREN          reduce using rule 26 (printStatement -> PRINT expression .)
    NOT             reduce using rule 26 (printStatement -> PRINT expression .)
    MINUS           reduce using rule 26 (printStatement -> PRINT expression .)
    $end            reduce using rule 26 (printStatement -> PRINT expression .)
    RBRACE          reduce using rule 26 (printStatement -> PRINT expression .)


state 50

    (21) returnStatement -> RETURN expression .

    FUNC            reduce using rule 21 (returnStatement -> RETURN expression .)
    CLASS           reduce using rule 21 (returnStatement -> RETURN expression .)
    INT             reduce using rule 21 (returnStatement -> RETURN expression .)
    BOOL            reduce using rule 21 (returnStatement -> RETURN expression .)
    VOID            reduce using rule 21 (returnStatement -> RETURN expression .)
    ID              reduce using rule 21 (returnStatement -> RETURN expression .)
    IF              reduce using rule 21 (returnStatement -> RETURN expression .)
    WHILE           reduce using rule 21 (returnStatement -> RETURN expression .)
    PRINT           reduce using rule 21 (returnStatement -> RETURN expression .)
    RETURN          reduce using rule 21 (returnStatement -> RETURN expression .)
    NEW             reduce using rule 21 (returnStatement -> RETURN expression .)
    NUMBER          reduce using rule 21 (returnStatement -> RETURN expression .)
    TRUE            reduce using rule 21 (returnStatement -> RETURN expression .)
    FALSE           reduce using rule 21 (returnStatement -> RETURN expression .)
    LPAREN          reduce using rule 21 (returnStatement -> RETURN expression .)
    NOT             reduce using rule 21 (returnStatement -> RETURN expression .)
    MINUS           reduce using rule 21 (returnStatement -> RETURN expression .)
    $end            reduce using rule 21 (returnStatement -> RETURN expression .)
    RBRACE          reduce using rule 21 (returnStatement -> RETURN expression .)


state 51

    (34) assignment -> property ASSIGN . logical
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    property                       shift and go to state 69
    logical                        shift and go to state 79
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 52

    (57) property -> property DOT . ID

    ID              shift and go to state 80


state 53

    (58) property -> property LPAREN . arguments RPAREN
    (69) arguments -> . arguments COMMA expression
    (70) arguments -> . expression
    (71) arguments -> .
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RPAREN          reduce using rule 71 (arguments -> .)
    COMMA           reduce using rule 71 (arguments -> .)
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    property                       shift and go to state 26
    arguments                      shift and go to state 81
    expression                     shift and go to state 82
    assignment                     shift and go to state 21
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 54

    (36) logical -> logical OR . equality
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    equality                       shift and go to state 83
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 55

    (37) logical -> logical AND . equality
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    equality                       shift and go to state 84
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 56

    (56) property -> NEW primary . LPAREN RPAREN

    LPAREN          shift and go to state 85


state 57

    (62) call -> primary LPAREN . arguments RPAREN
    (69) arguments -> . arguments COMMA expression
    (70) arguments -> . expression
    (71) arguments -> .
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RPAREN          reduce using rule 71 (arguments -> .)
    COMMA           reduce using rule 71 (arguments -> .)
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    primary                        shift and go to state 29
    arguments                      shift and go to state 86
    expression                     shift and go to state 82
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 58

    (39) equality -> equality EQUALS . comparison
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 87
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 59

    (40) equality -> equality NOTEQUALS . comparison
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 88
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 60

    (42) comparison -> comparison GREATER . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    term                           shift and go to state 89
    factor                         shift and go to state 37
    unary                          shift and go to state 39
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 61

    (43) comparison -> comparison LESS . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    term                           shift and go to state 90
    factor                         shift and go to state 37
    unary                          shift and go to state 39
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 62

    (44) comparison -> comparison GREATEROREQUAL . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    term                           shift and go to state 91
    factor                         shift and go to state 37
    unary                          shift and go to state 39
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 63

    (45) comparison -> comparison LESSOREQUAL . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    term                           shift and go to state 92
    factor                         shift and go to state 37
    unary                          shift and go to state 39
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 64

    (47) term -> term PLUS . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    factor                         shift and go to state 93
    unary                          shift and go to state 39
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 65

    (48) term -> term MINUS . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    factor                         shift and go to state 94
    unary                          shift and go to state 39
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 66

    (50) factor -> factor TIMES . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    unary                          shift and go to state 95
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 67

    (51) factor -> factor DIVIDE . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 40
    MINUS           shift and go to state 38
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16

    unary                          shift and go to state 96
    property                       shift and go to state 69
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 68

    (54) unary -> MINUS unary .

    TIMES           reduce using rule 54 (unary -> MINUS unary .)
    DIVIDE          reduce using rule 54 (unary -> MINUS unary .)
    PLUS            reduce using rule 54 (unary -> MINUS unary .)
    MINUS           reduce using rule 54 (unary -> MINUS unary .)
    GREATER         reduce using rule 54 (unary -> MINUS unary .)
    LESS            reduce using rule 54 (unary -> MINUS unary .)
    GREATEROREQUAL  reduce using rule 54 (unary -> MINUS unary .)
    LESSOREQUAL     reduce using rule 54 (unary -> MINUS unary .)
    EQUALS          reduce using rule 54 (unary -> MINUS unary .)
    NOTEQUALS       reduce using rule 54 (unary -> MINUS unary .)
    OR              reduce using rule 54 (unary -> MINUS unary .)
    AND             reduce using rule 54 (unary -> MINUS unary .)
    FUNC            reduce using rule 54 (unary -> MINUS unary .)
    CLASS           reduce using rule 54 (unary -> MINUS unary .)
    INT             reduce using rule 54 (unary -> MINUS unary .)
    BOOL            reduce using rule 54 (unary -> MINUS unary .)
    VOID            reduce using rule 54 (unary -> MINUS unary .)
    ID              reduce using rule 54 (unary -> MINUS unary .)
    IF              reduce using rule 54 (unary -> MINUS unary .)
    WHILE           reduce using rule 54 (unary -> MINUS unary .)
    PRINT           reduce using rule 54 (unary -> MINUS unary .)
    RETURN          reduce using rule 54 (unary -> MINUS unary .)
    NEW             reduce using rule 54 (unary -> MINUS unary .)
    NUMBER          reduce using rule 54 (unary -> MINUS unary .)
    TRUE            reduce using rule 54 (unary -> MINUS unary .)
    FALSE           reduce using rule 54 (unary -> MINUS unary .)
    LPAREN          reduce using rule 54 (unary -> MINUS unary .)
    NOT             reduce using rule 54 (unary -> MINUS unary .)
    $end            reduce using rule 54 (unary -> MINUS unary .)
    RPAREN          reduce using rule 54 (unary -> MINUS unary .)
    THEN            reduce using rule 54 (unary -> MINUS unary .)
    RBRACE          reduce using rule 54 (unary -> MINUS unary .)
    COMMA           reduce using rule 54 (unary -> MINUS unary .)


state 69

    (55) unary -> property .
    (57) property -> property . DOT ID
    (58) property -> property . LPAREN arguments RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    TIMES           reduce using rule 55 (unary -> property .)
    DIVIDE          reduce using rule 55 (unary -> property .)
    PLUS            reduce using rule 55 (unary -> property .)
    MINUS           reduce using rule 55 (unary -> property .)
    GREATER         reduce using rule 55 (unary -> property .)
    LESS            reduce using rule 55 (unary -> property .)
    GREATEROREQUAL  reduce using rule 55 (unary -> property .)
    LESSOREQUAL     reduce using rule 55 (unary -> property .)
    EQUALS          reduce using rule 55 (unary -> property .)
    NOTEQUALS       reduce using rule 55 (unary -> property .)
    OR              reduce using rule 55 (unary -> property .)
    AND             reduce using rule 55 (unary -> property .)
    FUNC            reduce using rule 55 (unary -> property .)
    CLASS           reduce using rule 55 (unary -> property .)
    INT             reduce using rule 55 (unary -> property .)
    BOOL            reduce using rule 55 (unary -> property .)
    VOID            reduce using rule 55 (unary -> property .)
    ID              reduce using rule 55 (unary -> property .)
    IF              reduce using rule 55 (unary -> property .)
    WHILE           reduce using rule 55 (unary -> property .)
    PRINT           reduce using rule 55 (unary -> property .)
    RETURN          reduce using rule 55 (unary -> property .)
    NEW             reduce using rule 55 (unary -> property .)
    NUMBER          reduce using rule 55 (unary -> property .)
    TRUE            reduce using rule 55 (unary -> property .)
    FALSE           reduce using rule 55 (unary -> property .)
    NOT             reduce using rule 55 (unary -> property .)
    $end            reduce using rule 55 (unary -> property .)
    RPAREN          reduce using rule 55 (unary -> property .)
    THEN            reduce using rule 55 (unary -> property .)
    RBRACE          reduce using rule 55 (unary -> property .)
    COMMA           reduce using rule 55 (unary -> property .)
    DOT             shift and go to state 52
    LPAREN          shift and go to state 53

  ! LPAREN          [ reduce using rule 55 (unary -> property .) ]


state 70

    (53) unary -> NOT unary .

    TIMES           reduce using rule 53 (unary -> NOT unary .)
    DIVIDE          reduce using rule 53 (unary -> NOT unary .)
    PLUS            reduce using rule 53 (unary -> NOT unary .)
    MINUS           reduce using rule 53 (unary -> NOT unary .)
    GREATER         reduce using rule 53 (unary -> NOT unary .)
    LESS            reduce using rule 53 (unary -> NOT unary .)
    GREATEROREQUAL  reduce using rule 53 (unary -> NOT unary .)
    LESSOREQUAL     reduce using rule 53 (unary -> NOT unary .)
    EQUALS          reduce using rule 53 (unary -> NOT unary .)
    NOTEQUALS       reduce using rule 53 (unary -> NOT unary .)
    OR              reduce using rule 53 (unary -> NOT unary .)
    AND             reduce using rule 53 (unary -> NOT unary .)
    FUNC            reduce using rule 53 (unary -> NOT unary .)
    CLASS           reduce using rule 53 (unary -> NOT unary .)
    INT             reduce using rule 53 (unary -> NOT unary .)
    BOOL            reduce using rule 53 (unary -> NOT unary .)
    VOID            reduce using rule 53 (unary -> NOT unary .)
    ID              reduce using rule 53 (unary -> NOT unary .)
    IF              reduce using rule 53 (unary -> NOT unary .)
    WHILE           reduce using rule 53 (unary -> NOT unary .)
    PRINT           reduce using rule 53 (unary -> NOT unary .)
    RETURN          reduce using rule 53 (unary -> NOT unary .)
    NEW             reduce using rule 53 (unary -> NOT unary .)
    NUMBER          reduce using rule 53 (unary -> NOT unary .)
    TRUE            reduce using rule 53 (unary -> NOT unary .)
    FALSE           reduce using rule 53 (unary -> NOT unary .)
    LPAREN          reduce using rule 53 (unary -> NOT unary .)
    NOT             reduce using rule 53 (unary -> NOT unary .)
    $end            reduce using rule 53 (unary -> NOT unary .)
    RPAREN          reduce using rule 53 (unary -> NOT unary .)
    THEN            reduce using rule 53 (unary -> NOT unary .)
    RBRACE          reduce using rule 53 (unary -> NOT unary .)
    COMMA           reduce using rule 53 (unary -> NOT unary .)


state 71

    (28) varDeclaration -> type ID ASSIGN . expression
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 97
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 72

    (72) funcDeclaration -> FUNC ID LPAREN . parameter_list RPAREN type LBRACE declaration_list RBRACE
    (73) parameter_list -> . parameter_list COMMA ID
    (74) parameter_list -> . ID
    (75) parameter_list -> . parameter_list COMMA type ID
    (76) parameter_list -> . type ID
    (77) parameter_list -> .
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    ID              shift and go to state 98
    RPAREN          reduce using rule 77 (parameter_list -> .)
    COMMA           reduce using rule 77 (parameter_list -> .)
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20

    parameter_list                 shift and go to state 99
    type                           shift and go to state 100

state 73

    (68) primary -> LPAREN expression RPAREN .

    LPAREN          reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    DOT             reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    LESS            reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    GREATEROREQUAL  reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    LESSOREQUAL     reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    OR              reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    AND             reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    FUNC            reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    CLASS           reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    INT             reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    BOOL            reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    VOID            reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    ID              reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    IF              reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    NEW             reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    TRUE            reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    NOT             reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    $end            reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    THEN            reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 68 (primary -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 68 (primary -> LPAREN expression RPAREN .)


state 74

    (8) class -> CLASS ID extends . LBRACE classDeclarationList RBRACE

    LBRACE          shift and go to state 101


state 75

    (9) extends -> EXTENDS . ID

    ID              shift and go to state 102


state 76

    (10) extends -> empty .

    LBRACE          reduce using rule 10 (extends -> empty .)


state 77

    (23) ifStatement -> IF expression THEN . LBRACE declaration_list RBRACE
    (24) ifStatement -> IF expression THEN . LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 103


state 78

    (25) whileStatement -> WHILE expression THEN . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 104


state 79

    (34) assignment -> property ASSIGN logical .
    (36) logical -> logical . OR equality
    (37) logical -> logical . AND equality

    FUNC            reduce using rule 34 (assignment -> property ASSIGN logical .)
    CLASS           reduce using rule 34 (assignment -> property ASSIGN logical .)
    INT             reduce using rule 34 (assignment -> property ASSIGN logical .)
    BOOL            reduce using rule 34 (assignment -> property ASSIGN logical .)
    VOID            reduce using rule 34 (assignment -> property ASSIGN logical .)
    ID              reduce using rule 34 (assignment -> property ASSIGN logical .)
    IF              reduce using rule 34 (assignment -> property ASSIGN logical .)
    WHILE           reduce using rule 34 (assignment -> property ASSIGN logical .)
    PRINT           reduce using rule 34 (assignment -> property ASSIGN logical .)
    RETURN          reduce using rule 34 (assignment -> property ASSIGN logical .)
    NEW             reduce using rule 34 (assignment -> property ASSIGN logical .)
    NUMBER          reduce using rule 34 (assignment -> property ASSIGN logical .)
    TRUE            reduce using rule 34 (assignment -> property ASSIGN logical .)
    FALSE           reduce using rule 34 (assignment -> property ASSIGN logical .)
    LPAREN          reduce using rule 34 (assignment -> property ASSIGN logical .)
    NOT             reduce using rule 34 (assignment -> property ASSIGN logical .)
    MINUS           reduce using rule 34 (assignment -> property ASSIGN logical .)
    $end            reduce using rule 34 (assignment -> property ASSIGN logical .)
    RPAREN          reduce using rule 34 (assignment -> property ASSIGN logical .)
    THEN            reduce using rule 34 (assignment -> property ASSIGN logical .)
    RBRACE          reduce using rule 34 (assignment -> property ASSIGN logical .)
    COMMA           reduce using rule 34 (assignment -> property ASSIGN logical .)
    OR              shift and go to state 54
    AND             shift and go to state 55


state 80

    (57) property -> property DOT ID .

    ASSIGN          reduce using rule 57 (property -> property DOT ID .)
    DOT             reduce using rule 57 (property -> property DOT ID .)
    LPAREN          reduce using rule 57 (property -> property DOT ID .)
    TIMES           reduce using rule 57 (property -> property DOT ID .)
    DIVIDE          reduce using rule 57 (property -> property DOT ID .)
    PLUS            reduce using rule 57 (property -> property DOT ID .)
    MINUS           reduce using rule 57 (property -> property DOT ID .)
    GREATER         reduce using rule 57 (property -> property DOT ID .)
    LESS            reduce using rule 57 (property -> property DOT ID .)
    GREATEROREQUAL  reduce using rule 57 (property -> property DOT ID .)
    LESSOREQUAL     reduce using rule 57 (property -> property DOT ID .)
    EQUALS          reduce using rule 57 (property -> property DOT ID .)
    NOTEQUALS       reduce using rule 57 (property -> property DOT ID .)
    OR              reduce using rule 57 (property -> property DOT ID .)
    AND             reduce using rule 57 (property -> property DOT ID .)
    FUNC            reduce using rule 57 (property -> property DOT ID .)
    CLASS           reduce using rule 57 (property -> property DOT ID .)
    INT             reduce using rule 57 (property -> property DOT ID .)
    BOOL            reduce using rule 57 (property -> property DOT ID .)
    VOID            reduce using rule 57 (property -> property DOT ID .)
    ID              reduce using rule 57 (property -> property DOT ID .)
    IF              reduce using rule 57 (property -> property DOT ID .)
    WHILE           reduce using rule 57 (property -> property DOT ID .)
    PRINT           reduce using rule 57 (property -> property DOT ID .)
    RETURN          reduce using rule 57 (property -> property DOT ID .)
    NEW             reduce using rule 57 (property -> property DOT ID .)
    NUMBER          reduce using rule 57 (property -> property DOT ID .)
    TRUE            reduce using rule 57 (property -> property DOT ID .)
    FALSE           reduce using rule 57 (property -> property DOT ID .)
    NOT             reduce using rule 57 (property -> property DOT ID .)
    $end            reduce using rule 57 (property -> property DOT ID .)
    RPAREN          reduce using rule 57 (property -> property DOT ID .)
    THEN            reduce using rule 57 (property -> property DOT ID .)
    RBRACE          reduce using rule 57 (property -> property DOT ID .)
    COMMA           reduce using rule 57 (property -> property DOT ID .)


state 81

    (58) property -> property LPAREN arguments . RPAREN
    (69) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 105
    COMMA           shift and go to state 106


state 82

    (70) arguments -> expression .

    RPAREN          reduce using rule 70 (arguments -> expression .)
    COMMA           reduce using rule 70 (arguments -> expression .)


state 83

    (36) logical -> logical OR equality .
    (39) equality -> equality . EQUALS comparison
    (40) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 36 (logical -> logical OR equality .)
    AND             reduce using rule 36 (logical -> logical OR equality .)
    FUNC            reduce using rule 36 (logical -> logical OR equality .)
    CLASS           reduce using rule 36 (logical -> logical OR equality .)
    INT             reduce using rule 36 (logical -> logical OR equality .)
    BOOL            reduce using rule 36 (logical -> logical OR equality .)
    VOID            reduce using rule 36 (logical -> logical OR equality .)
    ID              reduce using rule 36 (logical -> logical OR equality .)
    IF              reduce using rule 36 (logical -> logical OR equality .)
    WHILE           reduce using rule 36 (logical -> logical OR equality .)
    PRINT           reduce using rule 36 (logical -> logical OR equality .)
    RETURN          reduce using rule 36 (logical -> logical OR equality .)
    NEW             reduce using rule 36 (logical -> logical OR equality .)
    NUMBER          reduce using rule 36 (logical -> logical OR equality .)
    TRUE            reduce using rule 36 (logical -> logical OR equality .)
    FALSE           reduce using rule 36 (logical -> logical OR equality .)
    LPAREN          reduce using rule 36 (logical -> logical OR equality .)
    NOT             reduce using rule 36 (logical -> logical OR equality .)
    MINUS           reduce using rule 36 (logical -> logical OR equality .)
    $end            reduce using rule 36 (logical -> logical OR equality .)
    RPAREN          reduce using rule 36 (logical -> logical OR equality .)
    THEN            reduce using rule 36 (logical -> logical OR equality .)
    RBRACE          reduce using rule 36 (logical -> logical OR equality .)
    COMMA           reduce using rule 36 (logical -> logical OR equality .)
    EQUALS          shift and go to state 58
    NOTEQUALS       shift and go to state 59


state 84

    (37) logical -> logical AND equality .
    (39) equality -> equality . EQUALS comparison
    (40) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 37 (logical -> logical AND equality .)
    AND             reduce using rule 37 (logical -> logical AND equality .)
    FUNC            reduce using rule 37 (logical -> logical AND equality .)
    CLASS           reduce using rule 37 (logical -> logical AND equality .)
    INT             reduce using rule 37 (logical -> logical AND equality .)
    BOOL            reduce using rule 37 (logical -> logical AND equality .)
    VOID            reduce using rule 37 (logical -> logical AND equality .)
    ID              reduce using rule 37 (logical -> logical AND equality .)
    IF              reduce using rule 37 (logical -> logical AND equality .)
    WHILE           reduce using rule 37 (logical -> logical AND equality .)
    PRINT           reduce using rule 37 (logical -> logical AND equality .)
    RETURN          reduce using rule 37 (logical -> logical AND equality .)
    NEW             reduce using rule 37 (logical -> logical AND equality .)
    NUMBER          reduce using rule 37 (logical -> logical AND equality .)
    TRUE            reduce using rule 37 (logical -> logical AND equality .)
    FALSE           reduce using rule 37 (logical -> logical AND equality .)
    LPAREN          reduce using rule 37 (logical -> logical AND equality .)
    NOT             reduce using rule 37 (logical -> logical AND equality .)
    MINUS           reduce using rule 37 (logical -> logical AND equality .)
    $end            reduce using rule 37 (logical -> logical AND equality .)
    RPAREN          reduce using rule 37 (logical -> logical AND equality .)
    THEN            reduce using rule 37 (logical -> logical AND equality .)
    RBRACE          reduce using rule 37 (logical -> logical AND equality .)
    COMMA           reduce using rule 37 (logical -> logical AND equality .)
    EQUALS          shift and go to state 58
    NOTEQUALS       shift and go to state 59


state 85

    (56) property -> NEW primary LPAREN . RPAREN

    RPAREN          shift and go to state 107


state 86

    (62) call -> primary LPAREN arguments . RPAREN
    (69) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 108
    COMMA           shift and go to state 106


state 87

    (39) equality -> equality EQUALS comparison .
    (42) comparison -> comparison . GREATER term
    (43) comparison -> comparison . LESS term
    (44) comparison -> comparison . GREATEROREQUAL term
    (45) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 39 (equality -> equality EQUALS comparison .)
    NOTEQUALS       reduce using rule 39 (equality -> equality EQUALS comparison .)
    OR              reduce using rule 39 (equality -> equality EQUALS comparison .)
    AND             reduce using rule 39 (equality -> equality EQUALS comparison .)
    FUNC            reduce using rule 39 (equality -> equality EQUALS comparison .)
    CLASS           reduce using rule 39 (equality -> equality EQUALS comparison .)
    INT             reduce using rule 39 (equality -> equality EQUALS comparison .)
    BOOL            reduce using rule 39 (equality -> equality EQUALS comparison .)
    VOID            reduce using rule 39 (equality -> equality EQUALS comparison .)
    ID              reduce using rule 39 (equality -> equality EQUALS comparison .)
    IF              reduce using rule 39 (equality -> equality EQUALS comparison .)
    WHILE           reduce using rule 39 (equality -> equality EQUALS comparison .)
    PRINT           reduce using rule 39 (equality -> equality EQUALS comparison .)
    RETURN          reduce using rule 39 (equality -> equality EQUALS comparison .)
    NEW             reduce using rule 39 (equality -> equality EQUALS comparison .)
    NUMBER          reduce using rule 39 (equality -> equality EQUALS comparison .)
    TRUE            reduce using rule 39 (equality -> equality EQUALS comparison .)
    FALSE           reduce using rule 39 (equality -> equality EQUALS comparison .)
    LPAREN          reduce using rule 39 (equality -> equality EQUALS comparison .)
    NOT             reduce using rule 39 (equality -> equality EQUALS comparison .)
    MINUS           reduce using rule 39 (equality -> equality EQUALS comparison .)
    $end            reduce using rule 39 (equality -> equality EQUALS comparison .)
    RPAREN          reduce using rule 39 (equality -> equality EQUALS comparison .)
    THEN            reduce using rule 39 (equality -> equality EQUALS comparison .)
    RBRACE          reduce using rule 39 (equality -> equality EQUALS comparison .)
    COMMA           reduce using rule 39 (equality -> equality EQUALS comparison .)
    GREATER         shift and go to state 60
    LESS            shift and go to state 61
    GREATEROREQUAL  shift and go to state 62
    LESSOREQUAL     shift and go to state 63


state 88

    (40) equality -> equality NOTEQUALS comparison .
    (42) comparison -> comparison . GREATER term
    (43) comparison -> comparison . LESS term
    (44) comparison -> comparison . GREATEROREQUAL term
    (45) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    NOTEQUALS       reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    OR              reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    AND             reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    FUNC            reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    CLASS           reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    INT             reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    BOOL            reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    VOID            reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    ID              reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    IF              reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    WHILE           reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    PRINT           reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    RETURN          reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    NEW             reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    NUMBER          reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    TRUE            reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    FALSE           reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    LPAREN          reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    NOT             reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    MINUS           reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    $end            reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    RPAREN          reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    THEN            reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    RBRACE          reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    COMMA           reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    GREATER         shift and go to state 60
    LESS            shift and go to state 61
    GREATEROREQUAL  shift and go to state 62
    LESSOREQUAL     shift and go to state 63


state 89

    (42) comparison -> comparison GREATER term .
    (47) term -> term . PLUS factor
    (48) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 42 (comparison -> comparison GREATER term .)
    LESS            reduce using rule 42 (comparison -> comparison GREATER term .)
    GREATEROREQUAL  reduce using rule 42 (comparison -> comparison GREATER term .)
    LESSOREQUAL     reduce using rule 42 (comparison -> comparison GREATER term .)
    EQUALS          reduce using rule 42 (comparison -> comparison GREATER term .)
    NOTEQUALS       reduce using rule 42 (comparison -> comparison GREATER term .)
    OR              reduce using rule 42 (comparison -> comparison GREATER term .)
    AND             reduce using rule 42 (comparison -> comparison GREATER term .)
    FUNC            reduce using rule 42 (comparison -> comparison GREATER term .)
    CLASS           reduce using rule 42 (comparison -> comparison GREATER term .)
    INT             reduce using rule 42 (comparison -> comparison GREATER term .)
    BOOL            reduce using rule 42 (comparison -> comparison GREATER term .)
    VOID            reduce using rule 42 (comparison -> comparison GREATER term .)
    ID              reduce using rule 42 (comparison -> comparison GREATER term .)
    IF              reduce using rule 42 (comparison -> comparison GREATER term .)
    WHILE           reduce using rule 42 (comparison -> comparison GREATER term .)
    PRINT           reduce using rule 42 (comparison -> comparison GREATER term .)
    RETURN          reduce using rule 42 (comparison -> comparison GREATER term .)
    NEW             reduce using rule 42 (comparison -> comparison GREATER term .)
    NUMBER          reduce using rule 42 (comparison -> comparison GREATER term .)
    TRUE            reduce using rule 42 (comparison -> comparison GREATER term .)
    FALSE           reduce using rule 42 (comparison -> comparison GREATER term .)
    LPAREN          reduce using rule 42 (comparison -> comparison GREATER term .)
    NOT             reduce using rule 42 (comparison -> comparison GREATER term .)
    $end            reduce using rule 42 (comparison -> comparison GREATER term .)
    RPAREN          reduce using rule 42 (comparison -> comparison GREATER term .)
    THEN            reduce using rule 42 (comparison -> comparison GREATER term .)
    RBRACE          reduce using rule 42 (comparison -> comparison GREATER term .)
    COMMA           reduce using rule 42 (comparison -> comparison GREATER term .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65

  ! MINUS           [ reduce using rule 42 (comparison -> comparison GREATER term .) ]


state 90

    (43) comparison -> comparison LESS term .
    (47) term -> term . PLUS factor
    (48) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 43 (comparison -> comparison LESS term .)
    LESS            reduce using rule 43 (comparison -> comparison LESS term .)
    GREATEROREQUAL  reduce using rule 43 (comparison -> comparison LESS term .)
    LESSOREQUAL     reduce using rule 43 (comparison -> comparison LESS term .)
    EQUALS          reduce using rule 43 (comparison -> comparison LESS term .)
    NOTEQUALS       reduce using rule 43 (comparison -> comparison LESS term .)
    OR              reduce using rule 43 (comparison -> comparison LESS term .)
    AND             reduce using rule 43 (comparison -> comparison LESS term .)
    FUNC            reduce using rule 43 (comparison -> comparison LESS term .)
    CLASS           reduce using rule 43 (comparison -> comparison LESS term .)
    INT             reduce using rule 43 (comparison -> comparison LESS term .)
    BOOL            reduce using rule 43 (comparison -> comparison LESS term .)
    VOID            reduce using rule 43 (comparison -> comparison LESS term .)
    ID              reduce using rule 43 (comparison -> comparison LESS term .)
    IF              reduce using rule 43 (comparison -> comparison LESS term .)
    WHILE           reduce using rule 43 (comparison -> comparison LESS term .)
    PRINT           reduce using rule 43 (comparison -> comparison LESS term .)
    RETURN          reduce using rule 43 (comparison -> comparison LESS term .)
    NEW             reduce using rule 43 (comparison -> comparison LESS term .)
    NUMBER          reduce using rule 43 (comparison -> comparison LESS term .)
    TRUE            reduce using rule 43 (comparison -> comparison LESS term .)
    FALSE           reduce using rule 43 (comparison -> comparison LESS term .)
    LPAREN          reduce using rule 43 (comparison -> comparison LESS term .)
    NOT             reduce using rule 43 (comparison -> comparison LESS term .)
    $end            reduce using rule 43 (comparison -> comparison LESS term .)
    RPAREN          reduce using rule 43 (comparison -> comparison LESS term .)
    THEN            reduce using rule 43 (comparison -> comparison LESS term .)
    RBRACE          reduce using rule 43 (comparison -> comparison LESS term .)
    COMMA           reduce using rule 43 (comparison -> comparison LESS term .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65

  ! MINUS           [ reduce using rule 43 (comparison -> comparison LESS term .) ]


state 91

    (44) comparison -> comparison GREATEROREQUAL term .
    (47) term -> term . PLUS factor
    (48) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    LESS            reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    GREATEROREQUAL  reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    LESSOREQUAL     reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    EQUALS          reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    NOTEQUALS       reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    OR              reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    AND             reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    FUNC            reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    CLASS           reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    INT             reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    BOOL            reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    VOID            reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    ID              reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    IF              reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    WHILE           reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    PRINT           reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    RETURN          reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    NEW             reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    NUMBER          reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    TRUE            reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    FALSE           reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    LPAREN          reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    NOT             reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    $end            reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    RPAREN          reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    THEN            reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    RBRACE          reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    COMMA           reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65

  ! MINUS           [ reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .) ]


state 92

    (45) comparison -> comparison LESSOREQUAL term .
    (47) term -> term . PLUS factor
    (48) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    LESS            reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    GREATEROREQUAL  reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    LESSOREQUAL     reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    EQUALS          reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    NOTEQUALS       reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    OR              reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    AND             reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    FUNC            reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    CLASS           reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    INT             reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    BOOL            reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    VOID            reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    ID              reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    IF              reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    WHILE           reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    PRINT           reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    RETURN          reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    NEW             reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    NUMBER          reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    TRUE            reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    FALSE           reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    LPAREN          reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    NOT             reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    $end            reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    RPAREN          reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    THEN            reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    RBRACE          reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    COMMA           reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65

  ! MINUS           [ reduce using rule 45 (comparison -> comparison LESSOREQUAL term .) ]


state 93

    (47) term -> term PLUS factor .
    (50) factor -> factor . TIMES unary
    (51) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 47 (term -> term PLUS factor .)
    MINUS           reduce using rule 47 (term -> term PLUS factor .)
    GREATER         reduce using rule 47 (term -> term PLUS factor .)
    LESS            reduce using rule 47 (term -> term PLUS factor .)
    GREATEROREQUAL  reduce using rule 47 (term -> term PLUS factor .)
    LESSOREQUAL     reduce using rule 47 (term -> term PLUS factor .)
    EQUALS          reduce using rule 47 (term -> term PLUS factor .)
    NOTEQUALS       reduce using rule 47 (term -> term PLUS factor .)
    OR              reduce using rule 47 (term -> term PLUS factor .)
    AND             reduce using rule 47 (term -> term PLUS factor .)
    FUNC            reduce using rule 47 (term -> term PLUS factor .)
    CLASS           reduce using rule 47 (term -> term PLUS factor .)
    INT             reduce using rule 47 (term -> term PLUS factor .)
    BOOL            reduce using rule 47 (term -> term PLUS factor .)
    VOID            reduce using rule 47 (term -> term PLUS factor .)
    ID              reduce using rule 47 (term -> term PLUS factor .)
    IF              reduce using rule 47 (term -> term PLUS factor .)
    WHILE           reduce using rule 47 (term -> term PLUS factor .)
    PRINT           reduce using rule 47 (term -> term PLUS factor .)
    RETURN          reduce using rule 47 (term -> term PLUS factor .)
    NEW             reduce using rule 47 (term -> term PLUS factor .)
    NUMBER          reduce using rule 47 (term -> term PLUS factor .)
    TRUE            reduce using rule 47 (term -> term PLUS factor .)
    FALSE           reduce using rule 47 (term -> term PLUS factor .)
    LPAREN          reduce using rule 47 (term -> term PLUS factor .)
    NOT             reduce using rule 47 (term -> term PLUS factor .)
    $end            reduce using rule 47 (term -> term PLUS factor .)
    RPAREN          reduce using rule 47 (term -> term PLUS factor .)
    THEN            reduce using rule 47 (term -> term PLUS factor .)
    RBRACE          reduce using rule 47 (term -> term PLUS factor .)
    COMMA           reduce using rule 47 (term -> term PLUS factor .)
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67


state 94

    (48) term -> term MINUS factor .
    (50) factor -> factor . TIMES unary
    (51) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 48 (term -> term MINUS factor .)
    MINUS           reduce using rule 48 (term -> term MINUS factor .)
    GREATER         reduce using rule 48 (term -> term MINUS factor .)
    LESS            reduce using rule 48 (term -> term MINUS factor .)
    GREATEROREQUAL  reduce using rule 48 (term -> term MINUS factor .)
    LESSOREQUAL     reduce using rule 48 (term -> term MINUS factor .)
    EQUALS          reduce using rule 48 (term -> term MINUS factor .)
    NOTEQUALS       reduce using rule 48 (term -> term MINUS factor .)
    OR              reduce using rule 48 (term -> term MINUS factor .)
    AND             reduce using rule 48 (term -> term MINUS factor .)
    FUNC            reduce using rule 48 (term -> term MINUS factor .)
    CLASS           reduce using rule 48 (term -> term MINUS factor .)
    INT             reduce using rule 48 (term -> term MINUS factor .)
    BOOL            reduce using rule 48 (term -> term MINUS factor .)
    VOID            reduce using rule 48 (term -> term MINUS factor .)
    ID              reduce using rule 48 (term -> term MINUS factor .)
    IF              reduce using rule 48 (term -> term MINUS factor .)
    WHILE           reduce using rule 48 (term -> term MINUS factor .)
    PRINT           reduce using rule 48 (term -> term MINUS factor .)
    RETURN          reduce using rule 48 (term -> term MINUS factor .)
    NEW             reduce using rule 48 (term -> term MINUS factor .)
    NUMBER          reduce using rule 48 (term -> term MINUS factor .)
    TRUE            reduce using rule 48 (term -> term MINUS factor .)
    FALSE           reduce using rule 48 (term -> term MINUS factor .)
    LPAREN          reduce using rule 48 (term -> term MINUS factor .)
    NOT             reduce using rule 48 (term -> term MINUS factor .)
    $end            reduce using rule 48 (term -> term MINUS factor .)
    RPAREN          reduce using rule 48 (term -> term MINUS factor .)
    THEN            reduce using rule 48 (term -> term MINUS factor .)
    RBRACE          reduce using rule 48 (term -> term MINUS factor .)
    COMMA           reduce using rule 48 (term -> term MINUS factor .)
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67


state 95

    (50) factor -> factor TIMES unary .

    TIMES           reduce using rule 50 (factor -> factor TIMES unary .)
    DIVIDE          reduce using rule 50 (factor -> factor TIMES unary .)
    PLUS            reduce using rule 50 (factor -> factor TIMES unary .)
    MINUS           reduce using rule 50 (factor -> factor TIMES unary .)
    GREATER         reduce using rule 50 (factor -> factor TIMES unary .)
    LESS            reduce using rule 50 (factor -> factor TIMES unary .)
    GREATEROREQUAL  reduce using rule 50 (factor -> factor TIMES unary .)
    LESSOREQUAL     reduce using rule 50 (factor -> factor TIMES unary .)
    EQUALS          reduce using rule 50 (factor -> factor TIMES unary .)
    NOTEQUALS       reduce using rule 50 (factor -> factor TIMES unary .)
    OR              reduce using rule 50 (factor -> factor TIMES unary .)
    AND             reduce using rule 50 (factor -> factor TIMES unary .)
    FUNC            reduce using rule 50 (factor -> factor TIMES unary .)
    CLASS           reduce using rule 50 (factor -> factor TIMES unary .)
    INT             reduce using rule 50 (factor -> factor TIMES unary .)
    BOOL            reduce using rule 50 (factor -> factor TIMES unary .)
    VOID            reduce using rule 50 (factor -> factor TIMES unary .)
    ID              reduce using rule 50 (factor -> factor TIMES unary .)
    IF              reduce using rule 50 (factor -> factor TIMES unary .)
    WHILE           reduce using rule 50 (factor -> factor TIMES unary .)
    PRINT           reduce using rule 50 (factor -> factor TIMES unary .)
    RETURN          reduce using rule 50 (factor -> factor TIMES unary .)
    NEW             reduce using rule 50 (factor -> factor TIMES unary .)
    NUMBER          reduce using rule 50 (factor -> factor TIMES unary .)
    TRUE            reduce using rule 50 (factor -> factor TIMES unary .)
    FALSE           reduce using rule 50 (factor -> factor TIMES unary .)
    LPAREN          reduce using rule 50 (factor -> factor TIMES unary .)
    NOT             reduce using rule 50 (factor -> factor TIMES unary .)
    $end            reduce using rule 50 (factor -> factor TIMES unary .)
    RPAREN          reduce using rule 50 (factor -> factor TIMES unary .)
    THEN            reduce using rule 50 (factor -> factor TIMES unary .)
    RBRACE          reduce using rule 50 (factor -> factor TIMES unary .)
    COMMA           reduce using rule 50 (factor -> factor TIMES unary .)


state 96

    (51) factor -> factor DIVIDE unary .

    TIMES           reduce using rule 51 (factor -> factor DIVIDE unary .)
    DIVIDE          reduce using rule 51 (factor -> factor DIVIDE unary .)
    PLUS            reduce using rule 51 (factor -> factor DIVIDE unary .)
    MINUS           reduce using rule 51 (factor -> factor DIVIDE unary .)
    GREATER         reduce using rule 51 (factor -> factor DIVIDE unary .)
    LESS            reduce using rule 51 (factor -> factor DIVIDE unary .)
    GREATEROREQUAL  reduce using rule 51 (factor -> factor DIVIDE unary .)
    LESSOREQUAL     reduce using rule 51 (factor -> factor DIVIDE unary .)
    EQUALS          reduce using rule 51 (factor -> factor DIVIDE unary .)
    NOTEQUALS       reduce using rule 51 (factor -> factor DIVIDE unary .)
    OR              reduce using rule 51 (factor -> factor DIVIDE unary .)
    AND             reduce using rule 51 (factor -> factor DIVIDE unary .)
    FUNC            reduce using rule 51 (factor -> factor DIVIDE unary .)
    CLASS           reduce using rule 51 (factor -> factor DIVIDE unary .)
    INT             reduce using rule 51 (factor -> factor DIVIDE unary .)
    BOOL            reduce using rule 51 (factor -> factor DIVIDE unary .)
    VOID            reduce using rule 51 (factor -> factor DIVIDE unary .)
    ID              reduce using rule 51 (factor -> factor DIVIDE unary .)
    IF              reduce using rule 51 (factor -> factor DIVIDE unary .)
    WHILE           reduce using rule 51 (factor -> factor DIVIDE unary .)
    PRINT           reduce using rule 51 (factor -> factor DIVIDE unary .)
    RETURN          reduce using rule 51 (factor -> factor DIVIDE unary .)
    NEW             reduce using rule 51 (factor -> factor DIVIDE unary .)
    NUMBER          reduce using rule 51 (factor -> factor DIVIDE unary .)
    TRUE            reduce using rule 51 (factor -> factor DIVIDE unary .)
    FALSE           reduce using rule 51 (factor -> factor DIVIDE unary .)
    LPAREN          reduce using rule 51 (factor -> factor DIVIDE unary .)
    NOT             reduce using rule 51 (factor -> factor DIVIDE unary .)
    $end            reduce using rule 51 (factor -> factor DIVIDE unary .)
    RPAREN          reduce using rule 51 (factor -> factor DIVIDE unary .)
    THEN            reduce using rule 51 (factor -> factor DIVIDE unary .)
    RBRACE          reduce using rule 51 (factor -> factor DIVIDE unary .)
    COMMA           reduce using rule 51 (factor -> factor DIVIDE unary .)


state 97

    (28) varDeclaration -> type ID ASSIGN expression .

    FUNC            reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    CLASS           reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    INT             reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    BOOL            reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    VOID            reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    ID              reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    IF              reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    WHILE           reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    PRINT           reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    RETURN          reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    NEW             reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    NUMBER          reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    TRUE            reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    FALSE           reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    LPAREN          reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    NOT             reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    MINUS           reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    $end            reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)
    RBRACE          reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)


state 98

    (74) parameter_list -> ID .
    (32) type -> ID .

    RPAREN          reduce using rule 74 (parameter_list -> ID .)
    COMMA           reduce using rule 74 (parameter_list -> ID .)
    ID              reduce using rule 32 (type -> ID .)


state 99

    (72) funcDeclaration -> FUNC ID LPAREN parameter_list . RPAREN type LBRACE declaration_list RBRACE
    (73) parameter_list -> parameter_list . COMMA ID
    (75) parameter_list -> parameter_list . COMMA type ID

    RPAREN          shift and go to state 109
    COMMA           shift and go to state 110


state 100

    (76) parameter_list -> type . ID

    ID              shift and go to state 111


state 101

    (8) class -> CLASS ID extends LBRACE . classDeclarationList RBRACE
    (11) classDeclarationList -> . classDeclarationList classDeclaration
    (12) classDeclarationList -> . classDeclaration
    (13) classDeclaration -> . varDeclaration
    (14) classDeclaration -> . methodDeclaration
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (15) methodDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    FUNC            shift and go to state 117
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 112

    classDeclarationList           shift and go to state 113
    classDeclaration               shift and go to state 114
    varDeclaration                 shift and go to state 115
    methodDeclaration              shift and go to state 116
    type                           shift and go to state 8

state 102

    (9) extends -> EXTENDS ID .

    LBRACE          reduce using rule 9 (extends -> EXTENDS ID .)


state 103

    (23) ifStatement -> IF expression THEN LBRACE . declaration_list RBRACE
    (24) ifStatement -> IF expression THEN LBRACE . declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 10
    declaration_list               shift and go to state 118
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 104

    (25) whileStatement -> WHILE expression THEN LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 10
    declaration_list               shift and go to state 119
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 105

    (58) property -> property LPAREN arguments RPAREN .

    ASSIGN          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    DOT             reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    TIMES           reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    PLUS            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    MINUS           reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    GREATER         reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    LESS            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    GREATEROREQUAL  reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    LESSOREQUAL     reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    EQUALS          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    NOTEQUALS       reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    OR              reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    AND             reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    FUNC            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    CLASS           reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    INT             reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    BOOL            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    VOID            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    ID              reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    IF              reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    WHILE           reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    PRINT           reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    RETURN          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    NEW             reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    NUMBER          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    TRUE            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    FALSE           reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    NOT             reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    $end            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    THEN            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    COMMA           reduce using rule 58 (property -> property LPAREN arguments RPAREN .)


state 106

    (69) arguments -> arguments COMMA . expression
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 45
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 120
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 107

    (56) property -> NEW primary LPAREN RPAREN .

    ASSIGN          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    DOT             reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    LPAREN          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    TIMES           reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    DIVIDE          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    PLUS            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    MINUS           reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    GREATER         reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    LESS            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    GREATEROREQUAL  reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    LESSOREQUAL     reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    EQUALS          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    NOTEQUALS       reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    OR              reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    AND             reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    FUNC            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    CLASS           reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    INT             reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    BOOL            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    VOID            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    ID              reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    IF              reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    WHILE           reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    PRINT           reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    RETURN          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    NEW             reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    NUMBER          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    TRUE            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    FALSE           reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    NOT             reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    $end            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    RPAREN          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    THEN            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    RBRACE          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    COMMA           reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)


state 108

    (62) call -> primary LPAREN arguments RPAREN .

    ASSIGN          reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    DOT             reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    TIMES           reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    PLUS            reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    MINUS           reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    GREATER         reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    LESS            reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    GREATEROREQUAL  reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    LESSOREQUAL     reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    EQUALS          reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    NOTEQUALS       reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    OR              reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    AND             reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    FUNC            reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    CLASS           reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    INT             reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    BOOL            reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    VOID            reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    ID              reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    IF              reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    WHILE           reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    PRINT           reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    RETURN          reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    NEW             reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    NUMBER          reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    TRUE            reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    FALSE           reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    NOT             reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    $end            reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    THEN            reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)
    COMMA           reduce using rule 62 (call -> primary LPAREN arguments RPAREN .)


state 109

    (72) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN . type LBRACE declaration_list RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 112

    type                           shift and go to state 121

state 110

    (73) parameter_list -> parameter_list COMMA . ID
    (75) parameter_list -> parameter_list COMMA . type ID
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    ID              shift and go to state 122
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20

    type                           shift and go to state 123

state 111

    (76) parameter_list -> type ID .

    RPAREN          reduce using rule 76 (parameter_list -> type ID .)
    COMMA           reduce using rule 76 (parameter_list -> type ID .)


state 112

    (32) type -> ID .

    ID              reduce using rule 32 (type -> ID .)
    LBRACE          reduce using rule 32 (type -> ID .)


state 113

    (8) class -> CLASS ID extends LBRACE classDeclarationList . RBRACE
    (11) classDeclarationList -> classDeclarationList . classDeclaration
    (13) classDeclaration -> . varDeclaration
    (14) classDeclaration -> . methodDeclaration
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (15) methodDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    RBRACE          shift and go to state 124
    FUNC            shift and go to state 117
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 112

    classDeclaration               shift and go to state 125
    varDeclaration                 shift and go to state 115
    methodDeclaration              shift and go to state 116
    type                           shift and go to state 8

state 114

    (12) classDeclarationList -> classDeclaration .

    RBRACE          reduce using rule 12 (classDeclarationList -> classDeclaration .)
    FUNC            reduce using rule 12 (classDeclarationList -> classDeclaration .)
    INT             reduce using rule 12 (classDeclarationList -> classDeclaration .)
    BOOL            reduce using rule 12 (classDeclarationList -> classDeclaration .)
    VOID            reduce using rule 12 (classDeclarationList -> classDeclaration .)
    ID              reduce using rule 12 (classDeclarationList -> classDeclaration .)


state 115

    (13) classDeclaration -> varDeclaration .

    RBRACE          reduce using rule 13 (classDeclaration -> varDeclaration .)
    FUNC            reduce using rule 13 (classDeclaration -> varDeclaration .)
    INT             reduce using rule 13 (classDeclaration -> varDeclaration .)
    BOOL            reduce using rule 13 (classDeclaration -> varDeclaration .)
    VOID            reduce using rule 13 (classDeclaration -> varDeclaration .)
    ID              reduce using rule 13 (classDeclaration -> varDeclaration .)


state 116

    (14) classDeclaration -> methodDeclaration .

    RBRACE          reduce using rule 14 (classDeclaration -> methodDeclaration .)
    FUNC            reduce using rule 14 (classDeclaration -> methodDeclaration .)
    INT             reduce using rule 14 (classDeclaration -> methodDeclaration .)
    BOOL            reduce using rule 14 (classDeclaration -> methodDeclaration .)
    VOID            reduce using rule 14 (classDeclaration -> methodDeclaration .)
    ID              reduce using rule 14 (classDeclaration -> methodDeclaration .)


state 117

    (15) methodDeclaration -> FUNC . ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE

    ID              shift and go to state 126


state 118

    (23) ifStatement -> IF expression THEN LBRACE declaration_list . RBRACE
    (24) ifStatement -> IF expression THEN LBRACE declaration_list . RBRACE ELSE LBRACE declaration_list RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RBRACE          shift and go to state 127
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 10
    declaration                    shift and go to state 41
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 119

    (25) whileStatement -> WHILE expression THEN LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RBRACE          shift and go to state 128
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 10
    declaration                    shift and go to state 41
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 120

    (69) arguments -> arguments COMMA expression .

    RPAREN          reduce using rule 69 (arguments -> arguments COMMA expression .)
    COMMA           reduce using rule 69 (arguments -> arguments COMMA expression .)


state 121

    (72) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 129


state 122

    (73) parameter_list -> parameter_list COMMA ID .
    (32) type -> ID .

    RPAREN          reduce using rule 73 (parameter_list -> parameter_list COMMA ID .)
    COMMA           reduce using rule 73 (parameter_list -> parameter_list COMMA ID .)
    ID              reduce using rule 32 (type -> ID .)


state 123

    (75) parameter_list -> parameter_list COMMA type . ID

    ID              shift and go to state 130


state 124

    (8) class -> CLASS ID extends LBRACE classDeclarationList RBRACE .

    FUNC            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    CLASS           reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    INT             reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    BOOL            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    VOID            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    ID              reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    IF              reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    WHILE           reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    PRINT           reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    RETURN          reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    NEW             reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    NUMBER          reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    TRUE            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    FALSE           reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    LPAREN          reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    NOT             reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    MINUS           reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    $end            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    RBRACE          reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)


state 125

    (11) classDeclarationList -> classDeclarationList classDeclaration .

    RBRACE          reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)
    FUNC            reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)
    INT             reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)
    BOOL            reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)
    VOID            reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)
    ID              reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)


state 126

    (15) methodDeclaration -> FUNC ID . LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE

    LPAREN          shift and go to state 131


state 127

    (23) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .
    (24) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE . ELSE LBRACE declaration_list RBRACE

    FUNC            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    INT             reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    ID              reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    IF              reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    TRUE            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    FALSE           reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    $end            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    ELSE            shift and go to state 132


state 128

    (25) whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .

    FUNC            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    INT             reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    ID              reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    IF              reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    TRUE            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    FALSE           reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    $end            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)


state 129

    (72) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    type                           shift and go to state 8
    declaration_list               shift and go to state 133
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 130

    (75) parameter_list -> parameter_list COMMA type ID .

    RPAREN          reduce using rule 75 (parameter_list -> parameter_list COMMA type ID .)
    COMMA           reduce using rule 75 (parameter_list -> parameter_list COMMA type ID .)


state 131

    (15) methodDeclaration -> FUNC ID LPAREN . parameter_list RPAREN type LBRACE declaration_list RBRACE
    (73) parameter_list -> . parameter_list COMMA ID
    (74) parameter_list -> . ID
    (75) parameter_list -> . parameter_list COMMA type ID
    (76) parameter_list -> . type ID
    (77) parameter_list -> .
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    ID              shift and go to state 98
    RPAREN          reduce using rule 77 (parameter_list -> .)
    COMMA           reduce using rule 77 (parameter_list -> .)
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20

    parameter_list                 shift and go to state 134
    type                           shift and go to state 100

state 132

    (24) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 135


state 133

    (72) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RBRACE          shift and go to state 136
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    type                           shift and go to state 8
    declaration                    shift and go to state 41
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 134

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list . RPAREN type LBRACE declaration_list RBRACE
    (73) parameter_list -> parameter_list . COMMA ID
    (75) parameter_list -> parameter_list . COMMA type ID

    RPAREN          shift and go to state 137
    COMMA           shift and go to state 110


state 135

    (24) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 10
    declaration_list               shift and go to state 138
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 136

    (72) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .

    FUNC            reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    INT             reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    ID              reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    IF              reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    TRUE            reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    FALSE           reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    $end            reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 72 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)


state 137

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN . type LBRACE declaration_list RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 112

    type                           shift and go to state 139

state 138

    (24) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RBRACE          shift and go to state 140
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    expression                     shift and go to state 10
    declaration                    shift and go to state 41
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 139

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 141


state 140

    (24) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .

    FUNC            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    INT             reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    ID              reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    IF              reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    TRUE            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    FALSE           reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    $end            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)


state 141

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    type                           shift and go to state 8
    declaration_list               shift and go to state 142
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 142

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement
    (20) statement -> . returnStatement
    (72) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (61) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (62) call -> . primary LPAREN arguments RPAREN
    (63) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (64) primary -> . NUMBER
    (65) primary -> . ID
    (66) primary -> . TRUE
    (67) primary -> . FALSE
    (68) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RBRACE          shift and go to state 143
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    LPAREN          shift and go to state 16
    NOT             shift and go to state 40
    MINUS           shift and go to state 38

    type                           shift and go to state 8
    declaration                    shift and go to state 41
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 36
    factor                         shift and go to state 37
    unary                          shift and go to state 39

state 143

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .

    RBRACE          reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    FUNC            reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    INT             reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    ID              reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEW in state 25 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 25 resolved as shift
WARNING: shift/reduce conflict for ID in state 25 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 25 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 25 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 25 resolved as shift
WARNING: shift/reduce conflict for NOT in state 25 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 26 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 29 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (type -> ID)
WARNING: rejected rule (primary -> ID) in state 9
