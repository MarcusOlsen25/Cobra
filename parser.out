Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration_list declaration
Rule 4     declaration -> varDeclaration
Rule 5     declaration -> statement
Rule 6     declaration -> funcDeclaration
Rule 7     statement -> expression
Rule 8     statement -> ifStatement
Rule 9     statement -> whileStatement
Rule 10    statement -> printStatement
Rule 11    statement -> returnStatement
Rule 12    returnStatement -> RETURN expression
Rule 13    ifStatement -> IF expression THEN LBRACE declaration_list RBRACE
Rule 14    ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
Rule 15    whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE
Rule 16    printStatement -> PRINT expression
Rule 17    varDeclaration -> VAR ID
Rule 18    varDeclaration -> VAR ID ASSIGN expression
Rule 19    expression -> assignment
Rule 20    assignment -> ID ASSIGN assignment
Rule 21    assignment -> logical
Rule 22    logical -> logical OR equality
Rule 23    logical -> logical AND equality
Rule 24    logical -> equality
Rule 25    equality -> equality EQUALS comparison
Rule 26    equality -> equality NOTEQUALS comparison
Rule 27    equality -> comparison
Rule 28    comparison -> comparison GREATER term
Rule 29    comparison -> comparison LESS term
Rule 30    comparison -> comparison GREATEROREQUAL term
Rule 31    comparison -> comparison LESSOREQUAL term
Rule 32    comparison -> term
Rule 33    term -> term PLUS factor
Rule 34    term -> term MINUS factor
Rule 35    term -> factor
Rule 36    factor -> factor TIMES unary
Rule 37    factor -> factor DIVIDE unary
Rule 38    factor -> unary
Rule 39    unary -> NOT unary
Rule 40    unary -> MINUS unary
Rule 41    unary -> call
Rule 42    call -> primary LPAREN arguments RPAREN
Rule 43    call -> primary
Rule 44    primary -> NUMBER
Rule 45    primary -> ID
Rule 46    primary -> LPAREN expression RPAREN
Rule 47    arguments -> arguments COMMA expression
Rule 48    arguments -> expression
Rule 49    arguments -> <empty>
Rule 50    funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
Rule 51    parameter_list -> parameter_list COMMA ID
Rule 52    parameter_list -> ID
Rule 53    parameter_list -> <empty>

Terminals, with rules where they appear

AND                  : 23
ASSIGN               : 18 20
COMMA                : 47 51
DIVIDE               : 37
ELSE                 : 14
EQUALS               : 25
FUNC                 : 50
GREATER              : 28
GREATEROREQUAL       : 30
ID                   : 17 18 20 45 50 51 52
IF                   : 13 14
LBRACE               : 13 14 14 15 50
LESS                 : 29
LESSOREQUAL          : 31
LPAREN               : 42 46 50
MINUS                : 34 40
NOT                  : 39
NOTEQUALS            : 26
NUMBER               : 44
OR                   : 22
PLUS                 : 33
PRINT                : 16
RBRACE               : 13 14 14 15 50
RETURN               : 12
RPAREN               : 42 46 50
THEN                 : 13 14 15
TIMES                : 36
VAR                  : 17 18
WHILE                : 15
error                : 

Nonterminals, with rules where they appear

arguments            : 42 47
assignment           : 19 20
call                 : 41
comparison           : 25 26 27 28 29 30 31
declaration          : 2 3
declaration_list     : 1 3 13 14 14 15 50
equality             : 22 23 24 25 26
expression           : 7 12 13 14 15 16 18 46 47 48
factor               : 33 34 35 36 37
funcDeclaration      : 6
ifStatement          : 8
logical              : 21 22 23
parameter_list       : 50 51
primary              : 42 43
printStatement       : 10
program              : 0
returnStatement      : 11
statement            : 5
term                 : 28 29 30 31 32 33 34
unary                : 36 37 38 39 40
varDeclaration       : 4
whileStatement       : 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (17) varDeclaration -> . VAR ID
    (18) varDeclaration -> . VAR ID ASSIGN expression
    (7) statement -> . expression
    (8) statement -> . ifStatement
    (9) statement -> . whileStatement
    (10) statement -> . printStatement
    (11) statement -> . returnStatement
    (50) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (13) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (15) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (16) printStatement -> . PRINT expression
    (12) returnStatement -> . RETURN expression
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    VAR             shift and go to state 7
    FUNC            shift and go to state 14
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    expression                     shift and go to state 9
    ifStatement                    shift and go to state 10
    whileStatement                 shift and go to state 11
    printStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (17) varDeclaration -> . VAR ID
    (18) varDeclaration -> . VAR ID ASSIGN expression
    (7) statement -> . expression
    (8) statement -> . ifStatement
    (9) statement -> . whileStatement
    (10) statement -> . printStatement
    (11) statement -> . returnStatement
    (50) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (13) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (15) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (16) printStatement -> . PRINT expression
    (12) returnStatement -> . RETURN expression
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    $end            reduce using rule 1 (program -> declaration_list .)
    VAR             shift and go to state 7
    FUNC            shift and go to state 14
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    declaration                    shift and go to state 32
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    expression                     shift and go to state 9
    ifStatement                    shift and go to state 10
    whileStatement                 shift and go to state 11
    printStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 3

    (2) declaration_list -> declaration .

    VAR             reduce using rule 2 (declaration_list -> declaration .)
    FUNC            reduce using rule 2 (declaration_list -> declaration .)
    IF              reduce using rule 2 (declaration_list -> declaration .)
    WHILE           reduce using rule 2 (declaration_list -> declaration .)
    PRINT           reduce using rule 2 (declaration_list -> declaration .)
    RETURN          reduce using rule 2 (declaration_list -> declaration .)
    ID              reduce using rule 2 (declaration_list -> declaration .)
    NOT             reduce using rule 2 (declaration_list -> declaration .)
    MINUS           reduce using rule 2 (declaration_list -> declaration .)
    NUMBER          reduce using rule 2 (declaration_list -> declaration .)
    LPAREN          reduce using rule 2 (declaration_list -> declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration .)
    RBRACE          reduce using rule 2 (declaration_list -> declaration .)


state 4

    (4) declaration -> varDeclaration .

    VAR             reduce using rule 4 (declaration -> varDeclaration .)
    FUNC            reduce using rule 4 (declaration -> varDeclaration .)
    IF              reduce using rule 4 (declaration -> varDeclaration .)
    WHILE           reduce using rule 4 (declaration -> varDeclaration .)
    PRINT           reduce using rule 4 (declaration -> varDeclaration .)
    RETURN          reduce using rule 4 (declaration -> varDeclaration .)
    ID              reduce using rule 4 (declaration -> varDeclaration .)
    NOT             reduce using rule 4 (declaration -> varDeclaration .)
    MINUS           reduce using rule 4 (declaration -> varDeclaration .)
    NUMBER          reduce using rule 4 (declaration -> varDeclaration .)
    LPAREN          reduce using rule 4 (declaration -> varDeclaration .)
    $end            reduce using rule 4 (declaration -> varDeclaration .)
    RBRACE          reduce using rule 4 (declaration -> varDeclaration .)


state 5

    (5) declaration -> statement .

    VAR             reduce using rule 5 (declaration -> statement .)
    FUNC            reduce using rule 5 (declaration -> statement .)
    IF              reduce using rule 5 (declaration -> statement .)
    WHILE           reduce using rule 5 (declaration -> statement .)
    PRINT           reduce using rule 5 (declaration -> statement .)
    RETURN          reduce using rule 5 (declaration -> statement .)
    ID              reduce using rule 5 (declaration -> statement .)
    NOT             reduce using rule 5 (declaration -> statement .)
    MINUS           reduce using rule 5 (declaration -> statement .)
    NUMBER          reduce using rule 5 (declaration -> statement .)
    LPAREN          reduce using rule 5 (declaration -> statement .)
    $end            reduce using rule 5 (declaration -> statement .)
    RBRACE          reduce using rule 5 (declaration -> statement .)


state 6

    (6) declaration -> funcDeclaration .

    VAR             reduce using rule 6 (declaration -> funcDeclaration .)
    FUNC            reduce using rule 6 (declaration -> funcDeclaration .)
    IF              reduce using rule 6 (declaration -> funcDeclaration .)
    WHILE           reduce using rule 6 (declaration -> funcDeclaration .)
    PRINT           reduce using rule 6 (declaration -> funcDeclaration .)
    RETURN          reduce using rule 6 (declaration -> funcDeclaration .)
    ID              reduce using rule 6 (declaration -> funcDeclaration .)
    NOT             reduce using rule 6 (declaration -> funcDeclaration .)
    MINUS           reduce using rule 6 (declaration -> funcDeclaration .)
    NUMBER          reduce using rule 6 (declaration -> funcDeclaration .)
    LPAREN          reduce using rule 6 (declaration -> funcDeclaration .)
    $end            reduce using rule 6 (declaration -> funcDeclaration .)
    RBRACE          reduce using rule 6 (declaration -> funcDeclaration .)


state 7

    (17) varDeclaration -> VAR . ID
    (18) varDeclaration -> VAR . ID ASSIGN expression

    ID              shift and go to state 33


state 8

    (20) assignment -> ID . ASSIGN assignment
    (45) primary -> ID .

    ASSIGN          shift and go to state 34
    LPAREN          reduce using rule 45 (primary -> ID .)
    TIMES           reduce using rule 45 (primary -> ID .)
    DIVIDE          reduce using rule 45 (primary -> ID .)
    PLUS            reduce using rule 45 (primary -> ID .)
    MINUS           reduce using rule 45 (primary -> ID .)
    GREATER         reduce using rule 45 (primary -> ID .)
    LESS            reduce using rule 45 (primary -> ID .)
    GREATEROREQUAL  reduce using rule 45 (primary -> ID .)
    LESSOREQUAL     reduce using rule 45 (primary -> ID .)
    EQUALS          reduce using rule 45 (primary -> ID .)
    NOTEQUALS       reduce using rule 45 (primary -> ID .)
    OR              reduce using rule 45 (primary -> ID .)
    AND             reduce using rule 45 (primary -> ID .)
    VAR             reduce using rule 45 (primary -> ID .)
    FUNC            reduce using rule 45 (primary -> ID .)
    IF              reduce using rule 45 (primary -> ID .)
    WHILE           reduce using rule 45 (primary -> ID .)
    PRINT           reduce using rule 45 (primary -> ID .)
    RETURN          reduce using rule 45 (primary -> ID .)
    ID              reduce using rule 45 (primary -> ID .)
    NOT             reduce using rule 45 (primary -> ID .)
    NUMBER          reduce using rule 45 (primary -> ID .)
    $end            reduce using rule 45 (primary -> ID .)
    RPAREN          reduce using rule 45 (primary -> ID .)
    THEN            reduce using rule 45 (primary -> ID .)
    RBRACE          reduce using rule 45 (primary -> ID .)
    COMMA           reduce using rule 45 (primary -> ID .)


state 9

    (7) statement -> expression .

    VAR             reduce using rule 7 (statement -> expression .)
    FUNC            reduce using rule 7 (statement -> expression .)
    IF              reduce using rule 7 (statement -> expression .)
    WHILE           reduce using rule 7 (statement -> expression .)
    PRINT           reduce using rule 7 (statement -> expression .)
    RETURN          reduce using rule 7 (statement -> expression .)
    ID              reduce using rule 7 (statement -> expression .)
    NOT             reduce using rule 7 (statement -> expression .)
    MINUS           reduce using rule 7 (statement -> expression .)
    NUMBER          reduce using rule 7 (statement -> expression .)
    LPAREN          reduce using rule 7 (statement -> expression .)
    $end            reduce using rule 7 (statement -> expression .)
    RBRACE          reduce using rule 7 (statement -> expression .)


state 10

    (8) statement -> ifStatement .

    VAR             reduce using rule 8 (statement -> ifStatement .)
    FUNC            reduce using rule 8 (statement -> ifStatement .)
    IF              reduce using rule 8 (statement -> ifStatement .)
    WHILE           reduce using rule 8 (statement -> ifStatement .)
    PRINT           reduce using rule 8 (statement -> ifStatement .)
    RETURN          reduce using rule 8 (statement -> ifStatement .)
    ID              reduce using rule 8 (statement -> ifStatement .)
    NOT             reduce using rule 8 (statement -> ifStatement .)
    MINUS           reduce using rule 8 (statement -> ifStatement .)
    NUMBER          reduce using rule 8 (statement -> ifStatement .)
    LPAREN          reduce using rule 8 (statement -> ifStatement .)
    $end            reduce using rule 8 (statement -> ifStatement .)
    RBRACE          reduce using rule 8 (statement -> ifStatement .)


state 11

    (9) statement -> whileStatement .

    VAR             reduce using rule 9 (statement -> whileStatement .)
    FUNC            reduce using rule 9 (statement -> whileStatement .)
    IF              reduce using rule 9 (statement -> whileStatement .)
    WHILE           reduce using rule 9 (statement -> whileStatement .)
    PRINT           reduce using rule 9 (statement -> whileStatement .)
    RETURN          reduce using rule 9 (statement -> whileStatement .)
    ID              reduce using rule 9 (statement -> whileStatement .)
    NOT             reduce using rule 9 (statement -> whileStatement .)
    MINUS           reduce using rule 9 (statement -> whileStatement .)
    NUMBER          reduce using rule 9 (statement -> whileStatement .)
    LPAREN          reduce using rule 9 (statement -> whileStatement .)
    $end            reduce using rule 9 (statement -> whileStatement .)
    RBRACE          reduce using rule 9 (statement -> whileStatement .)


state 12

    (10) statement -> printStatement .

    VAR             reduce using rule 10 (statement -> printStatement .)
    FUNC            reduce using rule 10 (statement -> printStatement .)
    IF              reduce using rule 10 (statement -> printStatement .)
    WHILE           reduce using rule 10 (statement -> printStatement .)
    PRINT           reduce using rule 10 (statement -> printStatement .)
    RETURN          reduce using rule 10 (statement -> printStatement .)
    ID              reduce using rule 10 (statement -> printStatement .)
    NOT             reduce using rule 10 (statement -> printStatement .)
    MINUS           reduce using rule 10 (statement -> printStatement .)
    NUMBER          reduce using rule 10 (statement -> printStatement .)
    LPAREN          reduce using rule 10 (statement -> printStatement .)
    $end            reduce using rule 10 (statement -> printStatement .)
    RBRACE          reduce using rule 10 (statement -> printStatement .)


state 13

    (11) statement -> returnStatement .

    VAR             reduce using rule 11 (statement -> returnStatement .)
    FUNC            reduce using rule 11 (statement -> returnStatement .)
    IF              reduce using rule 11 (statement -> returnStatement .)
    WHILE           reduce using rule 11 (statement -> returnStatement .)
    PRINT           reduce using rule 11 (statement -> returnStatement .)
    RETURN          reduce using rule 11 (statement -> returnStatement .)
    ID              reduce using rule 11 (statement -> returnStatement .)
    NOT             reduce using rule 11 (statement -> returnStatement .)
    MINUS           reduce using rule 11 (statement -> returnStatement .)
    NUMBER          reduce using rule 11 (statement -> returnStatement .)
    LPAREN          reduce using rule 11 (statement -> returnStatement .)
    $end            reduce using rule 11 (statement -> returnStatement .)
    RBRACE          reduce using rule 11 (statement -> returnStatement .)


state 14

    (50) funcDeclaration -> FUNC . ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE

    ID              shift and go to state 35


state 15

    (46) primary -> LPAREN . expression RPAREN
    (19) expression -> . assignment
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 36
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 16

    (19) expression -> assignment .

    VAR             reduce using rule 19 (expression -> assignment .)
    FUNC            reduce using rule 19 (expression -> assignment .)
    IF              reduce using rule 19 (expression -> assignment .)
    WHILE           reduce using rule 19 (expression -> assignment .)
    PRINT           reduce using rule 19 (expression -> assignment .)
    RETURN          reduce using rule 19 (expression -> assignment .)
    ID              reduce using rule 19 (expression -> assignment .)
    NOT             reduce using rule 19 (expression -> assignment .)
    MINUS           reduce using rule 19 (expression -> assignment .)
    NUMBER          reduce using rule 19 (expression -> assignment .)
    LPAREN          reduce using rule 19 (expression -> assignment .)
    $end            reduce using rule 19 (expression -> assignment .)
    RPAREN          reduce using rule 19 (expression -> assignment .)
    THEN            reduce using rule 19 (expression -> assignment .)
    RBRACE          reduce using rule 19 (expression -> assignment .)
    COMMA           reduce using rule 19 (expression -> assignment .)


state 17

    (13) ifStatement -> IF . expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> IF . expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 37
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 18

    (15) whileStatement -> WHILE . expression THEN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 38
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 19

    (16) printStatement -> PRINT . expression
    (19) expression -> . assignment
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 39
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 20

    (12) returnStatement -> RETURN . expression
    (19) expression -> . assignment
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 40
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 21

    (21) assignment -> logical .
    (22) logical -> logical . OR equality
    (23) logical -> logical . AND equality

    VAR             reduce using rule 21 (assignment -> logical .)
    FUNC            reduce using rule 21 (assignment -> logical .)
    IF              reduce using rule 21 (assignment -> logical .)
    WHILE           reduce using rule 21 (assignment -> logical .)
    PRINT           reduce using rule 21 (assignment -> logical .)
    RETURN          reduce using rule 21 (assignment -> logical .)
    ID              reduce using rule 21 (assignment -> logical .)
    NOT             reduce using rule 21 (assignment -> logical .)
    MINUS           reduce using rule 21 (assignment -> logical .)
    NUMBER          reduce using rule 21 (assignment -> logical .)
    LPAREN          reduce using rule 21 (assignment -> logical .)
    $end            reduce using rule 21 (assignment -> logical .)
    RPAREN          reduce using rule 21 (assignment -> logical .)
    THEN            reduce using rule 21 (assignment -> logical .)
    RBRACE          reduce using rule 21 (assignment -> logical .)
    COMMA           reduce using rule 21 (assignment -> logical .)
    OR              shift and go to state 41
    AND             shift and go to state 42


state 22

    (24) logical -> equality .
    (25) equality -> equality . EQUALS comparison
    (26) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 24 (logical -> equality .)
    AND             reduce using rule 24 (logical -> equality .)
    VAR             reduce using rule 24 (logical -> equality .)
    FUNC            reduce using rule 24 (logical -> equality .)
    IF              reduce using rule 24 (logical -> equality .)
    WHILE           reduce using rule 24 (logical -> equality .)
    PRINT           reduce using rule 24 (logical -> equality .)
    RETURN          reduce using rule 24 (logical -> equality .)
    ID              reduce using rule 24 (logical -> equality .)
    NOT             reduce using rule 24 (logical -> equality .)
    MINUS           reduce using rule 24 (logical -> equality .)
    NUMBER          reduce using rule 24 (logical -> equality .)
    LPAREN          reduce using rule 24 (logical -> equality .)
    $end            reduce using rule 24 (logical -> equality .)
    RPAREN          reduce using rule 24 (logical -> equality .)
    THEN            reduce using rule 24 (logical -> equality .)
    RBRACE          reduce using rule 24 (logical -> equality .)
    COMMA           reduce using rule 24 (logical -> equality .)
    EQUALS          shift and go to state 43
    NOTEQUALS       shift and go to state 44


state 23

    (27) equality -> comparison .
    (28) comparison -> comparison . GREATER term
    (29) comparison -> comparison . LESS term
    (30) comparison -> comparison . GREATEROREQUAL term
    (31) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 27 (equality -> comparison .)
    NOTEQUALS       reduce using rule 27 (equality -> comparison .)
    OR              reduce using rule 27 (equality -> comparison .)
    AND             reduce using rule 27 (equality -> comparison .)
    VAR             reduce using rule 27 (equality -> comparison .)
    FUNC            reduce using rule 27 (equality -> comparison .)
    IF              reduce using rule 27 (equality -> comparison .)
    WHILE           reduce using rule 27 (equality -> comparison .)
    PRINT           reduce using rule 27 (equality -> comparison .)
    RETURN          reduce using rule 27 (equality -> comparison .)
    ID              reduce using rule 27 (equality -> comparison .)
    NOT             reduce using rule 27 (equality -> comparison .)
    MINUS           reduce using rule 27 (equality -> comparison .)
    NUMBER          reduce using rule 27 (equality -> comparison .)
    LPAREN          reduce using rule 27 (equality -> comparison .)
    $end            reduce using rule 27 (equality -> comparison .)
    RPAREN          reduce using rule 27 (equality -> comparison .)
    THEN            reduce using rule 27 (equality -> comparison .)
    RBRACE          reduce using rule 27 (equality -> comparison .)
    COMMA           reduce using rule 27 (equality -> comparison .)
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATEROREQUAL  shift and go to state 47
    LESSOREQUAL     shift and go to state 48


state 24

    (32) comparison -> term .
    (33) term -> term . PLUS factor
    (34) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 32 (comparison -> term .)
    LESS            reduce using rule 32 (comparison -> term .)
    GREATEROREQUAL  reduce using rule 32 (comparison -> term .)
    LESSOREQUAL     reduce using rule 32 (comparison -> term .)
    EQUALS          reduce using rule 32 (comparison -> term .)
    NOTEQUALS       reduce using rule 32 (comparison -> term .)
    OR              reduce using rule 32 (comparison -> term .)
    AND             reduce using rule 32 (comparison -> term .)
    VAR             reduce using rule 32 (comparison -> term .)
    FUNC            reduce using rule 32 (comparison -> term .)
    IF              reduce using rule 32 (comparison -> term .)
    WHILE           reduce using rule 32 (comparison -> term .)
    PRINT           reduce using rule 32 (comparison -> term .)
    RETURN          reduce using rule 32 (comparison -> term .)
    ID              reduce using rule 32 (comparison -> term .)
    NOT             reduce using rule 32 (comparison -> term .)
    NUMBER          reduce using rule 32 (comparison -> term .)
    LPAREN          reduce using rule 32 (comparison -> term .)
    $end            reduce using rule 32 (comparison -> term .)
    RPAREN          reduce using rule 32 (comparison -> term .)
    THEN            reduce using rule 32 (comparison -> term .)
    RBRACE          reduce using rule 32 (comparison -> term .)
    COMMA           reduce using rule 32 (comparison -> term .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! MINUS           [ reduce using rule 32 (comparison -> term .) ]


state 25

    (35) term -> factor .
    (36) factor -> factor . TIMES unary
    (37) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 35 (term -> factor .)
    MINUS           reduce using rule 35 (term -> factor .)
    GREATER         reduce using rule 35 (term -> factor .)
    LESS            reduce using rule 35 (term -> factor .)
    GREATEROREQUAL  reduce using rule 35 (term -> factor .)
    LESSOREQUAL     reduce using rule 35 (term -> factor .)
    EQUALS          reduce using rule 35 (term -> factor .)
    NOTEQUALS       reduce using rule 35 (term -> factor .)
    OR              reduce using rule 35 (term -> factor .)
    AND             reduce using rule 35 (term -> factor .)
    VAR             reduce using rule 35 (term -> factor .)
    FUNC            reduce using rule 35 (term -> factor .)
    IF              reduce using rule 35 (term -> factor .)
    WHILE           reduce using rule 35 (term -> factor .)
    PRINT           reduce using rule 35 (term -> factor .)
    RETURN          reduce using rule 35 (term -> factor .)
    ID              reduce using rule 35 (term -> factor .)
    NOT             reduce using rule 35 (term -> factor .)
    NUMBER          reduce using rule 35 (term -> factor .)
    LPAREN          reduce using rule 35 (term -> factor .)
    $end            reduce using rule 35 (term -> factor .)
    RPAREN          reduce using rule 35 (term -> factor .)
    THEN            reduce using rule 35 (term -> factor .)
    RBRACE          reduce using rule 35 (term -> factor .)
    COMMA           reduce using rule 35 (term -> factor .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 26

    (40) unary -> MINUS . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    unary                          shift and go to state 53
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 27

    (38) factor -> unary .

    TIMES           reduce using rule 38 (factor -> unary .)
    DIVIDE          reduce using rule 38 (factor -> unary .)
    PLUS            reduce using rule 38 (factor -> unary .)
    MINUS           reduce using rule 38 (factor -> unary .)
    GREATER         reduce using rule 38 (factor -> unary .)
    LESS            reduce using rule 38 (factor -> unary .)
    GREATEROREQUAL  reduce using rule 38 (factor -> unary .)
    LESSOREQUAL     reduce using rule 38 (factor -> unary .)
    EQUALS          reduce using rule 38 (factor -> unary .)
    NOTEQUALS       reduce using rule 38 (factor -> unary .)
    OR              reduce using rule 38 (factor -> unary .)
    AND             reduce using rule 38 (factor -> unary .)
    VAR             reduce using rule 38 (factor -> unary .)
    FUNC            reduce using rule 38 (factor -> unary .)
    IF              reduce using rule 38 (factor -> unary .)
    WHILE           reduce using rule 38 (factor -> unary .)
    PRINT           reduce using rule 38 (factor -> unary .)
    RETURN          reduce using rule 38 (factor -> unary .)
    ID              reduce using rule 38 (factor -> unary .)
    NOT             reduce using rule 38 (factor -> unary .)
    NUMBER          reduce using rule 38 (factor -> unary .)
    LPAREN          reduce using rule 38 (factor -> unary .)
    $end            reduce using rule 38 (factor -> unary .)
    RPAREN          reduce using rule 38 (factor -> unary .)
    THEN            reduce using rule 38 (factor -> unary .)
    RBRACE          reduce using rule 38 (factor -> unary .)
    COMMA           reduce using rule 38 (factor -> unary .)


state 28

    (39) unary -> NOT . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    unary                          shift and go to state 55
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 29

    (41) unary -> call .

    TIMES           reduce using rule 41 (unary -> call .)
    DIVIDE          reduce using rule 41 (unary -> call .)
    PLUS            reduce using rule 41 (unary -> call .)
    MINUS           reduce using rule 41 (unary -> call .)
    GREATER         reduce using rule 41 (unary -> call .)
    LESS            reduce using rule 41 (unary -> call .)
    GREATEROREQUAL  reduce using rule 41 (unary -> call .)
    LESSOREQUAL     reduce using rule 41 (unary -> call .)
    EQUALS          reduce using rule 41 (unary -> call .)
    NOTEQUALS       reduce using rule 41 (unary -> call .)
    OR              reduce using rule 41 (unary -> call .)
    AND             reduce using rule 41 (unary -> call .)
    VAR             reduce using rule 41 (unary -> call .)
    FUNC            reduce using rule 41 (unary -> call .)
    IF              reduce using rule 41 (unary -> call .)
    WHILE           reduce using rule 41 (unary -> call .)
    PRINT           reduce using rule 41 (unary -> call .)
    RETURN          reduce using rule 41 (unary -> call .)
    ID              reduce using rule 41 (unary -> call .)
    NOT             reduce using rule 41 (unary -> call .)
    NUMBER          reduce using rule 41 (unary -> call .)
    LPAREN          reduce using rule 41 (unary -> call .)
    $end            reduce using rule 41 (unary -> call .)
    RPAREN          reduce using rule 41 (unary -> call .)
    THEN            reduce using rule 41 (unary -> call .)
    RBRACE          reduce using rule 41 (unary -> call .)
    COMMA           reduce using rule 41 (unary -> call .)


state 30

    (42) call -> primary . LPAREN arguments RPAREN
    (43) call -> primary .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 56
    TIMES           reduce using rule 43 (call -> primary .)
    DIVIDE          reduce using rule 43 (call -> primary .)
    PLUS            reduce using rule 43 (call -> primary .)
    MINUS           reduce using rule 43 (call -> primary .)
    GREATER         reduce using rule 43 (call -> primary .)
    LESS            reduce using rule 43 (call -> primary .)
    GREATEROREQUAL  reduce using rule 43 (call -> primary .)
    LESSOREQUAL     reduce using rule 43 (call -> primary .)
    EQUALS          reduce using rule 43 (call -> primary .)
    NOTEQUALS       reduce using rule 43 (call -> primary .)
    OR              reduce using rule 43 (call -> primary .)
    AND             reduce using rule 43 (call -> primary .)
    VAR             reduce using rule 43 (call -> primary .)
    FUNC            reduce using rule 43 (call -> primary .)
    IF              reduce using rule 43 (call -> primary .)
    WHILE           reduce using rule 43 (call -> primary .)
    PRINT           reduce using rule 43 (call -> primary .)
    RETURN          reduce using rule 43 (call -> primary .)
    ID              reduce using rule 43 (call -> primary .)
    NOT             reduce using rule 43 (call -> primary .)
    NUMBER          reduce using rule 43 (call -> primary .)
    $end            reduce using rule 43 (call -> primary .)
    RPAREN          reduce using rule 43 (call -> primary .)
    THEN            reduce using rule 43 (call -> primary .)
    RBRACE          reduce using rule 43 (call -> primary .)
    COMMA           reduce using rule 43 (call -> primary .)

  ! LPAREN          [ reduce using rule 43 (call -> primary .) ]


state 31

    (44) primary -> NUMBER .

    LPAREN          reduce using rule 44 (primary -> NUMBER .)
    TIMES           reduce using rule 44 (primary -> NUMBER .)
    DIVIDE          reduce using rule 44 (primary -> NUMBER .)
    PLUS            reduce using rule 44 (primary -> NUMBER .)
    MINUS           reduce using rule 44 (primary -> NUMBER .)
    GREATER         reduce using rule 44 (primary -> NUMBER .)
    LESS            reduce using rule 44 (primary -> NUMBER .)
    GREATEROREQUAL  reduce using rule 44 (primary -> NUMBER .)
    LESSOREQUAL     reduce using rule 44 (primary -> NUMBER .)
    EQUALS          reduce using rule 44 (primary -> NUMBER .)
    NOTEQUALS       reduce using rule 44 (primary -> NUMBER .)
    OR              reduce using rule 44 (primary -> NUMBER .)
    AND             reduce using rule 44 (primary -> NUMBER .)
    VAR             reduce using rule 44 (primary -> NUMBER .)
    FUNC            reduce using rule 44 (primary -> NUMBER .)
    IF              reduce using rule 44 (primary -> NUMBER .)
    WHILE           reduce using rule 44 (primary -> NUMBER .)
    PRINT           reduce using rule 44 (primary -> NUMBER .)
    RETURN          reduce using rule 44 (primary -> NUMBER .)
    ID              reduce using rule 44 (primary -> NUMBER .)
    NOT             reduce using rule 44 (primary -> NUMBER .)
    NUMBER          reduce using rule 44 (primary -> NUMBER .)
    $end            reduce using rule 44 (primary -> NUMBER .)
    RPAREN          reduce using rule 44 (primary -> NUMBER .)
    THEN            reduce using rule 44 (primary -> NUMBER .)
    RBRACE          reduce using rule 44 (primary -> NUMBER .)
    COMMA           reduce using rule 44 (primary -> NUMBER .)


state 32

    (3) declaration_list -> declaration_list declaration .

    VAR             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    FUNC            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 3 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    PRINT           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    RETURN          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NOT             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    MINUS           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NUMBER          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    RBRACE          reduce using rule 3 (declaration_list -> declaration_list declaration .)


state 33

    (17) varDeclaration -> VAR ID .
    (18) varDeclaration -> VAR ID . ASSIGN expression

    VAR             reduce using rule 17 (varDeclaration -> VAR ID .)
    FUNC            reduce using rule 17 (varDeclaration -> VAR ID .)
    IF              reduce using rule 17 (varDeclaration -> VAR ID .)
    WHILE           reduce using rule 17 (varDeclaration -> VAR ID .)
    PRINT           reduce using rule 17 (varDeclaration -> VAR ID .)
    RETURN          reduce using rule 17 (varDeclaration -> VAR ID .)
    ID              reduce using rule 17 (varDeclaration -> VAR ID .)
    NOT             reduce using rule 17 (varDeclaration -> VAR ID .)
    MINUS           reduce using rule 17 (varDeclaration -> VAR ID .)
    NUMBER          reduce using rule 17 (varDeclaration -> VAR ID .)
    LPAREN          reduce using rule 17 (varDeclaration -> VAR ID .)
    $end            reduce using rule 17 (varDeclaration -> VAR ID .)
    RBRACE          reduce using rule 17 (varDeclaration -> VAR ID .)
    ASSIGN          shift and go to state 57


state 34

    (20) assignment -> ID ASSIGN . assignment
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    assignment                     shift and go to state 58
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 35

    (50) funcDeclaration -> FUNC ID . LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE

    LPAREN          shift and go to state 59


state 36

    (46) primary -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 60


state 37

    (13) ifStatement -> IF expression . THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> IF expression . THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE

    THEN            shift and go to state 61


state 38

    (15) whileStatement -> WHILE expression . THEN LBRACE declaration_list RBRACE

    THEN            shift and go to state 62


state 39

    (16) printStatement -> PRINT expression .

    VAR             reduce using rule 16 (printStatement -> PRINT expression .)
    FUNC            reduce using rule 16 (printStatement -> PRINT expression .)
    IF              reduce using rule 16 (printStatement -> PRINT expression .)
    WHILE           reduce using rule 16 (printStatement -> PRINT expression .)
    PRINT           reduce using rule 16 (printStatement -> PRINT expression .)
    RETURN          reduce using rule 16 (printStatement -> PRINT expression .)
    ID              reduce using rule 16 (printStatement -> PRINT expression .)
    NOT             reduce using rule 16 (printStatement -> PRINT expression .)
    MINUS           reduce using rule 16 (printStatement -> PRINT expression .)
    NUMBER          reduce using rule 16 (printStatement -> PRINT expression .)
    LPAREN          reduce using rule 16 (printStatement -> PRINT expression .)
    $end            reduce using rule 16 (printStatement -> PRINT expression .)
    RBRACE          reduce using rule 16 (printStatement -> PRINT expression .)


state 40

    (12) returnStatement -> RETURN expression .

    VAR             reduce using rule 12 (returnStatement -> RETURN expression .)
    FUNC            reduce using rule 12 (returnStatement -> RETURN expression .)
    IF              reduce using rule 12 (returnStatement -> RETURN expression .)
    WHILE           reduce using rule 12 (returnStatement -> RETURN expression .)
    PRINT           reduce using rule 12 (returnStatement -> RETURN expression .)
    RETURN          reduce using rule 12 (returnStatement -> RETURN expression .)
    ID              reduce using rule 12 (returnStatement -> RETURN expression .)
    NOT             reduce using rule 12 (returnStatement -> RETURN expression .)
    MINUS           reduce using rule 12 (returnStatement -> RETURN expression .)
    NUMBER          reduce using rule 12 (returnStatement -> RETURN expression .)
    LPAREN          reduce using rule 12 (returnStatement -> RETURN expression .)
    $end            reduce using rule 12 (returnStatement -> RETURN expression .)
    RBRACE          reduce using rule 12 (returnStatement -> RETURN expression .)


state 41

    (22) logical -> logical OR . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    equality                       shift and go to state 63
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 42

    (23) logical -> logical AND . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    equality                       shift and go to state 64
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 43

    (25) equality -> equality EQUALS . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    comparison                     shift and go to state 65
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 44

    (26) equality -> equality NOTEQUALS . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    comparison                     shift and go to state 66
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 45

    (28) comparison -> comparison GREATER . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    term                           shift and go to state 67
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 46

    (29) comparison -> comparison LESS . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    term                           shift and go to state 68
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 47

    (30) comparison -> comparison GREATEROREQUAL . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    term                           shift and go to state 69
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 48

    (31) comparison -> comparison LESSOREQUAL . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    term                           shift and go to state 70
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 49

    (33) term -> term PLUS . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    factor                         shift and go to state 71
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 50

    (34) term -> term MINUS . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    factor                         shift and go to state 72
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 51

    (36) factor -> factor TIMES . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    unary                          shift and go to state 73
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 52

    (37) factor -> factor DIVIDE . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    ID              shift and go to state 54
    LPAREN          shift and go to state 15

    unary                          shift and go to state 74
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 53

    (40) unary -> MINUS unary .

    TIMES           reduce using rule 40 (unary -> MINUS unary .)
    DIVIDE          reduce using rule 40 (unary -> MINUS unary .)
    PLUS            reduce using rule 40 (unary -> MINUS unary .)
    MINUS           reduce using rule 40 (unary -> MINUS unary .)
    GREATER         reduce using rule 40 (unary -> MINUS unary .)
    LESS            reduce using rule 40 (unary -> MINUS unary .)
    GREATEROREQUAL  reduce using rule 40 (unary -> MINUS unary .)
    LESSOREQUAL     reduce using rule 40 (unary -> MINUS unary .)
    EQUALS          reduce using rule 40 (unary -> MINUS unary .)
    NOTEQUALS       reduce using rule 40 (unary -> MINUS unary .)
    OR              reduce using rule 40 (unary -> MINUS unary .)
    AND             reduce using rule 40 (unary -> MINUS unary .)
    VAR             reduce using rule 40 (unary -> MINUS unary .)
    FUNC            reduce using rule 40 (unary -> MINUS unary .)
    IF              reduce using rule 40 (unary -> MINUS unary .)
    WHILE           reduce using rule 40 (unary -> MINUS unary .)
    PRINT           reduce using rule 40 (unary -> MINUS unary .)
    RETURN          reduce using rule 40 (unary -> MINUS unary .)
    ID              reduce using rule 40 (unary -> MINUS unary .)
    NOT             reduce using rule 40 (unary -> MINUS unary .)
    NUMBER          reduce using rule 40 (unary -> MINUS unary .)
    LPAREN          reduce using rule 40 (unary -> MINUS unary .)
    $end            reduce using rule 40 (unary -> MINUS unary .)
    RPAREN          reduce using rule 40 (unary -> MINUS unary .)
    THEN            reduce using rule 40 (unary -> MINUS unary .)
    RBRACE          reduce using rule 40 (unary -> MINUS unary .)
    COMMA           reduce using rule 40 (unary -> MINUS unary .)


state 54

    (45) primary -> ID .

    LPAREN          reduce using rule 45 (primary -> ID .)
    TIMES           reduce using rule 45 (primary -> ID .)
    DIVIDE          reduce using rule 45 (primary -> ID .)
    PLUS            reduce using rule 45 (primary -> ID .)
    MINUS           reduce using rule 45 (primary -> ID .)
    GREATER         reduce using rule 45 (primary -> ID .)
    LESS            reduce using rule 45 (primary -> ID .)
    GREATEROREQUAL  reduce using rule 45 (primary -> ID .)
    LESSOREQUAL     reduce using rule 45 (primary -> ID .)
    EQUALS          reduce using rule 45 (primary -> ID .)
    NOTEQUALS       reduce using rule 45 (primary -> ID .)
    OR              reduce using rule 45 (primary -> ID .)
    AND             reduce using rule 45 (primary -> ID .)
    VAR             reduce using rule 45 (primary -> ID .)
    FUNC            reduce using rule 45 (primary -> ID .)
    IF              reduce using rule 45 (primary -> ID .)
    WHILE           reduce using rule 45 (primary -> ID .)
    PRINT           reduce using rule 45 (primary -> ID .)
    RETURN          reduce using rule 45 (primary -> ID .)
    ID              reduce using rule 45 (primary -> ID .)
    NOT             reduce using rule 45 (primary -> ID .)
    NUMBER          reduce using rule 45 (primary -> ID .)
    $end            reduce using rule 45 (primary -> ID .)
    RPAREN          reduce using rule 45 (primary -> ID .)
    THEN            reduce using rule 45 (primary -> ID .)
    RBRACE          reduce using rule 45 (primary -> ID .)
    COMMA           reduce using rule 45 (primary -> ID .)


state 55

    (39) unary -> NOT unary .

    TIMES           reduce using rule 39 (unary -> NOT unary .)
    DIVIDE          reduce using rule 39 (unary -> NOT unary .)
    PLUS            reduce using rule 39 (unary -> NOT unary .)
    MINUS           reduce using rule 39 (unary -> NOT unary .)
    GREATER         reduce using rule 39 (unary -> NOT unary .)
    LESS            reduce using rule 39 (unary -> NOT unary .)
    GREATEROREQUAL  reduce using rule 39 (unary -> NOT unary .)
    LESSOREQUAL     reduce using rule 39 (unary -> NOT unary .)
    EQUALS          reduce using rule 39 (unary -> NOT unary .)
    NOTEQUALS       reduce using rule 39 (unary -> NOT unary .)
    OR              reduce using rule 39 (unary -> NOT unary .)
    AND             reduce using rule 39 (unary -> NOT unary .)
    VAR             reduce using rule 39 (unary -> NOT unary .)
    FUNC            reduce using rule 39 (unary -> NOT unary .)
    IF              reduce using rule 39 (unary -> NOT unary .)
    WHILE           reduce using rule 39 (unary -> NOT unary .)
    PRINT           reduce using rule 39 (unary -> NOT unary .)
    RETURN          reduce using rule 39 (unary -> NOT unary .)
    ID              reduce using rule 39 (unary -> NOT unary .)
    NOT             reduce using rule 39 (unary -> NOT unary .)
    NUMBER          reduce using rule 39 (unary -> NOT unary .)
    LPAREN          reduce using rule 39 (unary -> NOT unary .)
    $end            reduce using rule 39 (unary -> NOT unary .)
    RPAREN          reduce using rule 39 (unary -> NOT unary .)
    THEN            reduce using rule 39 (unary -> NOT unary .)
    RBRACE          reduce using rule 39 (unary -> NOT unary .)
    COMMA           reduce using rule 39 (unary -> NOT unary .)


state 56

    (42) call -> primary LPAREN . arguments RPAREN
    (47) arguments -> . arguments COMMA expression
    (48) arguments -> . expression
    (49) arguments -> .
    (19) expression -> . assignment
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    RPAREN          reduce using rule 49 (arguments -> .)
    COMMA           reduce using rule 49 (arguments -> .)
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    primary                        shift and go to state 30
    arguments                      shift and go to state 75
    expression                     shift and go to state 76
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29

state 57

    (18) varDeclaration -> VAR ID ASSIGN . expression
    (19) expression -> . assignment
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 77
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 58

    (20) assignment -> ID ASSIGN assignment .

    VAR             reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    FUNC            reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    IF              reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    WHILE           reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    PRINT           reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    RETURN          reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    ID              reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    NOT             reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    MINUS           reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    NUMBER          reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    LPAREN          reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    $end            reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    RPAREN          reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    THEN            reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    RBRACE          reduce using rule 20 (assignment -> ID ASSIGN assignment .)
    COMMA           reduce using rule 20 (assignment -> ID ASSIGN assignment .)


state 59

    (50) funcDeclaration -> FUNC ID LPAREN . parameter_list RPAREN LBRACE declaration_list RBRACE
    (51) parameter_list -> . parameter_list COMMA ID
    (52) parameter_list -> . ID
    (53) parameter_list -> .

    ID              shift and go to state 78
    RPAREN          reduce using rule 53 (parameter_list -> .)
    COMMA           reduce using rule 53 (parameter_list -> .)

    parameter_list                 shift and go to state 79

state 60

    (46) primary -> LPAREN expression RPAREN .

    LPAREN          reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    LESS            reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    GREATEROREQUAL  reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    LESSOREQUAL     reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    OR              reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    AND             reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    VAR             reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    FUNC            reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    IF              reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    ID              reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    NOT             reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    $end            reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    THEN            reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 46 (primary -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 46 (primary -> LPAREN expression RPAREN .)


state 61

    (13) ifStatement -> IF expression THEN . LBRACE declaration_list RBRACE
    (14) ifStatement -> IF expression THEN . LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 80


state 62

    (15) whileStatement -> WHILE expression THEN . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 81


state 63

    (22) logical -> logical OR equality .
    (25) equality -> equality . EQUALS comparison
    (26) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 22 (logical -> logical OR equality .)
    AND             reduce using rule 22 (logical -> logical OR equality .)
    VAR             reduce using rule 22 (logical -> logical OR equality .)
    FUNC            reduce using rule 22 (logical -> logical OR equality .)
    IF              reduce using rule 22 (logical -> logical OR equality .)
    WHILE           reduce using rule 22 (logical -> logical OR equality .)
    PRINT           reduce using rule 22 (logical -> logical OR equality .)
    RETURN          reduce using rule 22 (logical -> logical OR equality .)
    ID              reduce using rule 22 (logical -> logical OR equality .)
    NOT             reduce using rule 22 (logical -> logical OR equality .)
    MINUS           reduce using rule 22 (logical -> logical OR equality .)
    NUMBER          reduce using rule 22 (logical -> logical OR equality .)
    LPAREN          reduce using rule 22 (logical -> logical OR equality .)
    $end            reduce using rule 22 (logical -> logical OR equality .)
    RPAREN          reduce using rule 22 (logical -> logical OR equality .)
    THEN            reduce using rule 22 (logical -> logical OR equality .)
    RBRACE          reduce using rule 22 (logical -> logical OR equality .)
    COMMA           reduce using rule 22 (logical -> logical OR equality .)
    EQUALS          shift and go to state 43
    NOTEQUALS       shift and go to state 44


state 64

    (23) logical -> logical AND equality .
    (25) equality -> equality . EQUALS comparison
    (26) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 23 (logical -> logical AND equality .)
    AND             reduce using rule 23 (logical -> logical AND equality .)
    VAR             reduce using rule 23 (logical -> logical AND equality .)
    FUNC            reduce using rule 23 (logical -> logical AND equality .)
    IF              reduce using rule 23 (logical -> logical AND equality .)
    WHILE           reduce using rule 23 (logical -> logical AND equality .)
    PRINT           reduce using rule 23 (logical -> logical AND equality .)
    RETURN          reduce using rule 23 (logical -> logical AND equality .)
    ID              reduce using rule 23 (logical -> logical AND equality .)
    NOT             reduce using rule 23 (logical -> logical AND equality .)
    MINUS           reduce using rule 23 (logical -> logical AND equality .)
    NUMBER          reduce using rule 23 (logical -> logical AND equality .)
    LPAREN          reduce using rule 23 (logical -> logical AND equality .)
    $end            reduce using rule 23 (logical -> logical AND equality .)
    RPAREN          reduce using rule 23 (logical -> logical AND equality .)
    THEN            reduce using rule 23 (logical -> logical AND equality .)
    RBRACE          reduce using rule 23 (logical -> logical AND equality .)
    COMMA           reduce using rule 23 (logical -> logical AND equality .)
    EQUALS          shift and go to state 43
    NOTEQUALS       shift and go to state 44


state 65

    (25) equality -> equality EQUALS comparison .
    (28) comparison -> comparison . GREATER term
    (29) comparison -> comparison . LESS term
    (30) comparison -> comparison . GREATEROREQUAL term
    (31) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 25 (equality -> equality EQUALS comparison .)
    NOTEQUALS       reduce using rule 25 (equality -> equality EQUALS comparison .)
    OR              reduce using rule 25 (equality -> equality EQUALS comparison .)
    AND             reduce using rule 25 (equality -> equality EQUALS comparison .)
    VAR             reduce using rule 25 (equality -> equality EQUALS comparison .)
    FUNC            reduce using rule 25 (equality -> equality EQUALS comparison .)
    IF              reduce using rule 25 (equality -> equality EQUALS comparison .)
    WHILE           reduce using rule 25 (equality -> equality EQUALS comparison .)
    PRINT           reduce using rule 25 (equality -> equality EQUALS comparison .)
    RETURN          reduce using rule 25 (equality -> equality EQUALS comparison .)
    ID              reduce using rule 25 (equality -> equality EQUALS comparison .)
    NOT             reduce using rule 25 (equality -> equality EQUALS comparison .)
    MINUS           reduce using rule 25 (equality -> equality EQUALS comparison .)
    NUMBER          reduce using rule 25 (equality -> equality EQUALS comparison .)
    LPAREN          reduce using rule 25 (equality -> equality EQUALS comparison .)
    $end            reduce using rule 25 (equality -> equality EQUALS comparison .)
    RPAREN          reduce using rule 25 (equality -> equality EQUALS comparison .)
    THEN            reduce using rule 25 (equality -> equality EQUALS comparison .)
    RBRACE          reduce using rule 25 (equality -> equality EQUALS comparison .)
    COMMA           reduce using rule 25 (equality -> equality EQUALS comparison .)
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATEROREQUAL  shift and go to state 47
    LESSOREQUAL     shift and go to state 48


state 66

    (26) equality -> equality NOTEQUALS comparison .
    (28) comparison -> comparison . GREATER term
    (29) comparison -> comparison . LESS term
    (30) comparison -> comparison . GREATEROREQUAL term
    (31) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    NOTEQUALS       reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    OR              reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    AND             reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    VAR             reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    FUNC            reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    IF              reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    WHILE           reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    PRINT           reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    RETURN          reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    ID              reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    NOT             reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    MINUS           reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    NUMBER          reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    LPAREN          reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    $end            reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    RPAREN          reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    THEN            reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    RBRACE          reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    COMMA           reduce using rule 26 (equality -> equality NOTEQUALS comparison .)
    GREATER         shift and go to state 45
    LESS            shift and go to state 46
    GREATEROREQUAL  shift and go to state 47
    LESSOREQUAL     shift and go to state 48


state 67

    (28) comparison -> comparison GREATER term .
    (33) term -> term . PLUS factor
    (34) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 28 (comparison -> comparison GREATER term .)
    LESS            reduce using rule 28 (comparison -> comparison GREATER term .)
    GREATEROREQUAL  reduce using rule 28 (comparison -> comparison GREATER term .)
    LESSOREQUAL     reduce using rule 28 (comparison -> comparison GREATER term .)
    EQUALS          reduce using rule 28 (comparison -> comparison GREATER term .)
    NOTEQUALS       reduce using rule 28 (comparison -> comparison GREATER term .)
    OR              reduce using rule 28 (comparison -> comparison GREATER term .)
    AND             reduce using rule 28 (comparison -> comparison GREATER term .)
    VAR             reduce using rule 28 (comparison -> comparison GREATER term .)
    FUNC            reduce using rule 28 (comparison -> comparison GREATER term .)
    IF              reduce using rule 28 (comparison -> comparison GREATER term .)
    WHILE           reduce using rule 28 (comparison -> comparison GREATER term .)
    PRINT           reduce using rule 28 (comparison -> comparison GREATER term .)
    RETURN          reduce using rule 28 (comparison -> comparison GREATER term .)
    ID              reduce using rule 28 (comparison -> comparison GREATER term .)
    NOT             reduce using rule 28 (comparison -> comparison GREATER term .)
    NUMBER          reduce using rule 28 (comparison -> comparison GREATER term .)
    LPAREN          reduce using rule 28 (comparison -> comparison GREATER term .)
    $end            reduce using rule 28 (comparison -> comparison GREATER term .)
    RPAREN          reduce using rule 28 (comparison -> comparison GREATER term .)
    THEN            reduce using rule 28 (comparison -> comparison GREATER term .)
    RBRACE          reduce using rule 28 (comparison -> comparison GREATER term .)
    COMMA           reduce using rule 28 (comparison -> comparison GREATER term .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! MINUS           [ reduce using rule 28 (comparison -> comparison GREATER term .) ]


state 68

    (29) comparison -> comparison LESS term .
    (33) term -> term . PLUS factor
    (34) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 29 (comparison -> comparison LESS term .)
    LESS            reduce using rule 29 (comparison -> comparison LESS term .)
    GREATEROREQUAL  reduce using rule 29 (comparison -> comparison LESS term .)
    LESSOREQUAL     reduce using rule 29 (comparison -> comparison LESS term .)
    EQUALS          reduce using rule 29 (comparison -> comparison LESS term .)
    NOTEQUALS       reduce using rule 29 (comparison -> comparison LESS term .)
    OR              reduce using rule 29 (comparison -> comparison LESS term .)
    AND             reduce using rule 29 (comparison -> comparison LESS term .)
    VAR             reduce using rule 29 (comparison -> comparison LESS term .)
    FUNC            reduce using rule 29 (comparison -> comparison LESS term .)
    IF              reduce using rule 29 (comparison -> comparison LESS term .)
    WHILE           reduce using rule 29 (comparison -> comparison LESS term .)
    PRINT           reduce using rule 29 (comparison -> comparison LESS term .)
    RETURN          reduce using rule 29 (comparison -> comparison LESS term .)
    ID              reduce using rule 29 (comparison -> comparison LESS term .)
    NOT             reduce using rule 29 (comparison -> comparison LESS term .)
    NUMBER          reduce using rule 29 (comparison -> comparison LESS term .)
    LPAREN          reduce using rule 29 (comparison -> comparison LESS term .)
    $end            reduce using rule 29 (comparison -> comparison LESS term .)
    RPAREN          reduce using rule 29 (comparison -> comparison LESS term .)
    THEN            reduce using rule 29 (comparison -> comparison LESS term .)
    RBRACE          reduce using rule 29 (comparison -> comparison LESS term .)
    COMMA           reduce using rule 29 (comparison -> comparison LESS term .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! MINUS           [ reduce using rule 29 (comparison -> comparison LESS term .) ]


state 69

    (30) comparison -> comparison GREATEROREQUAL term .
    (33) term -> term . PLUS factor
    (34) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    LESS            reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    GREATEROREQUAL  reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    LESSOREQUAL     reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    EQUALS          reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    NOTEQUALS       reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    OR              reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    AND             reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    VAR             reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    FUNC            reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    IF              reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    WHILE           reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    PRINT           reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    RETURN          reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    ID              reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    NOT             reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    NUMBER          reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    LPAREN          reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    $end            reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    RPAREN          reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    THEN            reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    RBRACE          reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    COMMA           reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! MINUS           [ reduce using rule 30 (comparison -> comparison GREATEROREQUAL term .) ]


state 70

    (31) comparison -> comparison LESSOREQUAL term .
    (33) term -> term . PLUS factor
    (34) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    LESS            reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    GREATEROREQUAL  reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    LESSOREQUAL     reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    EQUALS          reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    NOTEQUALS       reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    OR              reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    AND             reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    VAR             reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    FUNC            reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    IF              reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    WHILE           reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    PRINT           reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    RETURN          reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    ID              reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    NOT             reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    NUMBER          reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    LPAREN          reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    $end            reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    RPAREN          reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    THEN            reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    RBRACE          reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    COMMA           reduce using rule 31 (comparison -> comparison LESSOREQUAL term .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50

  ! MINUS           [ reduce using rule 31 (comparison -> comparison LESSOREQUAL term .) ]


state 71

    (33) term -> term PLUS factor .
    (36) factor -> factor . TIMES unary
    (37) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 33 (term -> term PLUS factor .)
    MINUS           reduce using rule 33 (term -> term PLUS factor .)
    GREATER         reduce using rule 33 (term -> term PLUS factor .)
    LESS            reduce using rule 33 (term -> term PLUS factor .)
    GREATEROREQUAL  reduce using rule 33 (term -> term PLUS factor .)
    LESSOREQUAL     reduce using rule 33 (term -> term PLUS factor .)
    EQUALS          reduce using rule 33 (term -> term PLUS factor .)
    NOTEQUALS       reduce using rule 33 (term -> term PLUS factor .)
    OR              reduce using rule 33 (term -> term PLUS factor .)
    AND             reduce using rule 33 (term -> term PLUS factor .)
    VAR             reduce using rule 33 (term -> term PLUS factor .)
    FUNC            reduce using rule 33 (term -> term PLUS factor .)
    IF              reduce using rule 33 (term -> term PLUS factor .)
    WHILE           reduce using rule 33 (term -> term PLUS factor .)
    PRINT           reduce using rule 33 (term -> term PLUS factor .)
    RETURN          reduce using rule 33 (term -> term PLUS factor .)
    ID              reduce using rule 33 (term -> term PLUS factor .)
    NOT             reduce using rule 33 (term -> term PLUS factor .)
    NUMBER          reduce using rule 33 (term -> term PLUS factor .)
    LPAREN          reduce using rule 33 (term -> term PLUS factor .)
    $end            reduce using rule 33 (term -> term PLUS factor .)
    RPAREN          reduce using rule 33 (term -> term PLUS factor .)
    THEN            reduce using rule 33 (term -> term PLUS factor .)
    RBRACE          reduce using rule 33 (term -> term PLUS factor .)
    COMMA           reduce using rule 33 (term -> term PLUS factor .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 72

    (34) term -> term MINUS factor .
    (36) factor -> factor . TIMES unary
    (37) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 34 (term -> term MINUS factor .)
    MINUS           reduce using rule 34 (term -> term MINUS factor .)
    GREATER         reduce using rule 34 (term -> term MINUS factor .)
    LESS            reduce using rule 34 (term -> term MINUS factor .)
    GREATEROREQUAL  reduce using rule 34 (term -> term MINUS factor .)
    LESSOREQUAL     reduce using rule 34 (term -> term MINUS factor .)
    EQUALS          reduce using rule 34 (term -> term MINUS factor .)
    NOTEQUALS       reduce using rule 34 (term -> term MINUS factor .)
    OR              reduce using rule 34 (term -> term MINUS factor .)
    AND             reduce using rule 34 (term -> term MINUS factor .)
    VAR             reduce using rule 34 (term -> term MINUS factor .)
    FUNC            reduce using rule 34 (term -> term MINUS factor .)
    IF              reduce using rule 34 (term -> term MINUS factor .)
    WHILE           reduce using rule 34 (term -> term MINUS factor .)
    PRINT           reduce using rule 34 (term -> term MINUS factor .)
    RETURN          reduce using rule 34 (term -> term MINUS factor .)
    ID              reduce using rule 34 (term -> term MINUS factor .)
    NOT             reduce using rule 34 (term -> term MINUS factor .)
    NUMBER          reduce using rule 34 (term -> term MINUS factor .)
    LPAREN          reduce using rule 34 (term -> term MINUS factor .)
    $end            reduce using rule 34 (term -> term MINUS factor .)
    RPAREN          reduce using rule 34 (term -> term MINUS factor .)
    THEN            reduce using rule 34 (term -> term MINUS factor .)
    RBRACE          reduce using rule 34 (term -> term MINUS factor .)
    COMMA           reduce using rule 34 (term -> term MINUS factor .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52


state 73

    (36) factor -> factor TIMES unary .

    TIMES           reduce using rule 36 (factor -> factor TIMES unary .)
    DIVIDE          reduce using rule 36 (factor -> factor TIMES unary .)
    PLUS            reduce using rule 36 (factor -> factor TIMES unary .)
    MINUS           reduce using rule 36 (factor -> factor TIMES unary .)
    GREATER         reduce using rule 36 (factor -> factor TIMES unary .)
    LESS            reduce using rule 36 (factor -> factor TIMES unary .)
    GREATEROREQUAL  reduce using rule 36 (factor -> factor TIMES unary .)
    LESSOREQUAL     reduce using rule 36 (factor -> factor TIMES unary .)
    EQUALS          reduce using rule 36 (factor -> factor TIMES unary .)
    NOTEQUALS       reduce using rule 36 (factor -> factor TIMES unary .)
    OR              reduce using rule 36 (factor -> factor TIMES unary .)
    AND             reduce using rule 36 (factor -> factor TIMES unary .)
    VAR             reduce using rule 36 (factor -> factor TIMES unary .)
    FUNC            reduce using rule 36 (factor -> factor TIMES unary .)
    IF              reduce using rule 36 (factor -> factor TIMES unary .)
    WHILE           reduce using rule 36 (factor -> factor TIMES unary .)
    PRINT           reduce using rule 36 (factor -> factor TIMES unary .)
    RETURN          reduce using rule 36 (factor -> factor TIMES unary .)
    ID              reduce using rule 36 (factor -> factor TIMES unary .)
    NOT             reduce using rule 36 (factor -> factor TIMES unary .)
    NUMBER          reduce using rule 36 (factor -> factor TIMES unary .)
    LPAREN          reduce using rule 36 (factor -> factor TIMES unary .)
    $end            reduce using rule 36 (factor -> factor TIMES unary .)
    RPAREN          reduce using rule 36 (factor -> factor TIMES unary .)
    THEN            reduce using rule 36 (factor -> factor TIMES unary .)
    RBRACE          reduce using rule 36 (factor -> factor TIMES unary .)
    COMMA           reduce using rule 36 (factor -> factor TIMES unary .)


state 74

    (37) factor -> factor DIVIDE unary .

    TIMES           reduce using rule 37 (factor -> factor DIVIDE unary .)
    DIVIDE          reduce using rule 37 (factor -> factor DIVIDE unary .)
    PLUS            reduce using rule 37 (factor -> factor DIVIDE unary .)
    MINUS           reduce using rule 37 (factor -> factor DIVIDE unary .)
    GREATER         reduce using rule 37 (factor -> factor DIVIDE unary .)
    LESS            reduce using rule 37 (factor -> factor DIVIDE unary .)
    GREATEROREQUAL  reduce using rule 37 (factor -> factor DIVIDE unary .)
    LESSOREQUAL     reduce using rule 37 (factor -> factor DIVIDE unary .)
    EQUALS          reduce using rule 37 (factor -> factor DIVIDE unary .)
    NOTEQUALS       reduce using rule 37 (factor -> factor DIVIDE unary .)
    OR              reduce using rule 37 (factor -> factor DIVIDE unary .)
    AND             reduce using rule 37 (factor -> factor DIVIDE unary .)
    VAR             reduce using rule 37 (factor -> factor DIVIDE unary .)
    FUNC            reduce using rule 37 (factor -> factor DIVIDE unary .)
    IF              reduce using rule 37 (factor -> factor DIVIDE unary .)
    WHILE           reduce using rule 37 (factor -> factor DIVIDE unary .)
    PRINT           reduce using rule 37 (factor -> factor DIVIDE unary .)
    RETURN          reduce using rule 37 (factor -> factor DIVIDE unary .)
    ID              reduce using rule 37 (factor -> factor DIVIDE unary .)
    NOT             reduce using rule 37 (factor -> factor DIVIDE unary .)
    NUMBER          reduce using rule 37 (factor -> factor DIVIDE unary .)
    LPAREN          reduce using rule 37 (factor -> factor DIVIDE unary .)
    $end            reduce using rule 37 (factor -> factor DIVIDE unary .)
    RPAREN          reduce using rule 37 (factor -> factor DIVIDE unary .)
    THEN            reduce using rule 37 (factor -> factor DIVIDE unary .)
    RBRACE          reduce using rule 37 (factor -> factor DIVIDE unary .)
    COMMA           reduce using rule 37 (factor -> factor DIVIDE unary .)


state 75

    (42) call -> primary LPAREN arguments . RPAREN
    (47) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 82
    COMMA           shift and go to state 83


state 76

    (48) arguments -> expression .

    RPAREN          reduce using rule 48 (arguments -> expression .)
    COMMA           reduce using rule 48 (arguments -> expression .)


state 77

    (18) varDeclaration -> VAR ID ASSIGN expression .

    VAR             reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    FUNC            reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    IF              reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    WHILE           reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    PRINT           reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    RETURN          reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    ID              reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    NOT             reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    MINUS           reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    NUMBER          reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    LPAREN          reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    $end            reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)
    RBRACE          reduce using rule 18 (varDeclaration -> VAR ID ASSIGN expression .)


state 78

    (52) parameter_list -> ID .

    RPAREN          reduce using rule 52 (parameter_list -> ID .)
    COMMA           reduce using rule 52 (parameter_list -> ID .)


state 79

    (50) funcDeclaration -> FUNC ID LPAREN parameter_list . RPAREN LBRACE declaration_list RBRACE
    (51) parameter_list -> parameter_list . COMMA ID

    RPAREN          shift and go to state 84
    COMMA           shift and go to state 85


state 80

    (13) ifStatement -> IF expression THEN LBRACE . declaration_list RBRACE
    (14) ifStatement -> IF expression THEN LBRACE . declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (17) varDeclaration -> . VAR ID
    (18) varDeclaration -> . VAR ID ASSIGN expression
    (7) statement -> . expression
    (8) statement -> . ifStatement
    (9) statement -> . whileStatement
    (10) statement -> . printStatement
    (11) statement -> . returnStatement
    (50) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (13) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (15) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (16) printStatement -> . PRINT expression
    (12) returnStatement -> . RETURN expression
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    VAR             shift and go to state 7
    FUNC            shift and go to state 14
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 9
    declaration_list               shift and go to state 86
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    ifStatement                    shift and go to state 10
    whileStatement                 shift and go to state 11
    printStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 81

    (15) whileStatement -> WHILE expression THEN LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (17) varDeclaration -> . VAR ID
    (18) varDeclaration -> . VAR ID ASSIGN expression
    (7) statement -> . expression
    (8) statement -> . ifStatement
    (9) statement -> . whileStatement
    (10) statement -> . printStatement
    (11) statement -> . returnStatement
    (50) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (13) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (15) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (16) printStatement -> . PRINT expression
    (12) returnStatement -> . RETURN expression
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    VAR             shift and go to state 7
    FUNC            shift and go to state 14
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 9
    declaration_list               shift and go to state 87
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    ifStatement                    shift and go to state 10
    whileStatement                 shift and go to state 11
    printStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 82

    (42) call -> primary LPAREN arguments RPAREN .

    TIMES           reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    PLUS            reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    MINUS           reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    GREATER         reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    LESS            reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    GREATEROREQUAL  reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    LESSOREQUAL     reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    EQUALS          reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    NOTEQUALS       reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    OR              reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    AND             reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    VAR             reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    FUNC            reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    IF              reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    WHILE           reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    PRINT           reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    RETURN          reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    ID              reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    NOT             reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    NUMBER          reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    $end            reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    THEN            reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)
    COMMA           reduce using rule 42 (call -> primary LPAREN arguments RPAREN .)


state 83

    (47) arguments -> arguments COMMA . expression
    (19) expression -> . assignment
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 88
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 84

    (50) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 89


state 85

    (51) parameter_list -> parameter_list COMMA . ID

    ID              shift and go to state 90


state 86

    (13) ifStatement -> IF expression THEN LBRACE declaration_list . RBRACE
    (14) ifStatement -> IF expression THEN LBRACE declaration_list . RBRACE ELSE LBRACE declaration_list RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (17) varDeclaration -> . VAR ID
    (18) varDeclaration -> . VAR ID ASSIGN expression
    (7) statement -> . expression
    (8) statement -> . ifStatement
    (9) statement -> . whileStatement
    (10) statement -> . printStatement
    (11) statement -> . returnStatement
    (50) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (13) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (15) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (16) printStatement -> . PRINT expression
    (12) returnStatement -> . RETURN expression
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 91
    VAR             shift and go to state 7
    FUNC            shift and go to state 14
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 9
    declaration                    shift and go to state 32
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    ifStatement                    shift and go to state 10
    whileStatement                 shift and go to state 11
    printStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 87

    (15) whileStatement -> WHILE expression THEN LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (17) varDeclaration -> . VAR ID
    (18) varDeclaration -> . VAR ID ASSIGN expression
    (7) statement -> . expression
    (8) statement -> . ifStatement
    (9) statement -> . whileStatement
    (10) statement -> . printStatement
    (11) statement -> . returnStatement
    (50) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (13) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (15) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (16) printStatement -> . PRINT expression
    (12) returnStatement -> . RETURN expression
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 92
    VAR             shift and go to state 7
    FUNC            shift and go to state 14
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 9
    declaration                    shift and go to state 32
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    ifStatement                    shift and go to state 10
    whileStatement                 shift and go to state 11
    printStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 88

    (47) arguments -> arguments COMMA expression .

    RPAREN          reduce using rule 47 (arguments -> arguments COMMA expression .)
    COMMA           reduce using rule 47 (arguments -> arguments COMMA expression .)


state 89

    (50) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (17) varDeclaration -> . VAR ID
    (18) varDeclaration -> . VAR ID ASSIGN expression
    (7) statement -> . expression
    (8) statement -> . ifStatement
    (9) statement -> . whileStatement
    (10) statement -> . printStatement
    (11) statement -> . returnStatement
    (50) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (13) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (15) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (16) printStatement -> . PRINT expression
    (12) returnStatement -> . RETURN expression
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    VAR             shift and go to state 7
    FUNC            shift and go to state 14
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    declaration_list               shift and go to state 93
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    expression                     shift and go to state 9
    ifStatement                    shift and go to state 10
    whileStatement                 shift and go to state 11
    printStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 90

    (51) parameter_list -> parameter_list COMMA ID .

    RPAREN          reduce using rule 51 (parameter_list -> parameter_list COMMA ID .)
    COMMA           reduce using rule 51 (parameter_list -> parameter_list COMMA ID .)


state 91

    (13) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .
    (14) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE . ELSE LBRACE declaration_list RBRACE

    VAR             reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    FUNC            reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    IF              reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    ID              reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    $end            reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 13 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    ELSE            shift and go to state 94


state 92

    (15) whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .

    VAR             reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    FUNC            reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    IF              reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    ID              reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    $end            reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 15 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)


state 93

    (50) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (17) varDeclaration -> . VAR ID
    (18) varDeclaration -> . VAR ID ASSIGN expression
    (7) statement -> . expression
    (8) statement -> . ifStatement
    (9) statement -> . whileStatement
    (10) statement -> . printStatement
    (11) statement -> . returnStatement
    (50) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (13) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (15) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (16) printStatement -> . PRINT expression
    (12) returnStatement -> . RETURN expression
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 95
    VAR             shift and go to state 7
    FUNC            shift and go to state 14
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    declaration                    shift and go to state 32
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    expression                     shift and go to state 9
    ifStatement                    shift and go to state 10
    whileStatement                 shift and go to state 11
    printStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 94

    (14) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 96


state 95

    (50) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .

    VAR             reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    FUNC            reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    IF              reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    ID              reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    $end            reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 50 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)


state 96

    (14) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (17) varDeclaration -> . VAR ID
    (18) varDeclaration -> . VAR ID ASSIGN expression
    (7) statement -> . expression
    (8) statement -> . ifStatement
    (9) statement -> . whileStatement
    (10) statement -> . printStatement
    (11) statement -> . returnStatement
    (50) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (13) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (15) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (16) printStatement -> . PRINT expression
    (12) returnStatement -> . RETURN expression
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    VAR             shift and go to state 7
    FUNC            shift and go to state 14
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 9
    declaration_list               shift and go to state 97
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    ifStatement                    shift and go to state 10
    whileStatement                 shift and go to state 11
    printStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 97

    (14) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (17) varDeclaration -> . VAR ID
    (18) varDeclaration -> . VAR ID ASSIGN expression
    (7) statement -> . expression
    (8) statement -> . ifStatement
    (9) statement -> . whileStatement
    (10) statement -> . printStatement
    (11) statement -> . returnStatement
    (50) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (19) expression -> . assignment
    (13) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (14) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (15) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (16) printStatement -> . PRINT expression
    (12) returnStatement -> . RETURN expression
    (20) assignment -> . ID ASSIGN assignment
    (21) assignment -> . logical
    (22) logical -> . logical OR equality
    (23) logical -> . logical AND equality
    (24) logical -> . equality
    (25) equality -> . equality EQUALS comparison
    (26) equality -> . equality NOTEQUALS comparison
    (27) equality -> . comparison
    (28) comparison -> . comparison GREATER term
    (29) comparison -> . comparison LESS term
    (30) comparison -> . comparison GREATEROREQUAL term
    (31) comparison -> . comparison LESSOREQUAL term
    (32) comparison -> . term
    (33) term -> . term PLUS factor
    (34) term -> . term MINUS factor
    (35) term -> . factor
    (36) factor -> . factor TIMES unary
    (37) factor -> . factor DIVIDE unary
    (38) factor -> . unary
    (39) unary -> . NOT unary
    (40) unary -> . MINUS unary
    (41) unary -> . call
    (42) call -> . primary LPAREN arguments RPAREN
    (43) call -> . primary
    (44) primary -> . NUMBER
    (45) primary -> . ID
    (46) primary -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 98
    VAR             shift and go to state 7
    FUNC            shift and go to state 14
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    ID              shift and go to state 8
    NOT             shift and go to state 28
    MINUS           shift and go to state 26
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 15

    expression                     shift and go to state 9
    declaration                    shift and go to state 32
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    ifStatement                    shift and go to state 10
    whileStatement                 shift and go to state 11
    printStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    assignment                     shift and go to state 16
    logical                        shift and go to state 21
    equality                       shift and go to state 22
    comparison                     shift and go to state 23
    term                           shift and go to state 24
    factor                         shift and go to state 25
    unary                          shift and go to state 27
    call                           shift and go to state 29
    primary                        shift and go to state 30

state 98

    (14) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .

    VAR             reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    FUNC            reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    IF              reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    ID              reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    $end            reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 14 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 30 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
