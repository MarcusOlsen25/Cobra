Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    FUNC
    IF
    THEN

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration_list declaration
Rule 4     declaration -> varDeclaration
Rule 5     declaration -> statement
Rule 6     statement -> expression
Rule 7     varDeclaration -> VAR ID
Rule 8     varDeclaration -> VAR ID ASSIGN expression
Rule 9     expression -> ID ASSIGN expression
Rule 10    expression -> expression PLUS term
Rule 11    expression -> expression MINUS term
Rule 12    expression -> term
Rule 13    term -> term TIMES factor
Rule 14    term -> term DIVIDE factor
Rule 15    term -> factor
Rule 16    factor -> NUMBER
Rule 17    factor -> ID
Rule 18    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ASSIGN               : 8 9
COMMA                : 
DIVIDE               : 14
FUNC                 : 
ID                   : 7 8 9 17
IF                   : 
LPAREN               : 18
MINUS                : 11
NUMBER               : 16
PLUS                 : 10
RPAREN               : 18
THEN                 : 
TIMES                : 13
VAR                  : 7 8
error                : 

Nonterminals, with rules where they appear

declaration          : 2 3
declaration_list     : 1 3
expression           : 6 8 9 10 11 18
factor               : 13 14 15
program              : 0
statement            : 5
term                 : 10 11 12 13 14
varDeclaration       : 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (7) varDeclaration -> . VAR ID
    (8) varDeclaration -> . VAR ID ASSIGN expression
    (6) statement -> . expression
    (9) expression -> . ID ASSIGN expression
    (10) expression -> . expression PLUS term
    (11) expression -> . expression MINUS term
    (12) expression -> . term
    (13) term -> . term TIMES factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . NUMBER
    (17) factor -> . ID
    (18) factor -> . LPAREN expression RPAREN

    VAR             shift and go to state 6
    ID              shift and go to state 7
    NUMBER          shift and go to state 11
    LPAREN          shift and go to state 12

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    expression                     shift and go to state 8
    term                           shift and go to state 9
    factor                         shift and go to state 10

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (7) varDeclaration -> . VAR ID
    (8) varDeclaration -> . VAR ID ASSIGN expression
    (6) statement -> . expression
    (9) expression -> . ID ASSIGN expression
    (10) expression -> . expression PLUS term
    (11) expression -> . expression MINUS term
    (12) expression -> . term
    (13) term -> . term TIMES factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . NUMBER
    (17) factor -> . ID
    (18) factor -> . LPAREN expression RPAREN

    $end            reduce using rule 1 (program -> declaration_list .)
    VAR             shift and go to state 6
    ID              shift and go to state 7
    NUMBER          shift and go to state 11
    LPAREN          shift and go to state 12

    declaration                    shift and go to state 13
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    expression                     shift and go to state 8
    term                           shift and go to state 9
    factor                         shift and go to state 10

state 3

    (2) declaration_list -> declaration .

    VAR             reduce using rule 2 (declaration_list -> declaration .)
    ID              reduce using rule 2 (declaration_list -> declaration .)
    NUMBER          reduce using rule 2 (declaration_list -> declaration .)
    LPAREN          reduce using rule 2 (declaration_list -> declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration .)


state 4

    (4) declaration -> varDeclaration .

    VAR             reduce using rule 4 (declaration -> varDeclaration .)
    ID              reduce using rule 4 (declaration -> varDeclaration .)
    NUMBER          reduce using rule 4 (declaration -> varDeclaration .)
    LPAREN          reduce using rule 4 (declaration -> varDeclaration .)
    $end            reduce using rule 4 (declaration -> varDeclaration .)


state 5

    (5) declaration -> statement .

    VAR             reduce using rule 5 (declaration -> statement .)
    ID              reduce using rule 5 (declaration -> statement .)
    NUMBER          reduce using rule 5 (declaration -> statement .)
    LPAREN          reduce using rule 5 (declaration -> statement .)
    $end            reduce using rule 5 (declaration -> statement .)


state 6

    (7) varDeclaration -> VAR . ID
    (8) varDeclaration -> VAR . ID ASSIGN expression

    ID              shift and go to state 14


state 7

    (9) expression -> ID . ASSIGN expression
    (17) factor -> ID .

    ASSIGN          shift and go to state 15
    TIMES           reduce using rule 17 (factor -> ID .)
    DIVIDE          reduce using rule 17 (factor -> ID .)
    PLUS            reduce using rule 17 (factor -> ID .)
    MINUS           reduce using rule 17 (factor -> ID .)
    VAR             reduce using rule 17 (factor -> ID .)
    ID              reduce using rule 17 (factor -> ID .)
    NUMBER          reduce using rule 17 (factor -> ID .)
    LPAREN          reduce using rule 17 (factor -> ID .)
    $end            reduce using rule 17 (factor -> ID .)
    RPAREN          reduce using rule 17 (factor -> ID .)


state 8

    (6) statement -> expression .
    (10) expression -> expression . PLUS term
    (11) expression -> expression . MINUS term

    VAR             reduce using rule 6 (statement -> expression .)
    ID              reduce using rule 6 (statement -> expression .)
    NUMBER          reduce using rule 6 (statement -> expression .)
    LPAREN          reduce using rule 6 (statement -> expression .)
    $end            reduce using rule 6 (statement -> expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17


state 9

    (12) expression -> term .
    (13) term -> term . TIMES factor
    (14) term -> term . DIVIDE factor

    PLUS            reduce using rule 12 (expression -> term .)
    MINUS           reduce using rule 12 (expression -> term .)
    VAR             reduce using rule 12 (expression -> term .)
    ID              reduce using rule 12 (expression -> term .)
    NUMBER          reduce using rule 12 (expression -> term .)
    LPAREN          reduce using rule 12 (expression -> term .)
    $end            reduce using rule 12 (expression -> term .)
    RPAREN          reduce using rule 12 (expression -> term .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 10

    (15) term -> factor .

    TIMES           reduce using rule 15 (term -> factor .)
    DIVIDE          reduce using rule 15 (term -> factor .)
    PLUS            reduce using rule 15 (term -> factor .)
    MINUS           reduce using rule 15 (term -> factor .)
    VAR             reduce using rule 15 (term -> factor .)
    ID              reduce using rule 15 (term -> factor .)
    NUMBER          reduce using rule 15 (term -> factor .)
    LPAREN          reduce using rule 15 (term -> factor .)
    $end            reduce using rule 15 (term -> factor .)
    RPAREN          reduce using rule 15 (term -> factor .)


state 11

    (16) factor -> NUMBER .

    TIMES           reduce using rule 16 (factor -> NUMBER .)
    DIVIDE          reduce using rule 16 (factor -> NUMBER .)
    PLUS            reduce using rule 16 (factor -> NUMBER .)
    MINUS           reduce using rule 16 (factor -> NUMBER .)
    VAR             reduce using rule 16 (factor -> NUMBER .)
    ID              reduce using rule 16 (factor -> NUMBER .)
    NUMBER          reduce using rule 16 (factor -> NUMBER .)
    LPAREN          reduce using rule 16 (factor -> NUMBER .)
    $end            reduce using rule 16 (factor -> NUMBER .)
    RPAREN          reduce using rule 16 (factor -> NUMBER .)


state 12

    (18) factor -> LPAREN . expression RPAREN
    (9) expression -> . ID ASSIGN expression
    (10) expression -> . expression PLUS term
    (11) expression -> . expression MINUS term
    (12) expression -> . term
    (13) term -> . term TIMES factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . NUMBER
    (17) factor -> . ID
    (18) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 7
    NUMBER          shift and go to state 11
    LPAREN          shift and go to state 12

    expression                     shift and go to state 20
    term                           shift and go to state 9
    factor                         shift and go to state 10

state 13

    (3) declaration_list -> declaration_list declaration .

    VAR             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NUMBER          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration_list declaration .)


state 14

    (7) varDeclaration -> VAR ID .
    (8) varDeclaration -> VAR ID . ASSIGN expression

    VAR             reduce using rule 7 (varDeclaration -> VAR ID .)
    ID              reduce using rule 7 (varDeclaration -> VAR ID .)
    NUMBER          reduce using rule 7 (varDeclaration -> VAR ID .)
    LPAREN          reduce using rule 7 (varDeclaration -> VAR ID .)
    $end            reduce using rule 7 (varDeclaration -> VAR ID .)
    ASSIGN          shift and go to state 21


state 15

    (9) expression -> ID ASSIGN . expression
    (9) expression -> . ID ASSIGN expression
    (10) expression -> . expression PLUS term
    (11) expression -> . expression MINUS term
    (12) expression -> . term
    (13) term -> . term TIMES factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . NUMBER
    (17) factor -> . ID
    (18) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 7
    NUMBER          shift and go to state 11
    LPAREN          shift and go to state 12

    expression                     shift and go to state 22
    term                           shift and go to state 9
    factor                         shift and go to state 10

state 16

    (10) expression -> expression PLUS . term
    (13) term -> . term TIMES factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . NUMBER
    (17) factor -> . ID
    (18) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    ID              shift and go to state 24
    LPAREN          shift and go to state 12

    term                           shift and go to state 23
    factor                         shift and go to state 10

state 17

    (11) expression -> expression MINUS . term
    (13) term -> . term TIMES factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . NUMBER
    (17) factor -> . ID
    (18) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    ID              shift and go to state 24
    LPAREN          shift and go to state 12

    term                           shift and go to state 25
    factor                         shift and go to state 10

state 18

    (13) term -> term TIMES . factor
    (16) factor -> . NUMBER
    (17) factor -> . ID
    (18) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    ID              shift and go to state 24
    LPAREN          shift and go to state 12

    factor                         shift and go to state 26

state 19

    (14) term -> term DIVIDE . factor
    (16) factor -> . NUMBER
    (17) factor -> . ID
    (18) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    ID              shift and go to state 24
    LPAREN          shift and go to state 12

    factor                         shift and go to state 27

state 20

    (18) factor -> LPAREN expression . RPAREN
    (10) expression -> expression . PLUS term
    (11) expression -> expression . MINUS term

    RPAREN          shift and go to state 28
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17


state 21

    (8) varDeclaration -> VAR ID ASSIGN . expression
    (9) expression -> . ID ASSIGN expression
    (10) expression -> . expression PLUS term
    (11) expression -> . expression MINUS term
    (12) expression -> . term
    (13) term -> . term TIMES factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . NUMBER
    (17) factor -> . ID
    (18) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 7
    NUMBER          shift and go to state 11
    LPAREN          shift and go to state 12

    expression                     shift and go to state 29
    term                           shift and go to state 9
    factor                         shift and go to state 10

state 22

    (9) expression -> ID ASSIGN expression .
    (10) expression -> expression . PLUS term
    (11) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    VAR             reduce using rule 9 (expression -> ID ASSIGN expression .)
    ID              reduce using rule 9 (expression -> ID ASSIGN expression .)
    NUMBER          reduce using rule 9 (expression -> ID ASSIGN expression .)
    LPAREN          reduce using rule 9 (expression -> ID ASSIGN expression .)
    $end            reduce using rule 9 (expression -> ID ASSIGN expression .)
    RPAREN          reduce using rule 9 (expression -> ID ASSIGN expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17

  ! PLUS            [ reduce using rule 9 (expression -> ID ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> ID ASSIGN expression .) ]


state 23

    (10) expression -> expression PLUS term .
    (13) term -> term . TIMES factor
    (14) term -> term . DIVIDE factor

    PLUS            reduce using rule 10 (expression -> expression PLUS term .)
    MINUS           reduce using rule 10 (expression -> expression PLUS term .)
    VAR             reduce using rule 10 (expression -> expression PLUS term .)
    ID              reduce using rule 10 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 10 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 10 (expression -> expression PLUS term .)
    $end            reduce using rule 10 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 10 (expression -> expression PLUS term .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 24

    (17) factor -> ID .

    TIMES           reduce using rule 17 (factor -> ID .)
    DIVIDE          reduce using rule 17 (factor -> ID .)
    PLUS            reduce using rule 17 (factor -> ID .)
    MINUS           reduce using rule 17 (factor -> ID .)
    VAR             reduce using rule 17 (factor -> ID .)
    ID              reduce using rule 17 (factor -> ID .)
    NUMBER          reduce using rule 17 (factor -> ID .)
    LPAREN          reduce using rule 17 (factor -> ID .)
    $end            reduce using rule 17 (factor -> ID .)
    RPAREN          reduce using rule 17 (factor -> ID .)


state 25

    (11) expression -> expression MINUS term .
    (13) term -> term . TIMES factor
    (14) term -> term . DIVIDE factor

    PLUS            reduce using rule 11 (expression -> expression MINUS term .)
    MINUS           reduce using rule 11 (expression -> expression MINUS term .)
    VAR             reduce using rule 11 (expression -> expression MINUS term .)
    ID              reduce using rule 11 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 11 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 11 (expression -> expression MINUS term .)
    $end            reduce using rule 11 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 11 (expression -> expression MINUS term .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 26

    (13) term -> term TIMES factor .

    TIMES           reduce using rule 13 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 13 (term -> term TIMES factor .)
    PLUS            reduce using rule 13 (term -> term TIMES factor .)
    MINUS           reduce using rule 13 (term -> term TIMES factor .)
    VAR             reduce using rule 13 (term -> term TIMES factor .)
    ID              reduce using rule 13 (term -> term TIMES factor .)
    NUMBER          reduce using rule 13 (term -> term TIMES factor .)
    LPAREN          reduce using rule 13 (term -> term TIMES factor .)
    $end            reduce using rule 13 (term -> term TIMES factor .)
    RPAREN          reduce using rule 13 (term -> term TIMES factor .)


state 27

    (14) term -> term DIVIDE factor .

    TIMES           reduce using rule 14 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 14 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 14 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 14 (term -> term DIVIDE factor .)
    VAR             reduce using rule 14 (term -> term DIVIDE factor .)
    ID              reduce using rule 14 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 14 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 14 (term -> term DIVIDE factor .)
    $end            reduce using rule 14 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 14 (term -> term DIVIDE factor .)


state 28

    (18) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    VAR             reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 18 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (factor -> LPAREN expression RPAREN .)


state 29

    (8) varDeclaration -> VAR ID ASSIGN expression .
    (10) expression -> expression . PLUS term
    (11) expression -> expression . MINUS term

    VAR             reduce using rule 8 (varDeclaration -> VAR ID ASSIGN expression .)
    ID              reduce using rule 8 (varDeclaration -> VAR ID ASSIGN expression .)
    NUMBER          reduce using rule 8 (varDeclaration -> VAR ID ASSIGN expression .)
    LPAREN          reduce using rule 8 (varDeclaration -> VAR ID ASSIGN expression .)
    $end            reduce using rule 8 (varDeclaration -> VAR ID ASSIGN expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 22 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 22 resolved as shift
