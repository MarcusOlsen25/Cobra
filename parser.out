Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration_list declaration
Rule 4     declaration -> varDeclaration
Rule 5     declaration -> statement
Rule 6     declaration -> funcDeclaration
Rule 7     declaration -> class
Rule 8     class -> CLASS ID LBRACE classDeclarationList RBRACE
Rule 9     classDeclarationList -> classDeclarationList classDeclaration
Rule 10    classDeclarationList -> classDeclaration
Rule 11    classDeclaration -> varDeclaration
Rule 12    classDeclaration -> funcDeclaration
Rule 13    statement -> expression
Rule 14    statement -> ifStatement
Rule 15    statement -> whileStatement
Rule 16    statement -> printStatement
Rule 17    statement -> returnStatement
Rule 18    returnStatement -> RETURN expression
Rule 19    ifStatement -> IF expression THEN LBRACE declaration_list RBRACE
Rule 20    ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
Rule 21    whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE
Rule 22    printStatement -> PRINT expression
Rule 23    varDeclaration -> VAR ID
Rule 24    varDeclaration -> ID ID
Rule 25    varDeclaration -> VAR ID ASSIGN expression
Rule 26    varDeclaration -> ID ID ASSIGN expression
Rule 27    expression -> assignment
Rule 28    assignment -> property ASSIGN logical
Rule 29    assignment -> logical
Rule 30    logical -> logical OR equality
Rule 31    logical -> logical AND equality
Rule 32    logical -> equality
Rule 33    equality -> equality EQUALS comparison
Rule 34    equality -> equality NOTEQUALS comparison
Rule 35    equality -> comparison
Rule 36    comparison -> comparison GREATER term
Rule 37    comparison -> comparison LESS term
Rule 38    comparison -> comparison GREATEROREQUAL term
Rule 39    comparison -> comparison LESSOREQUAL term
Rule 40    comparison -> term
Rule 41    term -> term PLUS factor
Rule 42    term -> term MINUS factor
Rule 43    term -> factor
Rule 44    factor -> factor TIMES unary
Rule 45    factor -> factor DIVIDE unary
Rule 46    factor -> unary
Rule 47    unary -> NOT unary
Rule 48    unary -> MINUS unary
Rule 49    unary -> property
Rule 50    property -> NEW primary LPAREN RPAREN
Rule 51    property -> property_list DOT call
Rule 52    property_list -> property_list DOT primary
Rule 53    property_list -> primary
Rule 54    property -> call
Rule 55    call -> primary LPAREN arguments RPAREN
Rule 56    call -> primary
Rule 57    primary -> NUMBER
Rule 58    primary -> ID
Rule 59    primary -> LPAREN expression RPAREN
Rule 60    arguments -> arguments COMMA expression
Rule 61    arguments -> expression
Rule 62    arguments -> <empty>
Rule 63    funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
Rule 64    parameter_list -> parameter_list COMMA ID
Rule 65    parameter_list -> ID
Rule 66    parameter_list -> parameter_list COMMA ID COLON ID
Rule 67    parameter_list -> ID COLON ID
Rule 68    parameter_list -> <empty>

Terminals, with rules where they appear

AND                  : 31
ASSIGN               : 25 26 28
CLASS                : 8
COLON                : 66 67
COMMA                : 60 64 66
DIVIDE               : 45
DOT                  : 51 52
ELSE                 : 20
EQUALS               : 33
FUNC                 : 63
GREATER              : 36
GREATEROREQUAL       : 38
ID                   : 8 23 24 24 25 26 26 58 63 64 65 66 66 67 67
IF                   : 19 20
LBRACE               : 8 19 20 20 21 63
LESS                 : 37
LESSOREQUAL          : 39
LPAREN               : 50 55 59 63
MINUS                : 42 48
NEW                  : 50
NOT                  : 47
NOTEQUALS            : 34
NUMBER               : 57
OR                   : 30
PLUS                 : 41
PRINT                : 22
RBRACE               : 8 19 20 20 21 63
RETURN               : 18
RPAREN               : 50 55 59 63
THEN                 : 19 20 21
TIMES                : 44
VAR                  : 23 25
WHILE                : 21
error                : 

Nonterminals, with rules where they appear

arguments            : 55 60
assignment           : 27
call                 : 51 54
class                : 7
classDeclaration     : 9 10
classDeclarationList : 8 9
comparison           : 33 34 35 36 37 38 39
declaration          : 2 3
declaration_list     : 1 3 19 20 20 21 63
equality             : 30 31 32 33 34
expression           : 13 18 19 20 21 22 25 26 59 60 61
factor               : 41 42 43 44 45
funcDeclaration      : 6 12
ifStatement          : 14
logical              : 28 29 30 31
parameter_list       : 63 64 66
primary              : 50 52 53 55 56
printStatement       : 16
program              : 0
property             : 28 49
property_list        : 51 52
returnStatement      : 17
statement            : 5
term                 : 36 37 38 39 40 41 42
unary                : 44 45 46 47 48
varDeclaration       : 4 11
whileStatement       : 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (13) statement -> . expression
    (14) statement -> . ifStatement
    (15) statement -> . whileStatement
    (16) statement -> . printStatement
    (17) statement -> . returnStatement
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID LBRACE classDeclarationList RBRACE
    (27) expression -> . assignment
    (19) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (21) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (22) printStatement -> . PRINT expression
    (18) returnStatement -> . RETURN expression
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    VAR             shift and go to state 8
    ID              shift and go to state 9
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21
    RETURN          shift and go to state 22
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (13) statement -> . expression
    (14) statement -> . ifStatement
    (15) statement -> . whileStatement
    (16) statement -> . printStatement
    (17) statement -> . returnStatement
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID LBRACE classDeclarationList RBRACE
    (27) expression -> . assignment
    (19) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (21) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (22) printStatement -> . PRINT expression
    (18) returnStatement -> . RETURN expression
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    $end            reduce using rule 1 (program -> declaration_list .)
    VAR             shift and go to state 8
    ID              shift and go to state 9
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21
    RETURN          shift and go to state 22
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    declaration                    shift and go to state 37
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 3

    (2) declaration_list -> declaration .

    VAR             reduce using rule 2 (declaration_list -> declaration .)
    ID              reduce using rule 2 (declaration_list -> declaration .)
    FUNC            reduce using rule 2 (declaration_list -> declaration .)
    CLASS           reduce using rule 2 (declaration_list -> declaration .)
    IF              reduce using rule 2 (declaration_list -> declaration .)
    WHILE           reduce using rule 2 (declaration_list -> declaration .)
    PRINT           reduce using rule 2 (declaration_list -> declaration .)
    RETURN          reduce using rule 2 (declaration_list -> declaration .)
    NEW             reduce using rule 2 (declaration_list -> declaration .)
    NUMBER          reduce using rule 2 (declaration_list -> declaration .)
    LPAREN          reduce using rule 2 (declaration_list -> declaration .)
    NOT             reduce using rule 2 (declaration_list -> declaration .)
    MINUS           reduce using rule 2 (declaration_list -> declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration .)
    RBRACE          reduce using rule 2 (declaration_list -> declaration .)


state 4

    (4) declaration -> varDeclaration .

    VAR             reduce using rule 4 (declaration -> varDeclaration .)
    ID              reduce using rule 4 (declaration -> varDeclaration .)
    FUNC            reduce using rule 4 (declaration -> varDeclaration .)
    CLASS           reduce using rule 4 (declaration -> varDeclaration .)
    IF              reduce using rule 4 (declaration -> varDeclaration .)
    WHILE           reduce using rule 4 (declaration -> varDeclaration .)
    PRINT           reduce using rule 4 (declaration -> varDeclaration .)
    RETURN          reduce using rule 4 (declaration -> varDeclaration .)
    NEW             reduce using rule 4 (declaration -> varDeclaration .)
    NUMBER          reduce using rule 4 (declaration -> varDeclaration .)
    LPAREN          reduce using rule 4 (declaration -> varDeclaration .)
    NOT             reduce using rule 4 (declaration -> varDeclaration .)
    MINUS           reduce using rule 4 (declaration -> varDeclaration .)
    $end            reduce using rule 4 (declaration -> varDeclaration .)
    RBRACE          reduce using rule 4 (declaration -> varDeclaration .)


state 5

    (5) declaration -> statement .

    VAR             reduce using rule 5 (declaration -> statement .)
    ID              reduce using rule 5 (declaration -> statement .)
    FUNC            reduce using rule 5 (declaration -> statement .)
    CLASS           reduce using rule 5 (declaration -> statement .)
    IF              reduce using rule 5 (declaration -> statement .)
    WHILE           reduce using rule 5 (declaration -> statement .)
    PRINT           reduce using rule 5 (declaration -> statement .)
    RETURN          reduce using rule 5 (declaration -> statement .)
    NEW             reduce using rule 5 (declaration -> statement .)
    NUMBER          reduce using rule 5 (declaration -> statement .)
    LPAREN          reduce using rule 5 (declaration -> statement .)
    NOT             reduce using rule 5 (declaration -> statement .)
    MINUS           reduce using rule 5 (declaration -> statement .)
    $end            reduce using rule 5 (declaration -> statement .)
    RBRACE          reduce using rule 5 (declaration -> statement .)


state 6

    (6) declaration -> funcDeclaration .

    VAR             reduce using rule 6 (declaration -> funcDeclaration .)
    ID              reduce using rule 6 (declaration -> funcDeclaration .)
    FUNC            reduce using rule 6 (declaration -> funcDeclaration .)
    CLASS           reduce using rule 6 (declaration -> funcDeclaration .)
    IF              reduce using rule 6 (declaration -> funcDeclaration .)
    WHILE           reduce using rule 6 (declaration -> funcDeclaration .)
    PRINT           reduce using rule 6 (declaration -> funcDeclaration .)
    RETURN          reduce using rule 6 (declaration -> funcDeclaration .)
    NEW             reduce using rule 6 (declaration -> funcDeclaration .)
    NUMBER          reduce using rule 6 (declaration -> funcDeclaration .)
    LPAREN          reduce using rule 6 (declaration -> funcDeclaration .)
    NOT             reduce using rule 6 (declaration -> funcDeclaration .)
    MINUS           reduce using rule 6 (declaration -> funcDeclaration .)
    $end            reduce using rule 6 (declaration -> funcDeclaration .)
    RBRACE          reduce using rule 6 (declaration -> funcDeclaration .)


state 7

    (7) declaration -> class .

    VAR             reduce using rule 7 (declaration -> class .)
    ID              reduce using rule 7 (declaration -> class .)
    FUNC            reduce using rule 7 (declaration -> class .)
    CLASS           reduce using rule 7 (declaration -> class .)
    IF              reduce using rule 7 (declaration -> class .)
    WHILE           reduce using rule 7 (declaration -> class .)
    PRINT           reduce using rule 7 (declaration -> class .)
    RETURN          reduce using rule 7 (declaration -> class .)
    NEW             reduce using rule 7 (declaration -> class .)
    NUMBER          reduce using rule 7 (declaration -> class .)
    LPAREN          reduce using rule 7 (declaration -> class .)
    NOT             reduce using rule 7 (declaration -> class .)
    MINUS           reduce using rule 7 (declaration -> class .)
    $end            reduce using rule 7 (declaration -> class .)
    RBRACE          reduce using rule 7 (declaration -> class .)


state 8

    (23) varDeclaration -> VAR . ID
    (25) varDeclaration -> VAR . ID ASSIGN expression

    ID              shift and go to state 38


state 9

    (24) varDeclaration -> ID . ID
    (26) varDeclaration -> ID . ID ASSIGN expression
    (58) primary -> ID .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 39
    LPAREN          reduce using rule 58 (primary -> ID .)
    DOT             reduce using rule 58 (primary -> ID .)
    ASSIGN          reduce using rule 58 (primary -> ID .)
    TIMES           reduce using rule 58 (primary -> ID .)
    DIVIDE          reduce using rule 58 (primary -> ID .)
    PLUS            reduce using rule 58 (primary -> ID .)
    MINUS           reduce using rule 58 (primary -> ID .)
    GREATER         reduce using rule 58 (primary -> ID .)
    LESS            reduce using rule 58 (primary -> ID .)
    GREATEROREQUAL  reduce using rule 58 (primary -> ID .)
    LESSOREQUAL     reduce using rule 58 (primary -> ID .)
    EQUALS          reduce using rule 58 (primary -> ID .)
    NOTEQUALS       reduce using rule 58 (primary -> ID .)
    OR              reduce using rule 58 (primary -> ID .)
    AND             reduce using rule 58 (primary -> ID .)
    VAR             reduce using rule 58 (primary -> ID .)
    FUNC            reduce using rule 58 (primary -> ID .)
    CLASS           reduce using rule 58 (primary -> ID .)
    IF              reduce using rule 58 (primary -> ID .)
    WHILE           reduce using rule 58 (primary -> ID .)
    PRINT           reduce using rule 58 (primary -> ID .)
    RETURN          reduce using rule 58 (primary -> ID .)
    NEW             reduce using rule 58 (primary -> ID .)
    NUMBER          reduce using rule 58 (primary -> ID .)
    NOT             reduce using rule 58 (primary -> ID .)
    $end            reduce using rule 58 (primary -> ID .)
    RBRACE          reduce using rule 58 (primary -> ID .)

  ! ID              [ reduce using rule 58 (primary -> ID .) ]


state 10

    (13) statement -> expression .

    VAR             reduce using rule 13 (statement -> expression .)
    ID              reduce using rule 13 (statement -> expression .)
    FUNC            reduce using rule 13 (statement -> expression .)
    CLASS           reduce using rule 13 (statement -> expression .)
    IF              reduce using rule 13 (statement -> expression .)
    WHILE           reduce using rule 13 (statement -> expression .)
    PRINT           reduce using rule 13 (statement -> expression .)
    RETURN          reduce using rule 13 (statement -> expression .)
    NEW             reduce using rule 13 (statement -> expression .)
    NUMBER          reduce using rule 13 (statement -> expression .)
    LPAREN          reduce using rule 13 (statement -> expression .)
    NOT             reduce using rule 13 (statement -> expression .)
    MINUS           reduce using rule 13 (statement -> expression .)
    $end            reduce using rule 13 (statement -> expression .)
    RBRACE          reduce using rule 13 (statement -> expression .)


state 11

    (14) statement -> ifStatement .

    VAR             reduce using rule 14 (statement -> ifStatement .)
    ID              reduce using rule 14 (statement -> ifStatement .)
    FUNC            reduce using rule 14 (statement -> ifStatement .)
    CLASS           reduce using rule 14 (statement -> ifStatement .)
    IF              reduce using rule 14 (statement -> ifStatement .)
    WHILE           reduce using rule 14 (statement -> ifStatement .)
    PRINT           reduce using rule 14 (statement -> ifStatement .)
    RETURN          reduce using rule 14 (statement -> ifStatement .)
    NEW             reduce using rule 14 (statement -> ifStatement .)
    NUMBER          reduce using rule 14 (statement -> ifStatement .)
    LPAREN          reduce using rule 14 (statement -> ifStatement .)
    NOT             reduce using rule 14 (statement -> ifStatement .)
    MINUS           reduce using rule 14 (statement -> ifStatement .)
    $end            reduce using rule 14 (statement -> ifStatement .)
    RBRACE          reduce using rule 14 (statement -> ifStatement .)


state 12

    (15) statement -> whileStatement .

    VAR             reduce using rule 15 (statement -> whileStatement .)
    ID              reduce using rule 15 (statement -> whileStatement .)
    FUNC            reduce using rule 15 (statement -> whileStatement .)
    CLASS           reduce using rule 15 (statement -> whileStatement .)
    IF              reduce using rule 15 (statement -> whileStatement .)
    WHILE           reduce using rule 15 (statement -> whileStatement .)
    PRINT           reduce using rule 15 (statement -> whileStatement .)
    RETURN          reduce using rule 15 (statement -> whileStatement .)
    NEW             reduce using rule 15 (statement -> whileStatement .)
    NUMBER          reduce using rule 15 (statement -> whileStatement .)
    LPAREN          reduce using rule 15 (statement -> whileStatement .)
    NOT             reduce using rule 15 (statement -> whileStatement .)
    MINUS           reduce using rule 15 (statement -> whileStatement .)
    $end            reduce using rule 15 (statement -> whileStatement .)
    RBRACE          reduce using rule 15 (statement -> whileStatement .)


state 13

    (16) statement -> printStatement .

    VAR             reduce using rule 16 (statement -> printStatement .)
    ID              reduce using rule 16 (statement -> printStatement .)
    FUNC            reduce using rule 16 (statement -> printStatement .)
    CLASS           reduce using rule 16 (statement -> printStatement .)
    IF              reduce using rule 16 (statement -> printStatement .)
    WHILE           reduce using rule 16 (statement -> printStatement .)
    PRINT           reduce using rule 16 (statement -> printStatement .)
    RETURN          reduce using rule 16 (statement -> printStatement .)
    NEW             reduce using rule 16 (statement -> printStatement .)
    NUMBER          reduce using rule 16 (statement -> printStatement .)
    LPAREN          reduce using rule 16 (statement -> printStatement .)
    NOT             reduce using rule 16 (statement -> printStatement .)
    MINUS           reduce using rule 16 (statement -> printStatement .)
    $end            reduce using rule 16 (statement -> printStatement .)
    RBRACE          reduce using rule 16 (statement -> printStatement .)


state 14

    (17) statement -> returnStatement .

    VAR             reduce using rule 17 (statement -> returnStatement .)
    ID              reduce using rule 17 (statement -> returnStatement .)
    FUNC            reduce using rule 17 (statement -> returnStatement .)
    CLASS           reduce using rule 17 (statement -> returnStatement .)
    IF              reduce using rule 17 (statement -> returnStatement .)
    WHILE           reduce using rule 17 (statement -> returnStatement .)
    PRINT           reduce using rule 17 (statement -> returnStatement .)
    RETURN          reduce using rule 17 (statement -> returnStatement .)
    NEW             reduce using rule 17 (statement -> returnStatement .)
    NUMBER          reduce using rule 17 (statement -> returnStatement .)
    LPAREN          reduce using rule 17 (statement -> returnStatement .)
    NOT             reduce using rule 17 (statement -> returnStatement .)
    MINUS           reduce using rule 17 (statement -> returnStatement .)
    $end            reduce using rule 17 (statement -> returnStatement .)
    RBRACE          reduce using rule 17 (statement -> returnStatement .)


state 15

    (63) funcDeclaration -> FUNC . ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE

    ID              shift and go to state 40


state 16

    (59) primary -> LPAREN . expression RPAREN
    (27) expression -> . assignment
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 41
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 17

    (8) class -> CLASS . ID LBRACE classDeclarationList RBRACE

    ID              shift and go to state 43


state 18

    (27) expression -> assignment .

    VAR             reduce using rule 27 (expression -> assignment .)
    ID              reduce using rule 27 (expression -> assignment .)
    FUNC            reduce using rule 27 (expression -> assignment .)
    CLASS           reduce using rule 27 (expression -> assignment .)
    IF              reduce using rule 27 (expression -> assignment .)
    WHILE           reduce using rule 27 (expression -> assignment .)
    PRINT           reduce using rule 27 (expression -> assignment .)
    RETURN          reduce using rule 27 (expression -> assignment .)
    NEW             reduce using rule 27 (expression -> assignment .)
    NUMBER          reduce using rule 27 (expression -> assignment .)
    LPAREN          reduce using rule 27 (expression -> assignment .)
    NOT             reduce using rule 27 (expression -> assignment .)
    MINUS           reduce using rule 27 (expression -> assignment .)
    $end            reduce using rule 27 (expression -> assignment .)
    RPAREN          reduce using rule 27 (expression -> assignment .)
    THEN            reduce using rule 27 (expression -> assignment .)
    RBRACE          reduce using rule 27 (expression -> assignment .)
    COMMA           reduce using rule 27 (expression -> assignment .)


state 19

    (19) ifStatement -> IF . expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> IF . expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (27) expression -> . assignment
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 44
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 20

    (21) whileStatement -> WHILE . expression THEN LBRACE declaration_list RBRACE
    (27) expression -> . assignment
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 45
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 21

    (22) printStatement -> PRINT . expression
    (27) expression -> . assignment
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 46
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 22

    (18) returnStatement -> RETURN . expression
    (27) expression -> . assignment
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 47
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 23

    (28) assignment -> property . ASSIGN logical
    (49) unary -> property .

    ASSIGN          shift and go to state 48
    TIMES           reduce using rule 49 (unary -> property .)
    DIVIDE          reduce using rule 49 (unary -> property .)
    PLUS            reduce using rule 49 (unary -> property .)
    MINUS           reduce using rule 49 (unary -> property .)
    GREATER         reduce using rule 49 (unary -> property .)
    LESS            reduce using rule 49 (unary -> property .)
    GREATEROREQUAL  reduce using rule 49 (unary -> property .)
    LESSOREQUAL     reduce using rule 49 (unary -> property .)
    EQUALS          reduce using rule 49 (unary -> property .)
    NOTEQUALS       reduce using rule 49 (unary -> property .)
    OR              reduce using rule 49 (unary -> property .)
    AND             reduce using rule 49 (unary -> property .)
    VAR             reduce using rule 49 (unary -> property .)
    ID              reduce using rule 49 (unary -> property .)
    FUNC            reduce using rule 49 (unary -> property .)
    CLASS           reduce using rule 49 (unary -> property .)
    IF              reduce using rule 49 (unary -> property .)
    WHILE           reduce using rule 49 (unary -> property .)
    PRINT           reduce using rule 49 (unary -> property .)
    RETURN          reduce using rule 49 (unary -> property .)
    NEW             reduce using rule 49 (unary -> property .)
    NUMBER          reduce using rule 49 (unary -> property .)
    LPAREN          reduce using rule 49 (unary -> property .)
    NOT             reduce using rule 49 (unary -> property .)
    $end            reduce using rule 49 (unary -> property .)
    RPAREN          reduce using rule 49 (unary -> property .)
    THEN            reduce using rule 49 (unary -> property .)
    RBRACE          reduce using rule 49 (unary -> property .)
    COMMA           reduce using rule 49 (unary -> property .)


state 24

    (29) assignment -> logical .
    (30) logical -> logical . OR equality
    (31) logical -> logical . AND equality

    VAR             reduce using rule 29 (assignment -> logical .)
    ID              reduce using rule 29 (assignment -> logical .)
    FUNC            reduce using rule 29 (assignment -> logical .)
    CLASS           reduce using rule 29 (assignment -> logical .)
    IF              reduce using rule 29 (assignment -> logical .)
    WHILE           reduce using rule 29 (assignment -> logical .)
    PRINT           reduce using rule 29 (assignment -> logical .)
    RETURN          reduce using rule 29 (assignment -> logical .)
    NEW             reduce using rule 29 (assignment -> logical .)
    NUMBER          reduce using rule 29 (assignment -> logical .)
    LPAREN          reduce using rule 29 (assignment -> logical .)
    NOT             reduce using rule 29 (assignment -> logical .)
    MINUS           reduce using rule 29 (assignment -> logical .)
    $end            reduce using rule 29 (assignment -> logical .)
    RPAREN          reduce using rule 29 (assignment -> logical .)
    THEN            reduce using rule 29 (assignment -> logical .)
    RBRACE          reduce using rule 29 (assignment -> logical .)
    COMMA           reduce using rule 29 (assignment -> logical .)
    OR              shift and go to state 49
    AND             shift and go to state 50


state 25

    (50) property -> NEW . primary LPAREN RPAREN
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    primary                        shift and go to state 51

state 26

    (53) property_list -> primary .
    (55) call -> primary . LPAREN arguments RPAREN
    (56) call -> primary .

  ! shift/reduce conflict for LPAREN resolved as shift
    DOT             reduce using rule 53 (property_list -> primary .)
    LPAREN          shift and go to state 52
    ASSIGN          reduce using rule 56 (call -> primary .)
    TIMES           reduce using rule 56 (call -> primary .)
    DIVIDE          reduce using rule 56 (call -> primary .)
    PLUS            reduce using rule 56 (call -> primary .)
    MINUS           reduce using rule 56 (call -> primary .)
    GREATER         reduce using rule 56 (call -> primary .)
    LESS            reduce using rule 56 (call -> primary .)
    GREATEROREQUAL  reduce using rule 56 (call -> primary .)
    LESSOREQUAL     reduce using rule 56 (call -> primary .)
    EQUALS          reduce using rule 56 (call -> primary .)
    NOTEQUALS       reduce using rule 56 (call -> primary .)
    OR              reduce using rule 56 (call -> primary .)
    AND             reduce using rule 56 (call -> primary .)
    VAR             reduce using rule 56 (call -> primary .)
    ID              reduce using rule 56 (call -> primary .)
    FUNC            reduce using rule 56 (call -> primary .)
    CLASS           reduce using rule 56 (call -> primary .)
    IF              reduce using rule 56 (call -> primary .)
    WHILE           reduce using rule 56 (call -> primary .)
    PRINT           reduce using rule 56 (call -> primary .)
    RETURN          reduce using rule 56 (call -> primary .)
    NEW             reduce using rule 56 (call -> primary .)
    NUMBER          reduce using rule 56 (call -> primary .)
    NOT             reduce using rule 56 (call -> primary .)
    $end            reduce using rule 56 (call -> primary .)
    RPAREN          reduce using rule 56 (call -> primary .)
    THEN            reduce using rule 56 (call -> primary .)
    RBRACE          reduce using rule 56 (call -> primary .)
    COMMA           reduce using rule 56 (call -> primary .)

  ! LPAREN          [ reduce using rule 56 (call -> primary .) ]


state 27

    (51) property -> property_list . DOT call
    (52) property_list -> property_list . DOT primary

    DOT             shift and go to state 53


state 28

    (54) property -> call .

    ASSIGN          reduce using rule 54 (property -> call .)
    TIMES           reduce using rule 54 (property -> call .)
    DIVIDE          reduce using rule 54 (property -> call .)
    PLUS            reduce using rule 54 (property -> call .)
    MINUS           reduce using rule 54 (property -> call .)
    GREATER         reduce using rule 54 (property -> call .)
    LESS            reduce using rule 54 (property -> call .)
    GREATEROREQUAL  reduce using rule 54 (property -> call .)
    LESSOREQUAL     reduce using rule 54 (property -> call .)
    EQUALS          reduce using rule 54 (property -> call .)
    NOTEQUALS       reduce using rule 54 (property -> call .)
    OR              reduce using rule 54 (property -> call .)
    AND             reduce using rule 54 (property -> call .)
    VAR             reduce using rule 54 (property -> call .)
    ID              reduce using rule 54 (property -> call .)
    FUNC            reduce using rule 54 (property -> call .)
    CLASS           reduce using rule 54 (property -> call .)
    IF              reduce using rule 54 (property -> call .)
    WHILE           reduce using rule 54 (property -> call .)
    PRINT           reduce using rule 54 (property -> call .)
    RETURN          reduce using rule 54 (property -> call .)
    NEW             reduce using rule 54 (property -> call .)
    NUMBER          reduce using rule 54 (property -> call .)
    LPAREN          reduce using rule 54 (property -> call .)
    NOT             reduce using rule 54 (property -> call .)
    $end            reduce using rule 54 (property -> call .)
    RPAREN          reduce using rule 54 (property -> call .)
    THEN            reduce using rule 54 (property -> call .)
    RBRACE          reduce using rule 54 (property -> call .)
    COMMA           reduce using rule 54 (property -> call .)


state 29

    (32) logical -> equality .
    (33) equality -> equality . EQUALS comparison
    (34) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 32 (logical -> equality .)
    AND             reduce using rule 32 (logical -> equality .)
    VAR             reduce using rule 32 (logical -> equality .)
    ID              reduce using rule 32 (logical -> equality .)
    FUNC            reduce using rule 32 (logical -> equality .)
    CLASS           reduce using rule 32 (logical -> equality .)
    IF              reduce using rule 32 (logical -> equality .)
    WHILE           reduce using rule 32 (logical -> equality .)
    PRINT           reduce using rule 32 (logical -> equality .)
    RETURN          reduce using rule 32 (logical -> equality .)
    NEW             reduce using rule 32 (logical -> equality .)
    NUMBER          reduce using rule 32 (logical -> equality .)
    LPAREN          reduce using rule 32 (logical -> equality .)
    NOT             reduce using rule 32 (logical -> equality .)
    MINUS           reduce using rule 32 (logical -> equality .)
    $end            reduce using rule 32 (logical -> equality .)
    RPAREN          reduce using rule 32 (logical -> equality .)
    THEN            reduce using rule 32 (logical -> equality .)
    RBRACE          reduce using rule 32 (logical -> equality .)
    COMMA           reduce using rule 32 (logical -> equality .)
    EQUALS          shift and go to state 54
    NOTEQUALS       shift and go to state 55


state 30

    (35) equality -> comparison .
    (36) comparison -> comparison . GREATER term
    (37) comparison -> comparison . LESS term
    (38) comparison -> comparison . GREATEROREQUAL term
    (39) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 35 (equality -> comparison .)
    NOTEQUALS       reduce using rule 35 (equality -> comparison .)
    OR              reduce using rule 35 (equality -> comparison .)
    AND             reduce using rule 35 (equality -> comparison .)
    VAR             reduce using rule 35 (equality -> comparison .)
    ID              reduce using rule 35 (equality -> comparison .)
    FUNC            reduce using rule 35 (equality -> comparison .)
    CLASS           reduce using rule 35 (equality -> comparison .)
    IF              reduce using rule 35 (equality -> comparison .)
    WHILE           reduce using rule 35 (equality -> comparison .)
    PRINT           reduce using rule 35 (equality -> comparison .)
    RETURN          reduce using rule 35 (equality -> comparison .)
    NEW             reduce using rule 35 (equality -> comparison .)
    NUMBER          reduce using rule 35 (equality -> comparison .)
    LPAREN          reduce using rule 35 (equality -> comparison .)
    NOT             reduce using rule 35 (equality -> comparison .)
    MINUS           reduce using rule 35 (equality -> comparison .)
    $end            reduce using rule 35 (equality -> comparison .)
    RPAREN          reduce using rule 35 (equality -> comparison .)
    THEN            reduce using rule 35 (equality -> comparison .)
    RBRACE          reduce using rule 35 (equality -> comparison .)
    COMMA           reduce using rule 35 (equality -> comparison .)
    GREATER         shift and go to state 56
    LESS            shift and go to state 57
    GREATEROREQUAL  shift and go to state 58
    LESSOREQUAL     shift and go to state 59


state 31

    (57) primary -> NUMBER .

    LPAREN          reduce using rule 57 (primary -> NUMBER .)
    DOT             reduce using rule 57 (primary -> NUMBER .)
    ASSIGN          reduce using rule 57 (primary -> NUMBER .)
    TIMES           reduce using rule 57 (primary -> NUMBER .)
    DIVIDE          reduce using rule 57 (primary -> NUMBER .)
    PLUS            reduce using rule 57 (primary -> NUMBER .)
    MINUS           reduce using rule 57 (primary -> NUMBER .)
    GREATER         reduce using rule 57 (primary -> NUMBER .)
    LESS            reduce using rule 57 (primary -> NUMBER .)
    GREATEROREQUAL  reduce using rule 57 (primary -> NUMBER .)
    LESSOREQUAL     reduce using rule 57 (primary -> NUMBER .)
    EQUALS          reduce using rule 57 (primary -> NUMBER .)
    NOTEQUALS       reduce using rule 57 (primary -> NUMBER .)
    OR              reduce using rule 57 (primary -> NUMBER .)
    AND             reduce using rule 57 (primary -> NUMBER .)
    VAR             reduce using rule 57 (primary -> NUMBER .)
    ID              reduce using rule 57 (primary -> NUMBER .)
    FUNC            reduce using rule 57 (primary -> NUMBER .)
    CLASS           reduce using rule 57 (primary -> NUMBER .)
    IF              reduce using rule 57 (primary -> NUMBER .)
    WHILE           reduce using rule 57 (primary -> NUMBER .)
    PRINT           reduce using rule 57 (primary -> NUMBER .)
    RETURN          reduce using rule 57 (primary -> NUMBER .)
    NEW             reduce using rule 57 (primary -> NUMBER .)
    NUMBER          reduce using rule 57 (primary -> NUMBER .)
    NOT             reduce using rule 57 (primary -> NUMBER .)
    $end            reduce using rule 57 (primary -> NUMBER .)
    RPAREN          reduce using rule 57 (primary -> NUMBER .)
    THEN            reduce using rule 57 (primary -> NUMBER .)
    RBRACE          reduce using rule 57 (primary -> NUMBER .)
    COMMA           reduce using rule 57 (primary -> NUMBER .)


state 32

    (40) comparison -> term .
    (41) term -> term . PLUS factor
    (42) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 40 (comparison -> term .)
    LESS            reduce using rule 40 (comparison -> term .)
    GREATEROREQUAL  reduce using rule 40 (comparison -> term .)
    LESSOREQUAL     reduce using rule 40 (comparison -> term .)
    EQUALS          reduce using rule 40 (comparison -> term .)
    NOTEQUALS       reduce using rule 40 (comparison -> term .)
    OR              reduce using rule 40 (comparison -> term .)
    AND             reduce using rule 40 (comparison -> term .)
    VAR             reduce using rule 40 (comparison -> term .)
    ID              reduce using rule 40 (comparison -> term .)
    FUNC            reduce using rule 40 (comparison -> term .)
    CLASS           reduce using rule 40 (comparison -> term .)
    IF              reduce using rule 40 (comparison -> term .)
    WHILE           reduce using rule 40 (comparison -> term .)
    PRINT           reduce using rule 40 (comparison -> term .)
    RETURN          reduce using rule 40 (comparison -> term .)
    NEW             reduce using rule 40 (comparison -> term .)
    NUMBER          reduce using rule 40 (comparison -> term .)
    LPAREN          reduce using rule 40 (comparison -> term .)
    NOT             reduce using rule 40 (comparison -> term .)
    $end            reduce using rule 40 (comparison -> term .)
    RPAREN          reduce using rule 40 (comparison -> term .)
    THEN            reduce using rule 40 (comparison -> term .)
    RBRACE          reduce using rule 40 (comparison -> term .)
    COMMA           reduce using rule 40 (comparison -> term .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MINUS           [ reduce using rule 40 (comparison -> term .) ]


state 33

    (43) term -> factor .
    (44) factor -> factor . TIMES unary
    (45) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 43 (term -> factor .)
    MINUS           reduce using rule 43 (term -> factor .)
    GREATER         reduce using rule 43 (term -> factor .)
    LESS            reduce using rule 43 (term -> factor .)
    GREATEROREQUAL  reduce using rule 43 (term -> factor .)
    LESSOREQUAL     reduce using rule 43 (term -> factor .)
    EQUALS          reduce using rule 43 (term -> factor .)
    NOTEQUALS       reduce using rule 43 (term -> factor .)
    OR              reduce using rule 43 (term -> factor .)
    AND             reduce using rule 43 (term -> factor .)
    VAR             reduce using rule 43 (term -> factor .)
    ID              reduce using rule 43 (term -> factor .)
    FUNC            reduce using rule 43 (term -> factor .)
    CLASS           reduce using rule 43 (term -> factor .)
    IF              reduce using rule 43 (term -> factor .)
    WHILE           reduce using rule 43 (term -> factor .)
    PRINT           reduce using rule 43 (term -> factor .)
    RETURN          reduce using rule 43 (term -> factor .)
    NEW             reduce using rule 43 (term -> factor .)
    NUMBER          reduce using rule 43 (term -> factor .)
    LPAREN          reduce using rule 43 (term -> factor .)
    NOT             reduce using rule 43 (term -> factor .)
    $end            reduce using rule 43 (term -> factor .)
    RPAREN          reduce using rule 43 (term -> factor .)
    THEN            reduce using rule 43 (term -> factor .)
    RBRACE          reduce using rule 43 (term -> factor .)
    COMMA           reduce using rule 43 (term -> factor .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63


state 34

    (48) unary -> MINUS . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    unary                          shift and go to state 64
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 35

    (46) factor -> unary .

    TIMES           reduce using rule 46 (factor -> unary .)
    DIVIDE          reduce using rule 46 (factor -> unary .)
    PLUS            reduce using rule 46 (factor -> unary .)
    MINUS           reduce using rule 46 (factor -> unary .)
    GREATER         reduce using rule 46 (factor -> unary .)
    LESS            reduce using rule 46 (factor -> unary .)
    GREATEROREQUAL  reduce using rule 46 (factor -> unary .)
    LESSOREQUAL     reduce using rule 46 (factor -> unary .)
    EQUALS          reduce using rule 46 (factor -> unary .)
    NOTEQUALS       reduce using rule 46 (factor -> unary .)
    OR              reduce using rule 46 (factor -> unary .)
    AND             reduce using rule 46 (factor -> unary .)
    VAR             reduce using rule 46 (factor -> unary .)
    ID              reduce using rule 46 (factor -> unary .)
    FUNC            reduce using rule 46 (factor -> unary .)
    CLASS           reduce using rule 46 (factor -> unary .)
    IF              reduce using rule 46 (factor -> unary .)
    WHILE           reduce using rule 46 (factor -> unary .)
    PRINT           reduce using rule 46 (factor -> unary .)
    RETURN          reduce using rule 46 (factor -> unary .)
    NEW             reduce using rule 46 (factor -> unary .)
    NUMBER          reduce using rule 46 (factor -> unary .)
    LPAREN          reduce using rule 46 (factor -> unary .)
    NOT             reduce using rule 46 (factor -> unary .)
    $end            reduce using rule 46 (factor -> unary .)
    RPAREN          reduce using rule 46 (factor -> unary .)
    THEN            reduce using rule 46 (factor -> unary .)
    RBRACE          reduce using rule 46 (factor -> unary .)
    COMMA           reduce using rule 46 (factor -> unary .)


state 36

    (47) unary -> NOT . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    unary                          shift and go to state 66
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 37

    (3) declaration_list -> declaration_list declaration .

    VAR             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 3 (declaration_list -> declaration_list declaration .)
    FUNC            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    CLASS           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 3 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    PRINT           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    RETURN          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NEW             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NUMBER          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NOT             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    MINUS           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    RBRACE          reduce using rule 3 (declaration_list -> declaration_list declaration .)


state 38

    (23) varDeclaration -> VAR ID .
    (25) varDeclaration -> VAR ID . ASSIGN expression

    VAR             reduce using rule 23 (varDeclaration -> VAR ID .)
    ID              reduce using rule 23 (varDeclaration -> VAR ID .)
    FUNC            reduce using rule 23 (varDeclaration -> VAR ID .)
    CLASS           reduce using rule 23 (varDeclaration -> VAR ID .)
    IF              reduce using rule 23 (varDeclaration -> VAR ID .)
    WHILE           reduce using rule 23 (varDeclaration -> VAR ID .)
    PRINT           reduce using rule 23 (varDeclaration -> VAR ID .)
    RETURN          reduce using rule 23 (varDeclaration -> VAR ID .)
    NEW             reduce using rule 23 (varDeclaration -> VAR ID .)
    NUMBER          reduce using rule 23 (varDeclaration -> VAR ID .)
    LPAREN          reduce using rule 23 (varDeclaration -> VAR ID .)
    NOT             reduce using rule 23 (varDeclaration -> VAR ID .)
    MINUS           reduce using rule 23 (varDeclaration -> VAR ID .)
    $end            reduce using rule 23 (varDeclaration -> VAR ID .)
    RBRACE          reduce using rule 23 (varDeclaration -> VAR ID .)
    ASSIGN          shift and go to state 67


state 39

    (24) varDeclaration -> ID ID .
    (26) varDeclaration -> ID ID . ASSIGN expression

    VAR             reduce using rule 24 (varDeclaration -> ID ID .)
    ID              reduce using rule 24 (varDeclaration -> ID ID .)
    FUNC            reduce using rule 24 (varDeclaration -> ID ID .)
    CLASS           reduce using rule 24 (varDeclaration -> ID ID .)
    IF              reduce using rule 24 (varDeclaration -> ID ID .)
    WHILE           reduce using rule 24 (varDeclaration -> ID ID .)
    PRINT           reduce using rule 24 (varDeclaration -> ID ID .)
    RETURN          reduce using rule 24 (varDeclaration -> ID ID .)
    NEW             reduce using rule 24 (varDeclaration -> ID ID .)
    NUMBER          reduce using rule 24 (varDeclaration -> ID ID .)
    LPAREN          reduce using rule 24 (varDeclaration -> ID ID .)
    NOT             reduce using rule 24 (varDeclaration -> ID ID .)
    MINUS           reduce using rule 24 (varDeclaration -> ID ID .)
    $end            reduce using rule 24 (varDeclaration -> ID ID .)
    RBRACE          reduce using rule 24 (varDeclaration -> ID ID .)
    ASSIGN          shift and go to state 68


state 40

    (63) funcDeclaration -> FUNC ID . LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE

    LPAREN          shift and go to state 69


state 41

    (59) primary -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 70


state 42

    (58) primary -> ID .

    LPAREN          reduce using rule 58 (primary -> ID .)
    DOT             reduce using rule 58 (primary -> ID .)
    ASSIGN          reduce using rule 58 (primary -> ID .)
    TIMES           reduce using rule 58 (primary -> ID .)
    DIVIDE          reduce using rule 58 (primary -> ID .)
    PLUS            reduce using rule 58 (primary -> ID .)
    MINUS           reduce using rule 58 (primary -> ID .)
    GREATER         reduce using rule 58 (primary -> ID .)
    LESS            reduce using rule 58 (primary -> ID .)
    GREATEROREQUAL  reduce using rule 58 (primary -> ID .)
    LESSOREQUAL     reduce using rule 58 (primary -> ID .)
    EQUALS          reduce using rule 58 (primary -> ID .)
    NOTEQUALS       reduce using rule 58 (primary -> ID .)
    OR              reduce using rule 58 (primary -> ID .)
    AND             reduce using rule 58 (primary -> ID .)
    RPAREN          reduce using rule 58 (primary -> ID .)
    THEN            reduce using rule 58 (primary -> ID .)
    VAR             reduce using rule 58 (primary -> ID .)
    ID              reduce using rule 58 (primary -> ID .)
    FUNC            reduce using rule 58 (primary -> ID .)
    CLASS           reduce using rule 58 (primary -> ID .)
    IF              reduce using rule 58 (primary -> ID .)
    WHILE           reduce using rule 58 (primary -> ID .)
    PRINT           reduce using rule 58 (primary -> ID .)
    RETURN          reduce using rule 58 (primary -> ID .)
    NEW             reduce using rule 58 (primary -> ID .)
    NUMBER          reduce using rule 58 (primary -> ID .)
    NOT             reduce using rule 58 (primary -> ID .)
    $end            reduce using rule 58 (primary -> ID .)
    RBRACE          reduce using rule 58 (primary -> ID .)
    COMMA           reduce using rule 58 (primary -> ID .)


state 43

    (8) class -> CLASS ID . LBRACE classDeclarationList RBRACE

    LBRACE          shift and go to state 71


state 44

    (19) ifStatement -> IF expression . THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> IF expression . THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE

    THEN            shift and go to state 72


state 45

    (21) whileStatement -> WHILE expression . THEN LBRACE declaration_list RBRACE

    THEN            shift and go to state 73


state 46

    (22) printStatement -> PRINT expression .

    VAR             reduce using rule 22 (printStatement -> PRINT expression .)
    ID              reduce using rule 22 (printStatement -> PRINT expression .)
    FUNC            reduce using rule 22 (printStatement -> PRINT expression .)
    CLASS           reduce using rule 22 (printStatement -> PRINT expression .)
    IF              reduce using rule 22 (printStatement -> PRINT expression .)
    WHILE           reduce using rule 22 (printStatement -> PRINT expression .)
    PRINT           reduce using rule 22 (printStatement -> PRINT expression .)
    RETURN          reduce using rule 22 (printStatement -> PRINT expression .)
    NEW             reduce using rule 22 (printStatement -> PRINT expression .)
    NUMBER          reduce using rule 22 (printStatement -> PRINT expression .)
    LPAREN          reduce using rule 22 (printStatement -> PRINT expression .)
    NOT             reduce using rule 22 (printStatement -> PRINT expression .)
    MINUS           reduce using rule 22 (printStatement -> PRINT expression .)
    $end            reduce using rule 22 (printStatement -> PRINT expression .)
    RBRACE          reduce using rule 22 (printStatement -> PRINT expression .)


state 47

    (18) returnStatement -> RETURN expression .

    VAR             reduce using rule 18 (returnStatement -> RETURN expression .)
    ID              reduce using rule 18 (returnStatement -> RETURN expression .)
    FUNC            reduce using rule 18 (returnStatement -> RETURN expression .)
    CLASS           reduce using rule 18 (returnStatement -> RETURN expression .)
    IF              reduce using rule 18 (returnStatement -> RETURN expression .)
    WHILE           reduce using rule 18 (returnStatement -> RETURN expression .)
    PRINT           reduce using rule 18 (returnStatement -> RETURN expression .)
    RETURN          reduce using rule 18 (returnStatement -> RETURN expression .)
    NEW             reduce using rule 18 (returnStatement -> RETURN expression .)
    NUMBER          reduce using rule 18 (returnStatement -> RETURN expression .)
    LPAREN          reduce using rule 18 (returnStatement -> RETURN expression .)
    NOT             reduce using rule 18 (returnStatement -> RETURN expression .)
    MINUS           reduce using rule 18 (returnStatement -> RETURN expression .)
    $end            reduce using rule 18 (returnStatement -> RETURN expression .)
    RBRACE          reduce using rule 18 (returnStatement -> RETURN expression .)


state 48

    (28) assignment -> property ASSIGN . logical
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    property                       shift and go to state 65
    logical                        shift and go to state 74
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 49

    (30) logical -> logical OR . equality
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    equality                       shift and go to state 75
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 50

    (31) logical -> logical AND . equality
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    equality                       shift and go to state 76
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 51

    (50) property -> NEW primary . LPAREN RPAREN

    LPAREN          shift and go to state 77


state 52

    (55) call -> primary LPAREN . arguments RPAREN
    (60) arguments -> . arguments COMMA expression
    (61) arguments -> . expression
    (62) arguments -> .
    (27) expression -> . assignment
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    RPAREN          reduce using rule 62 (arguments -> .)
    COMMA           reduce using rule 62 (arguments -> .)
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    primary                        shift and go to state 26
    arguments                      shift and go to state 78
    expression                     shift and go to state 79
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 53

    (51) property -> property_list DOT . call
    (52) property_list -> property_list DOT . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    call                           shift and go to state 80
    primary                        shift and go to state 81

state 54

    (33) equality -> equality EQUALS . comparison
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 82
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 55

    (34) equality -> equality NOTEQUALS . comparison
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 83
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 56

    (36) comparison -> comparison GREATER . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    term                           shift and go to state 84
    factor                         shift and go to state 33
    unary                          shift and go to state 35
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 57

    (37) comparison -> comparison LESS . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    term                           shift and go to state 85
    factor                         shift and go to state 33
    unary                          shift and go to state 35
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 58

    (38) comparison -> comparison GREATEROREQUAL . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    term                           shift and go to state 86
    factor                         shift and go to state 33
    unary                          shift and go to state 35
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 59

    (39) comparison -> comparison LESSOREQUAL . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    term                           shift and go to state 87
    factor                         shift and go to state 33
    unary                          shift and go to state 35
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 60

    (41) term -> term PLUS . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    factor                         shift and go to state 88
    unary                          shift and go to state 35
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 61

    (42) term -> term MINUS . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    factor                         shift and go to state 89
    unary                          shift and go to state 35
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 62

    (44) factor -> factor TIMES . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    unary                          shift and go to state 90
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 63

    (45) factor -> factor DIVIDE . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 36
    MINUS           shift and go to state 34
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16

    unary                          shift and go to state 91
    property                       shift and go to state 65
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28

state 64

    (48) unary -> MINUS unary .

    TIMES           reduce using rule 48 (unary -> MINUS unary .)
    DIVIDE          reduce using rule 48 (unary -> MINUS unary .)
    PLUS            reduce using rule 48 (unary -> MINUS unary .)
    MINUS           reduce using rule 48 (unary -> MINUS unary .)
    GREATER         reduce using rule 48 (unary -> MINUS unary .)
    LESS            reduce using rule 48 (unary -> MINUS unary .)
    GREATEROREQUAL  reduce using rule 48 (unary -> MINUS unary .)
    LESSOREQUAL     reduce using rule 48 (unary -> MINUS unary .)
    EQUALS          reduce using rule 48 (unary -> MINUS unary .)
    NOTEQUALS       reduce using rule 48 (unary -> MINUS unary .)
    OR              reduce using rule 48 (unary -> MINUS unary .)
    AND             reduce using rule 48 (unary -> MINUS unary .)
    VAR             reduce using rule 48 (unary -> MINUS unary .)
    ID              reduce using rule 48 (unary -> MINUS unary .)
    FUNC            reduce using rule 48 (unary -> MINUS unary .)
    CLASS           reduce using rule 48 (unary -> MINUS unary .)
    IF              reduce using rule 48 (unary -> MINUS unary .)
    WHILE           reduce using rule 48 (unary -> MINUS unary .)
    PRINT           reduce using rule 48 (unary -> MINUS unary .)
    RETURN          reduce using rule 48 (unary -> MINUS unary .)
    NEW             reduce using rule 48 (unary -> MINUS unary .)
    NUMBER          reduce using rule 48 (unary -> MINUS unary .)
    LPAREN          reduce using rule 48 (unary -> MINUS unary .)
    NOT             reduce using rule 48 (unary -> MINUS unary .)
    $end            reduce using rule 48 (unary -> MINUS unary .)
    RPAREN          reduce using rule 48 (unary -> MINUS unary .)
    THEN            reduce using rule 48 (unary -> MINUS unary .)
    RBRACE          reduce using rule 48 (unary -> MINUS unary .)
    COMMA           reduce using rule 48 (unary -> MINUS unary .)


state 65

    (49) unary -> property .

    TIMES           reduce using rule 49 (unary -> property .)
    DIVIDE          reduce using rule 49 (unary -> property .)
    PLUS            reduce using rule 49 (unary -> property .)
    MINUS           reduce using rule 49 (unary -> property .)
    GREATER         reduce using rule 49 (unary -> property .)
    LESS            reduce using rule 49 (unary -> property .)
    GREATEROREQUAL  reduce using rule 49 (unary -> property .)
    LESSOREQUAL     reduce using rule 49 (unary -> property .)
    EQUALS          reduce using rule 49 (unary -> property .)
    NOTEQUALS       reduce using rule 49 (unary -> property .)
    OR              reduce using rule 49 (unary -> property .)
    AND             reduce using rule 49 (unary -> property .)
    VAR             reduce using rule 49 (unary -> property .)
    ID              reduce using rule 49 (unary -> property .)
    FUNC            reduce using rule 49 (unary -> property .)
    CLASS           reduce using rule 49 (unary -> property .)
    IF              reduce using rule 49 (unary -> property .)
    WHILE           reduce using rule 49 (unary -> property .)
    PRINT           reduce using rule 49 (unary -> property .)
    RETURN          reduce using rule 49 (unary -> property .)
    NEW             reduce using rule 49 (unary -> property .)
    NUMBER          reduce using rule 49 (unary -> property .)
    LPAREN          reduce using rule 49 (unary -> property .)
    NOT             reduce using rule 49 (unary -> property .)
    $end            reduce using rule 49 (unary -> property .)
    RPAREN          reduce using rule 49 (unary -> property .)
    THEN            reduce using rule 49 (unary -> property .)
    RBRACE          reduce using rule 49 (unary -> property .)
    COMMA           reduce using rule 49 (unary -> property .)


state 66

    (47) unary -> NOT unary .

    TIMES           reduce using rule 47 (unary -> NOT unary .)
    DIVIDE          reduce using rule 47 (unary -> NOT unary .)
    PLUS            reduce using rule 47 (unary -> NOT unary .)
    MINUS           reduce using rule 47 (unary -> NOT unary .)
    GREATER         reduce using rule 47 (unary -> NOT unary .)
    LESS            reduce using rule 47 (unary -> NOT unary .)
    GREATEROREQUAL  reduce using rule 47 (unary -> NOT unary .)
    LESSOREQUAL     reduce using rule 47 (unary -> NOT unary .)
    EQUALS          reduce using rule 47 (unary -> NOT unary .)
    NOTEQUALS       reduce using rule 47 (unary -> NOT unary .)
    OR              reduce using rule 47 (unary -> NOT unary .)
    AND             reduce using rule 47 (unary -> NOT unary .)
    VAR             reduce using rule 47 (unary -> NOT unary .)
    ID              reduce using rule 47 (unary -> NOT unary .)
    FUNC            reduce using rule 47 (unary -> NOT unary .)
    CLASS           reduce using rule 47 (unary -> NOT unary .)
    IF              reduce using rule 47 (unary -> NOT unary .)
    WHILE           reduce using rule 47 (unary -> NOT unary .)
    PRINT           reduce using rule 47 (unary -> NOT unary .)
    RETURN          reduce using rule 47 (unary -> NOT unary .)
    NEW             reduce using rule 47 (unary -> NOT unary .)
    NUMBER          reduce using rule 47 (unary -> NOT unary .)
    LPAREN          reduce using rule 47 (unary -> NOT unary .)
    NOT             reduce using rule 47 (unary -> NOT unary .)
    $end            reduce using rule 47 (unary -> NOT unary .)
    RPAREN          reduce using rule 47 (unary -> NOT unary .)
    THEN            reduce using rule 47 (unary -> NOT unary .)
    RBRACE          reduce using rule 47 (unary -> NOT unary .)
    COMMA           reduce using rule 47 (unary -> NOT unary .)


state 67

    (25) varDeclaration -> VAR ID ASSIGN . expression
    (27) expression -> . assignment
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 92
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 68

    (26) varDeclaration -> ID ID ASSIGN . expression
    (27) expression -> . assignment
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 93
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 69

    (63) funcDeclaration -> FUNC ID LPAREN . parameter_list RPAREN LBRACE declaration_list RBRACE
    (64) parameter_list -> . parameter_list COMMA ID
    (65) parameter_list -> . ID
    (66) parameter_list -> . parameter_list COMMA ID COLON ID
    (67) parameter_list -> . ID COLON ID
    (68) parameter_list -> .

    ID              shift and go to state 94
    RPAREN          reduce using rule 68 (parameter_list -> .)
    COMMA           reduce using rule 68 (parameter_list -> .)

    parameter_list                 shift and go to state 95

state 70

    (59) primary -> LPAREN expression RPAREN .

    LPAREN          reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    DOT             reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    LESS            reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    GREATEROREQUAL  reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    LESSOREQUAL     reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    OR              reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    AND             reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    VAR             reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    ID              reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    FUNC            reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    CLASS           reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    IF              reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    NEW             reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    NOT             reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    $end            reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    THEN            reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 59 (primary -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 59 (primary -> LPAREN expression RPAREN .)


state 71

    (8) class -> CLASS ID LBRACE . classDeclarationList RBRACE
    (9) classDeclarationList -> . classDeclarationList classDeclaration
    (10) classDeclarationList -> . classDeclaration
    (11) classDeclaration -> . varDeclaration
    (12) classDeclaration -> . funcDeclaration
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE

    VAR             shift and go to state 8
    ID              shift and go to state 96
    FUNC            shift and go to state 15

    classDeclarationList           shift and go to state 97
    classDeclaration               shift and go to state 98
    varDeclaration                 shift and go to state 99
    funcDeclaration                shift and go to state 100

state 72

    (19) ifStatement -> IF expression THEN . LBRACE declaration_list RBRACE
    (20) ifStatement -> IF expression THEN . LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 101


state 73

    (21) whileStatement -> WHILE expression THEN . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 102


state 74

    (28) assignment -> property ASSIGN logical .
    (30) logical -> logical . OR equality
    (31) logical -> logical . AND equality

    VAR             reduce using rule 28 (assignment -> property ASSIGN logical .)
    ID              reduce using rule 28 (assignment -> property ASSIGN logical .)
    FUNC            reduce using rule 28 (assignment -> property ASSIGN logical .)
    CLASS           reduce using rule 28 (assignment -> property ASSIGN logical .)
    IF              reduce using rule 28 (assignment -> property ASSIGN logical .)
    WHILE           reduce using rule 28 (assignment -> property ASSIGN logical .)
    PRINT           reduce using rule 28 (assignment -> property ASSIGN logical .)
    RETURN          reduce using rule 28 (assignment -> property ASSIGN logical .)
    NEW             reduce using rule 28 (assignment -> property ASSIGN logical .)
    NUMBER          reduce using rule 28 (assignment -> property ASSIGN logical .)
    LPAREN          reduce using rule 28 (assignment -> property ASSIGN logical .)
    NOT             reduce using rule 28 (assignment -> property ASSIGN logical .)
    MINUS           reduce using rule 28 (assignment -> property ASSIGN logical .)
    $end            reduce using rule 28 (assignment -> property ASSIGN logical .)
    RPAREN          reduce using rule 28 (assignment -> property ASSIGN logical .)
    THEN            reduce using rule 28 (assignment -> property ASSIGN logical .)
    RBRACE          reduce using rule 28 (assignment -> property ASSIGN logical .)
    COMMA           reduce using rule 28 (assignment -> property ASSIGN logical .)
    OR              shift and go to state 49
    AND             shift and go to state 50


state 75

    (30) logical -> logical OR equality .
    (33) equality -> equality . EQUALS comparison
    (34) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 30 (logical -> logical OR equality .)
    AND             reduce using rule 30 (logical -> logical OR equality .)
    VAR             reduce using rule 30 (logical -> logical OR equality .)
    ID              reduce using rule 30 (logical -> logical OR equality .)
    FUNC            reduce using rule 30 (logical -> logical OR equality .)
    CLASS           reduce using rule 30 (logical -> logical OR equality .)
    IF              reduce using rule 30 (logical -> logical OR equality .)
    WHILE           reduce using rule 30 (logical -> logical OR equality .)
    PRINT           reduce using rule 30 (logical -> logical OR equality .)
    RETURN          reduce using rule 30 (logical -> logical OR equality .)
    NEW             reduce using rule 30 (logical -> logical OR equality .)
    NUMBER          reduce using rule 30 (logical -> logical OR equality .)
    LPAREN          reduce using rule 30 (logical -> logical OR equality .)
    NOT             reduce using rule 30 (logical -> logical OR equality .)
    MINUS           reduce using rule 30 (logical -> logical OR equality .)
    $end            reduce using rule 30 (logical -> logical OR equality .)
    RPAREN          reduce using rule 30 (logical -> logical OR equality .)
    THEN            reduce using rule 30 (logical -> logical OR equality .)
    RBRACE          reduce using rule 30 (logical -> logical OR equality .)
    COMMA           reduce using rule 30 (logical -> logical OR equality .)
    EQUALS          shift and go to state 54
    NOTEQUALS       shift and go to state 55


state 76

    (31) logical -> logical AND equality .
    (33) equality -> equality . EQUALS comparison
    (34) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 31 (logical -> logical AND equality .)
    AND             reduce using rule 31 (logical -> logical AND equality .)
    VAR             reduce using rule 31 (logical -> logical AND equality .)
    ID              reduce using rule 31 (logical -> logical AND equality .)
    FUNC            reduce using rule 31 (logical -> logical AND equality .)
    CLASS           reduce using rule 31 (logical -> logical AND equality .)
    IF              reduce using rule 31 (logical -> logical AND equality .)
    WHILE           reduce using rule 31 (logical -> logical AND equality .)
    PRINT           reduce using rule 31 (logical -> logical AND equality .)
    RETURN          reduce using rule 31 (logical -> logical AND equality .)
    NEW             reduce using rule 31 (logical -> logical AND equality .)
    NUMBER          reduce using rule 31 (logical -> logical AND equality .)
    LPAREN          reduce using rule 31 (logical -> logical AND equality .)
    NOT             reduce using rule 31 (logical -> logical AND equality .)
    MINUS           reduce using rule 31 (logical -> logical AND equality .)
    $end            reduce using rule 31 (logical -> logical AND equality .)
    RPAREN          reduce using rule 31 (logical -> logical AND equality .)
    THEN            reduce using rule 31 (logical -> logical AND equality .)
    RBRACE          reduce using rule 31 (logical -> logical AND equality .)
    COMMA           reduce using rule 31 (logical -> logical AND equality .)
    EQUALS          shift and go to state 54
    NOTEQUALS       shift and go to state 55


state 77

    (50) property -> NEW primary LPAREN . RPAREN

    RPAREN          shift and go to state 103


state 78

    (55) call -> primary LPAREN arguments . RPAREN
    (60) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 104
    COMMA           shift and go to state 105


state 79

    (61) arguments -> expression .

    RPAREN          reduce using rule 61 (arguments -> expression .)
    COMMA           reduce using rule 61 (arguments -> expression .)


state 80

    (51) property -> property_list DOT call .

    ASSIGN          reduce using rule 51 (property -> property_list DOT call .)
    TIMES           reduce using rule 51 (property -> property_list DOT call .)
    DIVIDE          reduce using rule 51 (property -> property_list DOT call .)
    PLUS            reduce using rule 51 (property -> property_list DOT call .)
    MINUS           reduce using rule 51 (property -> property_list DOT call .)
    GREATER         reduce using rule 51 (property -> property_list DOT call .)
    LESS            reduce using rule 51 (property -> property_list DOT call .)
    GREATEROREQUAL  reduce using rule 51 (property -> property_list DOT call .)
    LESSOREQUAL     reduce using rule 51 (property -> property_list DOT call .)
    EQUALS          reduce using rule 51 (property -> property_list DOT call .)
    NOTEQUALS       reduce using rule 51 (property -> property_list DOT call .)
    OR              reduce using rule 51 (property -> property_list DOT call .)
    AND             reduce using rule 51 (property -> property_list DOT call .)
    VAR             reduce using rule 51 (property -> property_list DOT call .)
    ID              reduce using rule 51 (property -> property_list DOT call .)
    FUNC            reduce using rule 51 (property -> property_list DOT call .)
    CLASS           reduce using rule 51 (property -> property_list DOT call .)
    IF              reduce using rule 51 (property -> property_list DOT call .)
    WHILE           reduce using rule 51 (property -> property_list DOT call .)
    PRINT           reduce using rule 51 (property -> property_list DOT call .)
    RETURN          reduce using rule 51 (property -> property_list DOT call .)
    NEW             reduce using rule 51 (property -> property_list DOT call .)
    NUMBER          reduce using rule 51 (property -> property_list DOT call .)
    LPAREN          reduce using rule 51 (property -> property_list DOT call .)
    NOT             reduce using rule 51 (property -> property_list DOT call .)
    $end            reduce using rule 51 (property -> property_list DOT call .)
    RPAREN          reduce using rule 51 (property -> property_list DOT call .)
    THEN            reduce using rule 51 (property -> property_list DOT call .)
    RBRACE          reduce using rule 51 (property -> property_list DOT call .)
    COMMA           reduce using rule 51 (property -> property_list DOT call .)


state 81

    (52) property_list -> property_list DOT primary .
    (55) call -> primary . LPAREN arguments RPAREN
    (56) call -> primary .

  ! shift/reduce conflict for LPAREN resolved as shift
    DOT             reduce using rule 52 (property_list -> property_list DOT primary .)
    LPAREN          shift and go to state 52
    ASSIGN          reduce using rule 56 (call -> primary .)
    TIMES           reduce using rule 56 (call -> primary .)
    DIVIDE          reduce using rule 56 (call -> primary .)
    PLUS            reduce using rule 56 (call -> primary .)
    MINUS           reduce using rule 56 (call -> primary .)
    GREATER         reduce using rule 56 (call -> primary .)
    LESS            reduce using rule 56 (call -> primary .)
    GREATEROREQUAL  reduce using rule 56 (call -> primary .)
    LESSOREQUAL     reduce using rule 56 (call -> primary .)
    EQUALS          reduce using rule 56 (call -> primary .)
    NOTEQUALS       reduce using rule 56 (call -> primary .)
    OR              reduce using rule 56 (call -> primary .)
    AND             reduce using rule 56 (call -> primary .)
    VAR             reduce using rule 56 (call -> primary .)
    ID              reduce using rule 56 (call -> primary .)
    FUNC            reduce using rule 56 (call -> primary .)
    CLASS           reduce using rule 56 (call -> primary .)
    IF              reduce using rule 56 (call -> primary .)
    WHILE           reduce using rule 56 (call -> primary .)
    PRINT           reduce using rule 56 (call -> primary .)
    RETURN          reduce using rule 56 (call -> primary .)
    NEW             reduce using rule 56 (call -> primary .)
    NUMBER          reduce using rule 56 (call -> primary .)
    NOT             reduce using rule 56 (call -> primary .)
    $end            reduce using rule 56 (call -> primary .)
    RPAREN          reduce using rule 56 (call -> primary .)
    THEN            reduce using rule 56 (call -> primary .)
    RBRACE          reduce using rule 56 (call -> primary .)
    COMMA           reduce using rule 56 (call -> primary .)

  ! LPAREN          [ reduce using rule 56 (call -> primary .) ]


state 82

    (33) equality -> equality EQUALS comparison .
    (36) comparison -> comparison . GREATER term
    (37) comparison -> comparison . LESS term
    (38) comparison -> comparison . GREATEROREQUAL term
    (39) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 33 (equality -> equality EQUALS comparison .)
    NOTEQUALS       reduce using rule 33 (equality -> equality EQUALS comparison .)
    OR              reduce using rule 33 (equality -> equality EQUALS comparison .)
    AND             reduce using rule 33 (equality -> equality EQUALS comparison .)
    VAR             reduce using rule 33 (equality -> equality EQUALS comparison .)
    ID              reduce using rule 33 (equality -> equality EQUALS comparison .)
    FUNC            reduce using rule 33 (equality -> equality EQUALS comparison .)
    CLASS           reduce using rule 33 (equality -> equality EQUALS comparison .)
    IF              reduce using rule 33 (equality -> equality EQUALS comparison .)
    WHILE           reduce using rule 33 (equality -> equality EQUALS comparison .)
    PRINT           reduce using rule 33 (equality -> equality EQUALS comparison .)
    RETURN          reduce using rule 33 (equality -> equality EQUALS comparison .)
    NEW             reduce using rule 33 (equality -> equality EQUALS comparison .)
    NUMBER          reduce using rule 33 (equality -> equality EQUALS comparison .)
    LPAREN          reduce using rule 33 (equality -> equality EQUALS comparison .)
    NOT             reduce using rule 33 (equality -> equality EQUALS comparison .)
    MINUS           reduce using rule 33 (equality -> equality EQUALS comparison .)
    $end            reduce using rule 33 (equality -> equality EQUALS comparison .)
    RPAREN          reduce using rule 33 (equality -> equality EQUALS comparison .)
    THEN            reduce using rule 33 (equality -> equality EQUALS comparison .)
    RBRACE          reduce using rule 33 (equality -> equality EQUALS comparison .)
    COMMA           reduce using rule 33 (equality -> equality EQUALS comparison .)
    GREATER         shift and go to state 56
    LESS            shift and go to state 57
    GREATEROREQUAL  shift and go to state 58
    LESSOREQUAL     shift and go to state 59


state 83

    (34) equality -> equality NOTEQUALS comparison .
    (36) comparison -> comparison . GREATER term
    (37) comparison -> comparison . LESS term
    (38) comparison -> comparison . GREATEROREQUAL term
    (39) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    NOTEQUALS       reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    OR              reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    AND             reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    VAR             reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    ID              reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    FUNC            reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    CLASS           reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    IF              reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    WHILE           reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    PRINT           reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    RETURN          reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    NEW             reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    NUMBER          reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    LPAREN          reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    NOT             reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    MINUS           reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    $end            reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    RPAREN          reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    THEN            reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    RBRACE          reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    COMMA           reduce using rule 34 (equality -> equality NOTEQUALS comparison .)
    GREATER         shift and go to state 56
    LESS            shift and go to state 57
    GREATEROREQUAL  shift and go to state 58
    LESSOREQUAL     shift and go to state 59


state 84

    (36) comparison -> comparison GREATER term .
    (41) term -> term . PLUS factor
    (42) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 36 (comparison -> comparison GREATER term .)
    LESS            reduce using rule 36 (comparison -> comparison GREATER term .)
    GREATEROREQUAL  reduce using rule 36 (comparison -> comparison GREATER term .)
    LESSOREQUAL     reduce using rule 36 (comparison -> comparison GREATER term .)
    EQUALS          reduce using rule 36 (comparison -> comparison GREATER term .)
    NOTEQUALS       reduce using rule 36 (comparison -> comparison GREATER term .)
    OR              reduce using rule 36 (comparison -> comparison GREATER term .)
    AND             reduce using rule 36 (comparison -> comparison GREATER term .)
    VAR             reduce using rule 36 (comparison -> comparison GREATER term .)
    ID              reduce using rule 36 (comparison -> comparison GREATER term .)
    FUNC            reduce using rule 36 (comparison -> comparison GREATER term .)
    CLASS           reduce using rule 36 (comparison -> comparison GREATER term .)
    IF              reduce using rule 36 (comparison -> comparison GREATER term .)
    WHILE           reduce using rule 36 (comparison -> comparison GREATER term .)
    PRINT           reduce using rule 36 (comparison -> comparison GREATER term .)
    RETURN          reduce using rule 36 (comparison -> comparison GREATER term .)
    NEW             reduce using rule 36 (comparison -> comparison GREATER term .)
    NUMBER          reduce using rule 36 (comparison -> comparison GREATER term .)
    LPAREN          reduce using rule 36 (comparison -> comparison GREATER term .)
    NOT             reduce using rule 36 (comparison -> comparison GREATER term .)
    $end            reduce using rule 36 (comparison -> comparison GREATER term .)
    RPAREN          reduce using rule 36 (comparison -> comparison GREATER term .)
    THEN            reduce using rule 36 (comparison -> comparison GREATER term .)
    RBRACE          reduce using rule 36 (comparison -> comparison GREATER term .)
    COMMA           reduce using rule 36 (comparison -> comparison GREATER term .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MINUS           [ reduce using rule 36 (comparison -> comparison GREATER term .) ]


state 85

    (37) comparison -> comparison LESS term .
    (41) term -> term . PLUS factor
    (42) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 37 (comparison -> comparison LESS term .)
    LESS            reduce using rule 37 (comparison -> comparison LESS term .)
    GREATEROREQUAL  reduce using rule 37 (comparison -> comparison LESS term .)
    LESSOREQUAL     reduce using rule 37 (comparison -> comparison LESS term .)
    EQUALS          reduce using rule 37 (comparison -> comparison LESS term .)
    NOTEQUALS       reduce using rule 37 (comparison -> comparison LESS term .)
    OR              reduce using rule 37 (comparison -> comparison LESS term .)
    AND             reduce using rule 37 (comparison -> comparison LESS term .)
    VAR             reduce using rule 37 (comparison -> comparison LESS term .)
    ID              reduce using rule 37 (comparison -> comparison LESS term .)
    FUNC            reduce using rule 37 (comparison -> comparison LESS term .)
    CLASS           reduce using rule 37 (comparison -> comparison LESS term .)
    IF              reduce using rule 37 (comparison -> comparison LESS term .)
    WHILE           reduce using rule 37 (comparison -> comparison LESS term .)
    PRINT           reduce using rule 37 (comparison -> comparison LESS term .)
    RETURN          reduce using rule 37 (comparison -> comparison LESS term .)
    NEW             reduce using rule 37 (comparison -> comparison LESS term .)
    NUMBER          reduce using rule 37 (comparison -> comparison LESS term .)
    LPAREN          reduce using rule 37 (comparison -> comparison LESS term .)
    NOT             reduce using rule 37 (comparison -> comparison LESS term .)
    $end            reduce using rule 37 (comparison -> comparison LESS term .)
    RPAREN          reduce using rule 37 (comparison -> comparison LESS term .)
    THEN            reduce using rule 37 (comparison -> comparison LESS term .)
    RBRACE          reduce using rule 37 (comparison -> comparison LESS term .)
    COMMA           reduce using rule 37 (comparison -> comparison LESS term .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MINUS           [ reduce using rule 37 (comparison -> comparison LESS term .) ]


state 86

    (38) comparison -> comparison GREATEROREQUAL term .
    (41) term -> term . PLUS factor
    (42) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    LESS            reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    GREATEROREQUAL  reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    LESSOREQUAL     reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    EQUALS          reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    NOTEQUALS       reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    OR              reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    AND             reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    VAR             reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    ID              reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    FUNC            reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    CLASS           reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    IF              reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    WHILE           reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    PRINT           reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    RETURN          reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    NEW             reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    NUMBER          reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    LPAREN          reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    NOT             reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    $end            reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    RPAREN          reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    THEN            reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    RBRACE          reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    COMMA           reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MINUS           [ reduce using rule 38 (comparison -> comparison GREATEROREQUAL term .) ]


state 87

    (39) comparison -> comparison LESSOREQUAL term .
    (41) term -> term . PLUS factor
    (42) term -> term . MINUS factor

  ! shift/reduce conflict for MINUS resolved as shift
    GREATER         reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    LESS            reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    GREATEROREQUAL  reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    LESSOREQUAL     reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    EQUALS          reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    NOTEQUALS       reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    OR              reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    AND             reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    VAR             reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    ID              reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    FUNC            reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    CLASS           reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    IF              reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    WHILE           reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    PRINT           reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    RETURN          reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    NEW             reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    NUMBER          reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    LPAREN          reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    NOT             reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    $end            reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    RPAREN          reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    THEN            reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    RBRACE          reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    COMMA           reduce using rule 39 (comparison -> comparison LESSOREQUAL term .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61

  ! MINUS           [ reduce using rule 39 (comparison -> comparison LESSOREQUAL term .) ]


state 88

    (41) term -> term PLUS factor .
    (44) factor -> factor . TIMES unary
    (45) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 41 (term -> term PLUS factor .)
    MINUS           reduce using rule 41 (term -> term PLUS factor .)
    GREATER         reduce using rule 41 (term -> term PLUS factor .)
    LESS            reduce using rule 41 (term -> term PLUS factor .)
    GREATEROREQUAL  reduce using rule 41 (term -> term PLUS factor .)
    LESSOREQUAL     reduce using rule 41 (term -> term PLUS factor .)
    EQUALS          reduce using rule 41 (term -> term PLUS factor .)
    NOTEQUALS       reduce using rule 41 (term -> term PLUS factor .)
    OR              reduce using rule 41 (term -> term PLUS factor .)
    AND             reduce using rule 41 (term -> term PLUS factor .)
    VAR             reduce using rule 41 (term -> term PLUS factor .)
    ID              reduce using rule 41 (term -> term PLUS factor .)
    FUNC            reduce using rule 41 (term -> term PLUS factor .)
    CLASS           reduce using rule 41 (term -> term PLUS factor .)
    IF              reduce using rule 41 (term -> term PLUS factor .)
    WHILE           reduce using rule 41 (term -> term PLUS factor .)
    PRINT           reduce using rule 41 (term -> term PLUS factor .)
    RETURN          reduce using rule 41 (term -> term PLUS factor .)
    NEW             reduce using rule 41 (term -> term PLUS factor .)
    NUMBER          reduce using rule 41 (term -> term PLUS factor .)
    LPAREN          reduce using rule 41 (term -> term PLUS factor .)
    NOT             reduce using rule 41 (term -> term PLUS factor .)
    $end            reduce using rule 41 (term -> term PLUS factor .)
    RPAREN          reduce using rule 41 (term -> term PLUS factor .)
    THEN            reduce using rule 41 (term -> term PLUS factor .)
    RBRACE          reduce using rule 41 (term -> term PLUS factor .)
    COMMA           reduce using rule 41 (term -> term PLUS factor .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63


state 89

    (42) term -> term MINUS factor .
    (44) factor -> factor . TIMES unary
    (45) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 42 (term -> term MINUS factor .)
    MINUS           reduce using rule 42 (term -> term MINUS factor .)
    GREATER         reduce using rule 42 (term -> term MINUS factor .)
    LESS            reduce using rule 42 (term -> term MINUS factor .)
    GREATEROREQUAL  reduce using rule 42 (term -> term MINUS factor .)
    LESSOREQUAL     reduce using rule 42 (term -> term MINUS factor .)
    EQUALS          reduce using rule 42 (term -> term MINUS factor .)
    NOTEQUALS       reduce using rule 42 (term -> term MINUS factor .)
    OR              reduce using rule 42 (term -> term MINUS factor .)
    AND             reduce using rule 42 (term -> term MINUS factor .)
    VAR             reduce using rule 42 (term -> term MINUS factor .)
    ID              reduce using rule 42 (term -> term MINUS factor .)
    FUNC            reduce using rule 42 (term -> term MINUS factor .)
    CLASS           reduce using rule 42 (term -> term MINUS factor .)
    IF              reduce using rule 42 (term -> term MINUS factor .)
    WHILE           reduce using rule 42 (term -> term MINUS factor .)
    PRINT           reduce using rule 42 (term -> term MINUS factor .)
    RETURN          reduce using rule 42 (term -> term MINUS factor .)
    NEW             reduce using rule 42 (term -> term MINUS factor .)
    NUMBER          reduce using rule 42 (term -> term MINUS factor .)
    LPAREN          reduce using rule 42 (term -> term MINUS factor .)
    NOT             reduce using rule 42 (term -> term MINUS factor .)
    $end            reduce using rule 42 (term -> term MINUS factor .)
    RPAREN          reduce using rule 42 (term -> term MINUS factor .)
    THEN            reduce using rule 42 (term -> term MINUS factor .)
    RBRACE          reduce using rule 42 (term -> term MINUS factor .)
    COMMA           reduce using rule 42 (term -> term MINUS factor .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 63


state 90

    (44) factor -> factor TIMES unary .

    TIMES           reduce using rule 44 (factor -> factor TIMES unary .)
    DIVIDE          reduce using rule 44 (factor -> factor TIMES unary .)
    PLUS            reduce using rule 44 (factor -> factor TIMES unary .)
    MINUS           reduce using rule 44 (factor -> factor TIMES unary .)
    GREATER         reduce using rule 44 (factor -> factor TIMES unary .)
    LESS            reduce using rule 44 (factor -> factor TIMES unary .)
    GREATEROREQUAL  reduce using rule 44 (factor -> factor TIMES unary .)
    LESSOREQUAL     reduce using rule 44 (factor -> factor TIMES unary .)
    EQUALS          reduce using rule 44 (factor -> factor TIMES unary .)
    NOTEQUALS       reduce using rule 44 (factor -> factor TIMES unary .)
    OR              reduce using rule 44 (factor -> factor TIMES unary .)
    AND             reduce using rule 44 (factor -> factor TIMES unary .)
    VAR             reduce using rule 44 (factor -> factor TIMES unary .)
    ID              reduce using rule 44 (factor -> factor TIMES unary .)
    FUNC            reduce using rule 44 (factor -> factor TIMES unary .)
    CLASS           reduce using rule 44 (factor -> factor TIMES unary .)
    IF              reduce using rule 44 (factor -> factor TIMES unary .)
    WHILE           reduce using rule 44 (factor -> factor TIMES unary .)
    PRINT           reduce using rule 44 (factor -> factor TIMES unary .)
    RETURN          reduce using rule 44 (factor -> factor TIMES unary .)
    NEW             reduce using rule 44 (factor -> factor TIMES unary .)
    NUMBER          reduce using rule 44 (factor -> factor TIMES unary .)
    LPAREN          reduce using rule 44 (factor -> factor TIMES unary .)
    NOT             reduce using rule 44 (factor -> factor TIMES unary .)
    $end            reduce using rule 44 (factor -> factor TIMES unary .)
    RPAREN          reduce using rule 44 (factor -> factor TIMES unary .)
    THEN            reduce using rule 44 (factor -> factor TIMES unary .)
    RBRACE          reduce using rule 44 (factor -> factor TIMES unary .)
    COMMA           reduce using rule 44 (factor -> factor TIMES unary .)


state 91

    (45) factor -> factor DIVIDE unary .

    TIMES           reduce using rule 45 (factor -> factor DIVIDE unary .)
    DIVIDE          reduce using rule 45 (factor -> factor DIVIDE unary .)
    PLUS            reduce using rule 45 (factor -> factor DIVIDE unary .)
    MINUS           reduce using rule 45 (factor -> factor DIVIDE unary .)
    GREATER         reduce using rule 45 (factor -> factor DIVIDE unary .)
    LESS            reduce using rule 45 (factor -> factor DIVIDE unary .)
    GREATEROREQUAL  reduce using rule 45 (factor -> factor DIVIDE unary .)
    LESSOREQUAL     reduce using rule 45 (factor -> factor DIVIDE unary .)
    EQUALS          reduce using rule 45 (factor -> factor DIVIDE unary .)
    NOTEQUALS       reduce using rule 45 (factor -> factor DIVIDE unary .)
    OR              reduce using rule 45 (factor -> factor DIVIDE unary .)
    AND             reduce using rule 45 (factor -> factor DIVIDE unary .)
    VAR             reduce using rule 45 (factor -> factor DIVIDE unary .)
    ID              reduce using rule 45 (factor -> factor DIVIDE unary .)
    FUNC            reduce using rule 45 (factor -> factor DIVIDE unary .)
    CLASS           reduce using rule 45 (factor -> factor DIVIDE unary .)
    IF              reduce using rule 45 (factor -> factor DIVIDE unary .)
    WHILE           reduce using rule 45 (factor -> factor DIVIDE unary .)
    PRINT           reduce using rule 45 (factor -> factor DIVIDE unary .)
    RETURN          reduce using rule 45 (factor -> factor DIVIDE unary .)
    NEW             reduce using rule 45 (factor -> factor DIVIDE unary .)
    NUMBER          reduce using rule 45 (factor -> factor DIVIDE unary .)
    LPAREN          reduce using rule 45 (factor -> factor DIVIDE unary .)
    NOT             reduce using rule 45 (factor -> factor DIVIDE unary .)
    $end            reduce using rule 45 (factor -> factor DIVIDE unary .)
    RPAREN          reduce using rule 45 (factor -> factor DIVIDE unary .)
    THEN            reduce using rule 45 (factor -> factor DIVIDE unary .)
    RBRACE          reduce using rule 45 (factor -> factor DIVIDE unary .)
    COMMA           reduce using rule 45 (factor -> factor DIVIDE unary .)


state 92

    (25) varDeclaration -> VAR ID ASSIGN expression .

    VAR             reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    ID              reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    FUNC            reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    CLASS           reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    IF              reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    WHILE           reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    PRINT           reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    RETURN          reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    NEW             reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    NUMBER          reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    LPAREN          reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    NOT             reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    MINUS           reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    $end            reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)
    RBRACE          reduce using rule 25 (varDeclaration -> VAR ID ASSIGN expression .)


state 93

    (26) varDeclaration -> ID ID ASSIGN expression .

    VAR             reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    ID              reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    FUNC            reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    CLASS           reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    IF              reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    WHILE           reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    PRINT           reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    RETURN          reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    NEW             reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    NUMBER          reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    LPAREN          reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    NOT             reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    MINUS           reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    $end            reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)
    RBRACE          reduce using rule 26 (varDeclaration -> ID ID ASSIGN expression .)


state 94

    (65) parameter_list -> ID .
    (67) parameter_list -> ID . COLON ID

    RPAREN          reduce using rule 65 (parameter_list -> ID .)
    COMMA           reduce using rule 65 (parameter_list -> ID .)
    COLON           shift and go to state 106


state 95

    (63) funcDeclaration -> FUNC ID LPAREN parameter_list . RPAREN LBRACE declaration_list RBRACE
    (64) parameter_list -> parameter_list . COMMA ID
    (66) parameter_list -> parameter_list . COMMA ID COLON ID

    RPAREN          shift and go to state 107
    COMMA           shift and go to state 108


state 96

    (24) varDeclaration -> ID . ID
    (26) varDeclaration -> ID . ID ASSIGN expression

    ID              shift and go to state 39


state 97

    (8) class -> CLASS ID LBRACE classDeclarationList . RBRACE
    (9) classDeclarationList -> classDeclarationList . classDeclaration
    (11) classDeclaration -> . varDeclaration
    (12) classDeclaration -> . funcDeclaration
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE

    RBRACE          shift and go to state 109
    VAR             shift and go to state 8
    ID              shift and go to state 96
    FUNC            shift and go to state 15

    classDeclaration               shift and go to state 110
    varDeclaration                 shift and go to state 99
    funcDeclaration                shift and go to state 100

state 98

    (10) classDeclarationList -> classDeclaration .

    RBRACE          reduce using rule 10 (classDeclarationList -> classDeclaration .)
    VAR             reduce using rule 10 (classDeclarationList -> classDeclaration .)
    ID              reduce using rule 10 (classDeclarationList -> classDeclaration .)
    FUNC            reduce using rule 10 (classDeclarationList -> classDeclaration .)


state 99

    (11) classDeclaration -> varDeclaration .

    RBRACE          reduce using rule 11 (classDeclaration -> varDeclaration .)
    VAR             reduce using rule 11 (classDeclaration -> varDeclaration .)
    ID              reduce using rule 11 (classDeclaration -> varDeclaration .)
    FUNC            reduce using rule 11 (classDeclaration -> varDeclaration .)


state 100

    (12) classDeclaration -> funcDeclaration .

    RBRACE          reduce using rule 12 (classDeclaration -> funcDeclaration .)
    VAR             reduce using rule 12 (classDeclaration -> funcDeclaration .)
    ID              reduce using rule 12 (classDeclaration -> funcDeclaration .)
    FUNC            reduce using rule 12 (classDeclaration -> funcDeclaration .)


state 101

    (19) ifStatement -> IF expression THEN LBRACE . declaration_list RBRACE
    (20) ifStatement -> IF expression THEN LBRACE . declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (13) statement -> . expression
    (14) statement -> . ifStatement
    (15) statement -> . whileStatement
    (16) statement -> . printStatement
    (17) statement -> . returnStatement
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID LBRACE classDeclarationList RBRACE
    (27) expression -> . assignment
    (19) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (21) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (22) printStatement -> . PRINT expression
    (18) returnStatement -> . RETURN expression
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    VAR             shift and go to state 8
    ID              shift and go to state 9
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21
    RETURN          shift and go to state 22
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 10
    declaration_list               shift and go to state 111
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 102

    (21) whileStatement -> WHILE expression THEN LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (13) statement -> . expression
    (14) statement -> . ifStatement
    (15) statement -> . whileStatement
    (16) statement -> . printStatement
    (17) statement -> . returnStatement
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID LBRACE classDeclarationList RBRACE
    (27) expression -> . assignment
    (19) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (21) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (22) printStatement -> . PRINT expression
    (18) returnStatement -> . RETURN expression
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    VAR             shift and go to state 8
    ID              shift and go to state 9
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21
    RETURN          shift and go to state 22
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 10
    declaration_list               shift and go to state 112
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 103

    (50) property -> NEW primary LPAREN RPAREN .

    ASSIGN          reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    TIMES           reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    DIVIDE          reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    PLUS            reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    MINUS           reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    GREATER         reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    LESS            reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    GREATEROREQUAL  reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    LESSOREQUAL     reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    EQUALS          reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    NOTEQUALS       reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    OR              reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    AND             reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    VAR             reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    ID              reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    FUNC            reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    CLASS           reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    IF              reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    WHILE           reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    PRINT           reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    RETURN          reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    NEW             reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    NUMBER          reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    LPAREN          reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    NOT             reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    $end            reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    RPAREN          reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    THEN            reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    RBRACE          reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)
    COMMA           reduce using rule 50 (property -> NEW primary LPAREN RPAREN .)


state 104

    (55) call -> primary LPAREN arguments RPAREN .

    ASSIGN          reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    TIMES           reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    PLUS            reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    MINUS           reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    GREATER         reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    LESS            reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    GREATEROREQUAL  reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    LESSOREQUAL     reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    EQUALS          reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    NOTEQUALS       reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    OR              reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    AND             reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    VAR             reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    ID              reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    FUNC            reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    CLASS           reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    IF              reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    WHILE           reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    PRINT           reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    RETURN          reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    NEW             reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    NUMBER          reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    NOT             reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    $end            reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    THEN            reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)
    COMMA           reduce using rule 55 (call -> primary LPAREN arguments RPAREN .)


state 105

    (60) arguments -> arguments COMMA . expression
    (27) expression -> . assignment
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    ID              shift and go to state 42
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 113
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 106

    (67) parameter_list -> ID COLON . ID

    ID              shift and go to state 114


state 107

    (63) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 115


state 108

    (64) parameter_list -> parameter_list COMMA . ID
    (66) parameter_list -> parameter_list COMMA . ID COLON ID

    ID              shift and go to state 116


state 109

    (8) class -> CLASS ID LBRACE classDeclarationList RBRACE .

    VAR             reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    ID              reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    FUNC            reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    CLASS           reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    IF              reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    WHILE           reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    PRINT           reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    RETURN          reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    NEW             reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    NUMBER          reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    LPAREN          reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    NOT             reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    MINUS           reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    $end            reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)
    RBRACE          reduce using rule 8 (class -> CLASS ID LBRACE classDeclarationList RBRACE .)


state 110

    (9) classDeclarationList -> classDeclarationList classDeclaration .

    RBRACE          reduce using rule 9 (classDeclarationList -> classDeclarationList classDeclaration .)
    VAR             reduce using rule 9 (classDeclarationList -> classDeclarationList classDeclaration .)
    ID              reduce using rule 9 (classDeclarationList -> classDeclarationList classDeclaration .)
    FUNC            reduce using rule 9 (classDeclarationList -> classDeclarationList classDeclaration .)


state 111

    (19) ifStatement -> IF expression THEN LBRACE declaration_list . RBRACE
    (20) ifStatement -> IF expression THEN LBRACE declaration_list . RBRACE ELSE LBRACE declaration_list RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (13) statement -> . expression
    (14) statement -> . ifStatement
    (15) statement -> . whileStatement
    (16) statement -> . printStatement
    (17) statement -> . returnStatement
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID LBRACE classDeclarationList RBRACE
    (27) expression -> . assignment
    (19) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (21) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (22) printStatement -> . PRINT expression
    (18) returnStatement -> . RETURN expression
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    RBRACE          shift and go to state 117
    VAR             shift and go to state 8
    ID              shift and go to state 9
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21
    RETURN          shift and go to state 22
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 10
    declaration                    shift and go to state 37
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 112

    (21) whileStatement -> WHILE expression THEN LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (13) statement -> . expression
    (14) statement -> . ifStatement
    (15) statement -> . whileStatement
    (16) statement -> . printStatement
    (17) statement -> . returnStatement
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID LBRACE classDeclarationList RBRACE
    (27) expression -> . assignment
    (19) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (21) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (22) printStatement -> . PRINT expression
    (18) returnStatement -> . RETURN expression
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    RBRACE          shift and go to state 118
    VAR             shift and go to state 8
    ID              shift and go to state 9
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21
    RETURN          shift and go to state 22
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 10
    declaration                    shift and go to state 37
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 113

    (60) arguments -> arguments COMMA expression .

    RPAREN          reduce using rule 60 (arguments -> arguments COMMA expression .)
    COMMA           reduce using rule 60 (arguments -> arguments COMMA expression .)


state 114

    (67) parameter_list -> ID COLON ID .

    RPAREN          reduce using rule 67 (parameter_list -> ID COLON ID .)
    COMMA           reduce using rule 67 (parameter_list -> ID COLON ID .)


state 115

    (63) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (13) statement -> . expression
    (14) statement -> . ifStatement
    (15) statement -> . whileStatement
    (16) statement -> . printStatement
    (17) statement -> . returnStatement
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID LBRACE classDeclarationList RBRACE
    (27) expression -> . assignment
    (19) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (21) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (22) printStatement -> . PRINT expression
    (18) returnStatement -> . RETURN expression
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    VAR             shift and go to state 8
    ID              shift and go to state 9
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21
    RETURN          shift and go to state 22
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    declaration_list               shift and go to state 119
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 116

    (64) parameter_list -> parameter_list COMMA ID .
    (66) parameter_list -> parameter_list COMMA ID . COLON ID

    RPAREN          reduce using rule 64 (parameter_list -> parameter_list COMMA ID .)
    COMMA           reduce using rule 64 (parameter_list -> parameter_list COMMA ID .)
    COLON           shift and go to state 120


state 117

    (19) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .
    (20) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE . ELSE LBRACE declaration_list RBRACE

    VAR             reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    ID              reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    FUNC            reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    IF              reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    $end            reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 19 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    ELSE            shift and go to state 121


state 118

    (21) whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .

    VAR             reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    ID              reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    FUNC            reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    IF              reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    $end            reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 21 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)


state 119

    (63) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (13) statement -> . expression
    (14) statement -> . ifStatement
    (15) statement -> . whileStatement
    (16) statement -> . printStatement
    (17) statement -> . returnStatement
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID LBRACE classDeclarationList RBRACE
    (27) expression -> . assignment
    (19) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (21) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (22) printStatement -> . PRINT expression
    (18) returnStatement -> . RETURN expression
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    RBRACE          shift and go to state 122
    VAR             shift and go to state 8
    ID              shift and go to state 9
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21
    RETURN          shift and go to state 22
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    declaration                    shift and go to state 37
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 120

    (66) parameter_list -> parameter_list COMMA ID COLON . ID

    ID              shift and go to state 123


state 121

    (20) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 124


state 122

    (63) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .

    VAR             reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    ID              reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    FUNC            reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    IF              reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    $end            reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 63 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE .)


state 123

    (66) parameter_list -> parameter_list COMMA ID COLON ID .

    RPAREN          reduce using rule 66 (parameter_list -> parameter_list COMMA ID COLON ID .)
    COMMA           reduce using rule 66 (parameter_list -> parameter_list COMMA ID COLON ID .)


state 124

    (20) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (13) statement -> . expression
    (14) statement -> . ifStatement
    (15) statement -> . whileStatement
    (16) statement -> . printStatement
    (17) statement -> . returnStatement
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID LBRACE classDeclarationList RBRACE
    (27) expression -> . assignment
    (19) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (21) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (22) printStatement -> . PRINT expression
    (18) returnStatement -> . RETURN expression
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    VAR             shift and go to state 8
    ID              shift and go to state 9
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21
    RETURN          shift and go to state 22
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 10
    declaration_list               shift and go to state 125
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 125

    (20) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (23) varDeclaration -> . VAR ID
    (24) varDeclaration -> . ID ID
    (25) varDeclaration -> . VAR ID ASSIGN expression
    (26) varDeclaration -> . ID ID ASSIGN expression
    (13) statement -> . expression
    (14) statement -> . ifStatement
    (15) statement -> . whileStatement
    (16) statement -> . printStatement
    (17) statement -> . returnStatement
    (63) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID LBRACE classDeclarationList RBRACE
    (27) expression -> . assignment
    (19) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (20) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (21) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (22) printStatement -> . PRINT expression
    (18) returnStatement -> . RETURN expression
    (28) assignment -> . property ASSIGN logical
    (29) assignment -> . logical
    (50) property -> . NEW primary LPAREN RPAREN
    (51) property -> . property_list DOT call
    (54) property -> . call
    (30) logical -> . logical OR equality
    (31) logical -> . logical AND equality
    (32) logical -> . equality
    (52) property_list -> . property_list DOT primary
    (53) property_list -> . primary
    (55) call -> . primary LPAREN arguments RPAREN
    (56) call -> . primary
    (33) equality -> . equality EQUALS comparison
    (34) equality -> . equality NOTEQUALS comparison
    (35) equality -> . comparison
    (57) primary -> . NUMBER
    (58) primary -> . ID
    (59) primary -> . LPAREN expression RPAREN
    (36) comparison -> . comparison GREATER term
    (37) comparison -> . comparison LESS term
    (38) comparison -> . comparison GREATEROREQUAL term
    (39) comparison -> . comparison LESSOREQUAL term
    (40) comparison -> . term
    (41) term -> . term PLUS factor
    (42) term -> . term MINUS factor
    (43) term -> . factor
    (44) factor -> . factor TIMES unary
    (45) factor -> . factor DIVIDE unary
    (46) factor -> . unary
    (47) unary -> . NOT unary
    (48) unary -> . MINUS unary
    (49) unary -> . property

    RBRACE          shift and go to state 126
    VAR             shift and go to state 8
    ID              shift and go to state 9
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    IF              shift and go to state 19
    WHILE           shift and go to state 20
    PRINT           shift and go to state 21
    RETURN          shift and go to state 22
    NEW             shift and go to state 25
    NUMBER          shift and go to state 31
    LPAREN          shift and go to state 16
    NOT             shift and go to state 36
    MINUS           shift and go to state 34

    expression                     shift and go to state 10
    declaration                    shift and go to state 37
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 18
    property                       shift and go to state 23
    logical                        shift and go to state 24
    primary                        shift and go to state 26
    property_list                  shift and go to state 27
    call                           shift and go to state 28
    equality                       shift and go to state 29
    comparison                     shift and go to state 30
    term                           shift and go to state 32
    factor                         shift and go to state 33
    unary                          shift and go to state 35

state 126

    (20) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .

    VAR             reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    ID              reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    FUNC            reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    IF              reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    $end            reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 20 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 9 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 26 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
