Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration
Rule 3     declaration_list -> declaration_list declaration
Rule 4     declaration -> varDeclaration SEMICOLON
Rule 5     declaration -> statement
Rule 6     declaration -> funcDeclaration
Rule 7     declaration -> class
Rule 8     class -> CLASS ID extends LBRACE classDeclarationList RBRACE
Rule 9     extends -> EXTENDS ID
Rule 10    extends -> empty
Rule 11    classDeclarationList -> classDeclarationList classDeclaration
Rule 12    classDeclarationList -> classDeclaration
Rule 13    classDeclaration -> varDeclaration SEMICOLON
Rule 14    classDeclaration -> methodDeclaration
Rule 15    methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
Rule 16    statement -> expression SEMICOLON
Rule 17    statement -> ifStatement
Rule 18    statement -> whileStatement
Rule 19    statement -> printStatement SEMICOLON
Rule 20    statement -> returnStatement SEMICOLON
Rule 21    returnStatement -> RETURN expression
Rule 22    returnStatement -> RETURN
Rule 23    ifStatement -> IF expression THEN LBRACE declaration_list RBRACE
Rule 24    ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
Rule 25    whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE
Rule 26    printStatement -> PRINT expression
Rule 27    varDeclaration -> type ID
Rule 28    varDeclaration -> type ID ASSIGN expression
Rule 29    type -> INT
Rule 30    type -> BOOL
Rule 31    type -> VOID
Rule 32    type -> ID
Rule 33    expression -> assignment
Rule 34    assignment -> property ASSIGN logical
Rule 35    assignment -> logical
Rule 36    logical -> logical OR equality
Rule 37    logical -> logical AND equality
Rule 38    logical -> equality
Rule 39    equality -> equality EQUALS comparison
Rule 40    equality -> equality NOTEQUALS comparison
Rule 41    equality -> comparison
Rule 42    comparison -> comparison GREATER term
Rule 43    comparison -> comparison LESS term
Rule 44    comparison -> comparison GREATEROREQUAL term
Rule 45    comparison -> comparison LESSOREQUAL term
Rule 46    comparison -> term
Rule 47    term -> term PLUS factor
Rule 48    term -> term MINUS factor
Rule 49    term -> factor
Rule 50    factor -> factor TIMES unary
Rule 51    factor -> factor DIVIDE unary
Rule 52    factor -> unary
Rule 53    unary -> NOT unary
Rule 54    unary -> MINUS unary
Rule 55    unary -> property
Rule 56    property -> NEW primary LPAREN RPAREN
Rule 57    property -> property DOT ID
Rule 58    property -> property LPAREN arguments RPAREN
Rule 59    property -> call
Rule 60    call -> primary LPAREN arguments RPAREN
Rule 61    call -> primary
Rule 62    primary -> NUMBER
Rule 63    primary -> ID
Rule 64    primary -> TRUE
Rule 65    primary -> FALSE
Rule 66    primary -> NULL
Rule 67    primary -> LPAREN expression RPAREN
Rule 68    arguments -> arguments COMMA expression
Rule 69    arguments -> expression
Rule 70    arguments -> <empty>
Rule 71    funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
Rule 72    parameter_list -> parameter_list COMMA type ID
Rule 73    parameter_list -> type ID
Rule 74    parameter_list -> <empty>
Rule 75    empty -> <empty>

Terminals, with rules where they appear

AND                  : 37
ASSIGN               : 28 34
BOOL                 : 30
CLASS                : 8
COMMA                : 68 72
DIVIDE               : 51
DOT                  : 57
ELSE                 : 24
EQUALS               : 39
EXTENDS              : 9
FALSE                : 65
FUNC                 : 15 71
GREATER              : 42
GREATEROREQUAL       : 44
ID                   : 8 9 15 27 28 32 57 63 71 72 73
IF                   : 23 24
INT                  : 29
LBRACE               : 8 15 23 24 24 25 71
LESS                 : 43
LESSOREQUAL          : 45
LPAREN               : 15 56 58 60 67 71
MINUS                : 48 54
NEW                  : 56
NOT                  : 53
NOTEQUALS            : 40
NULL                 : 66
NUMBER               : 62
OR                   : 36
PLUS                 : 47
PRINT                : 26
RBRACE               : 8 15 23 24 24 25 71
RETURN               : 21 22
RPAREN               : 15 56 58 60 67 71
SEMICOLON            : 4 13 16 19 20
THEN                 : 23 24 25
TIMES                : 50
TRUE                 : 64
VOID                 : 31
WHILE                : 25
error                : 

Nonterminals, with rules where they appear

arguments            : 58 60 68
assignment           : 33
call                 : 59
class                : 7
classDeclaration     : 11 12
classDeclarationList : 8 11
comparison           : 39 40 41 42 43 44 45
declaration          : 2 3
declaration_list     : 1 3 15 23 24 24 25 71
empty                : 10
equality             : 36 37 38 39 40
expression           : 16 21 23 24 25 26 28 67 68 69
extends              : 8
factor               : 47 48 49 50 51
funcDeclaration      : 6
ifStatement          : 17
logical              : 34 35 36 37
methodDeclaration    : 14
parameter_list       : 15 71 72
primary              : 56 60 61
printStatement       : 19
program              : 0
property             : 34 55 57 58
returnStatement      : 20
statement            : 5
term                 : 42 43 44 45 46 47 48
type                 : 15 27 28 71 72 73
unary                : 50 51 52 53 54
varDeclaration       : 4 13
whileStatement       : 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    $end            reduce using rule 1 (program -> declaration_list .)
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    declaration                    shift and go to state 42
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 3

    (2) declaration_list -> declaration .

    FUNC            reduce using rule 2 (declaration_list -> declaration .)
    CLASS           reduce using rule 2 (declaration_list -> declaration .)
    INT             reduce using rule 2 (declaration_list -> declaration .)
    BOOL            reduce using rule 2 (declaration_list -> declaration .)
    VOID            reduce using rule 2 (declaration_list -> declaration .)
    ID              reduce using rule 2 (declaration_list -> declaration .)
    IF              reduce using rule 2 (declaration_list -> declaration .)
    WHILE           reduce using rule 2 (declaration_list -> declaration .)
    PRINT           reduce using rule 2 (declaration_list -> declaration .)
    RETURN          reduce using rule 2 (declaration_list -> declaration .)
    NEW             reduce using rule 2 (declaration_list -> declaration .)
    NUMBER          reduce using rule 2 (declaration_list -> declaration .)
    TRUE            reduce using rule 2 (declaration_list -> declaration .)
    FALSE           reduce using rule 2 (declaration_list -> declaration .)
    NULL            reduce using rule 2 (declaration_list -> declaration .)
    LPAREN          reduce using rule 2 (declaration_list -> declaration .)
    NOT             reduce using rule 2 (declaration_list -> declaration .)
    MINUS           reduce using rule 2 (declaration_list -> declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration .)
    RBRACE          reduce using rule 2 (declaration_list -> declaration .)


state 4

    (4) declaration -> varDeclaration . SEMICOLON

    SEMICOLON       shift and go to state 43


state 5

    (5) declaration -> statement .

    FUNC            reduce using rule 5 (declaration -> statement .)
    CLASS           reduce using rule 5 (declaration -> statement .)
    INT             reduce using rule 5 (declaration -> statement .)
    BOOL            reduce using rule 5 (declaration -> statement .)
    VOID            reduce using rule 5 (declaration -> statement .)
    ID              reduce using rule 5 (declaration -> statement .)
    IF              reduce using rule 5 (declaration -> statement .)
    WHILE           reduce using rule 5 (declaration -> statement .)
    PRINT           reduce using rule 5 (declaration -> statement .)
    RETURN          reduce using rule 5 (declaration -> statement .)
    NEW             reduce using rule 5 (declaration -> statement .)
    NUMBER          reduce using rule 5 (declaration -> statement .)
    TRUE            reduce using rule 5 (declaration -> statement .)
    FALSE           reduce using rule 5 (declaration -> statement .)
    NULL            reduce using rule 5 (declaration -> statement .)
    LPAREN          reduce using rule 5 (declaration -> statement .)
    NOT             reduce using rule 5 (declaration -> statement .)
    MINUS           reduce using rule 5 (declaration -> statement .)
    $end            reduce using rule 5 (declaration -> statement .)
    RBRACE          reduce using rule 5 (declaration -> statement .)


state 6

    (6) declaration -> funcDeclaration .

    FUNC            reduce using rule 6 (declaration -> funcDeclaration .)
    CLASS           reduce using rule 6 (declaration -> funcDeclaration .)
    INT             reduce using rule 6 (declaration -> funcDeclaration .)
    BOOL            reduce using rule 6 (declaration -> funcDeclaration .)
    VOID            reduce using rule 6 (declaration -> funcDeclaration .)
    ID              reduce using rule 6 (declaration -> funcDeclaration .)
    IF              reduce using rule 6 (declaration -> funcDeclaration .)
    WHILE           reduce using rule 6 (declaration -> funcDeclaration .)
    PRINT           reduce using rule 6 (declaration -> funcDeclaration .)
    RETURN          reduce using rule 6 (declaration -> funcDeclaration .)
    NEW             reduce using rule 6 (declaration -> funcDeclaration .)
    NUMBER          reduce using rule 6 (declaration -> funcDeclaration .)
    TRUE            reduce using rule 6 (declaration -> funcDeclaration .)
    FALSE           reduce using rule 6 (declaration -> funcDeclaration .)
    NULL            reduce using rule 6 (declaration -> funcDeclaration .)
    LPAREN          reduce using rule 6 (declaration -> funcDeclaration .)
    NOT             reduce using rule 6 (declaration -> funcDeclaration .)
    MINUS           reduce using rule 6 (declaration -> funcDeclaration .)
    $end            reduce using rule 6 (declaration -> funcDeclaration .)
    RBRACE          reduce using rule 6 (declaration -> funcDeclaration .)


state 7

    (7) declaration -> class .

    FUNC            reduce using rule 7 (declaration -> class .)
    CLASS           reduce using rule 7 (declaration -> class .)
    INT             reduce using rule 7 (declaration -> class .)
    BOOL            reduce using rule 7 (declaration -> class .)
    VOID            reduce using rule 7 (declaration -> class .)
    ID              reduce using rule 7 (declaration -> class .)
    IF              reduce using rule 7 (declaration -> class .)
    WHILE           reduce using rule 7 (declaration -> class .)
    PRINT           reduce using rule 7 (declaration -> class .)
    RETURN          reduce using rule 7 (declaration -> class .)
    NEW             reduce using rule 7 (declaration -> class .)
    NUMBER          reduce using rule 7 (declaration -> class .)
    TRUE            reduce using rule 7 (declaration -> class .)
    FALSE           reduce using rule 7 (declaration -> class .)
    NULL            reduce using rule 7 (declaration -> class .)
    LPAREN          reduce using rule 7 (declaration -> class .)
    NOT             reduce using rule 7 (declaration -> class .)
    MINUS           reduce using rule 7 (declaration -> class .)
    $end            reduce using rule 7 (declaration -> class .)
    RBRACE          reduce using rule 7 (declaration -> class .)


state 8

    (27) varDeclaration -> type . ID
    (28) varDeclaration -> type . ID ASSIGN expression

    ID              shift and go to state 44


state 9

    (32) type -> ID .
    (63) primary -> ID .

    ID              reduce using rule 32 (type -> ID .)
    LPAREN          reduce using rule 63 (primary -> ID .)
    ASSIGN          reduce using rule 63 (primary -> ID .)
    DOT             reduce using rule 63 (primary -> ID .)
    TIMES           reduce using rule 63 (primary -> ID .)
    DIVIDE          reduce using rule 63 (primary -> ID .)
    PLUS            reduce using rule 63 (primary -> ID .)
    MINUS           reduce using rule 63 (primary -> ID .)
    GREATER         reduce using rule 63 (primary -> ID .)
    LESS            reduce using rule 63 (primary -> ID .)
    GREATEROREQUAL  reduce using rule 63 (primary -> ID .)
    LESSOREQUAL     reduce using rule 63 (primary -> ID .)
    EQUALS          reduce using rule 63 (primary -> ID .)
    NOTEQUALS       reduce using rule 63 (primary -> ID .)
    OR              reduce using rule 63 (primary -> ID .)
    AND             reduce using rule 63 (primary -> ID .)
    SEMICOLON       reduce using rule 63 (primary -> ID .)


state 10

    (16) statement -> expression . SEMICOLON

    SEMICOLON       shift and go to state 45


state 11

    (17) statement -> ifStatement .

    FUNC            reduce using rule 17 (statement -> ifStatement .)
    CLASS           reduce using rule 17 (statement -> ifStatement .)
    INT             reduce using rule 17 (statement -> ifStatement .)
    BOOL            reduce using rule 17 (statement -> ifStatement .)
    VOID            reduce using rule 17 (statement -> ifStatement .)
    ID              reduce using rule 17 (statement -> ifStatement .)
    IF              reduce using rule 17 (statement -> ifStatement .)
    WHILE           reduce using rule 17 (statement -> ifStatement .)
    PRINT           reduce using rule 17 (statement -> ifStatement .)
    RETURN          reduce using rule 17 (statement -> ifStatement .)
    NEW             reduce using rule 17 (statement -> ifStatement .)
    NUMBER          reduce using rule 17 (statement -> ifStatement .)
    TRUE            reduce using rule 17 (statement -> ifStatement .)
    FALSE           reduce using rule 17 (statement -> ifStatement .)
    NULL            reduce using rule 17 (statement -> ifStatement .)
    LPAREN          reduce using rule 17 (statement -> ifStatement .)
    NOT             reduce using rule 17 (statement -> ifStatement .)
    MINUS           reduce using rule 17 (statement -> ifStatement .)
    $end            reduce using rule 17 (statement -> ifStatement .)
    RBRACE          reduce using rule 17 (statement -> ifStatement .)


state 12

    (18) statement -> whileStatement .

    FUNC            reduce using rule 18 (statement -> whileStatement .)
    CLASS           reduce using rule 18 (statement -> whileStatement .)
    INT             reduce using rule 18 (statement -> whileStatement .)
    BOOL            reduce using rule 18 (statement -> whileStatement .)
    VOID            reduce using rule 18 (statement -> whileStatement .)
    ID              reduce using rule 18 (statement -> whileStatement .)
    IF              reduce using rule 18 (statement -> whileStatement .)
    WHILE           reduce using rule 18 (statement -> whileStatement .)
    PRINT           reduce using rule 18 (statement -> whileStatement .)
    RETURN          reduce using rule 18 (statement -> whileStatement .)
    NEW             reduce using rule 18 (statement -> whileStatement .)
    NUMBER          reduce using rule 18 (statement -> whileStatement .)
    TRUE            reduce using rule 18 (statement -> whileStatement .)
    FALSE           reduce using rule 18 (statement -> whileStatement .)
    NULL            reduce using rule 18 (statement -> whileStatement .)
    LPAREN          reduce using rule 18 (statement -> whileStatement .)
    NOT             reduce using rule 18 (statement -> whileStatement .)
    MINUS           reduce using rule 18 (statement -> whileStatement .)
    $end            reduce using rule 18 (statement -> whileStatement .)
    RBRACE          reduce using rule 18 (statement -> whileStatement .)


state 13

    (19) statement -> printStatement . SEMICOLON

    SEMICOLON       shift and go to state 46


state 14

    (20) statement -> returnStatement . SEMICOLON

    SEMICOLON       shift and go to state 47


state 15

    (71) funcDeclaration -> FUNC . ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE

    ID              shift and go to state 48


state 16

    (67) primary -> LPAREN . expression RPAREN
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 49
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 17

    (8) class -> CLASS . ID extends LBRACE classDeclarationList RBRACE

    ID              shift and go to state 51


state 18

    (29) type -> INT .

    ID              reduce using rule 29 (type -> INT .)
    LBRACE          reduce using rule 29 (type -> INT .)


state 19

    (30) type -> BOOL .

    ID              reduce using rule 30 (type -> BOOL .)
    LBRACE          reduce using rule 30 (type -> BOOL .)


state 20

    (31) type -> VOID .

    ID              reduce using rule 31 (type -> VOID .)
    LBRACE          reduce using rule 31 (type -> VOID .)


state 21

    (33) expression -> assignment .

    SEMICOLON       reduce using rule 33 (expression -> assignment .)
    RPAREN          reduce using rule 33 (expression -> assignment .)
    THEN            reduce using rule 33 (expression -> assignment .)
    COMMA           reduce using rule 33 (expression -> assignment .)


state 22

    (23) ifStatement -> IF . expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> IF . expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 52
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 23

    (25) whileStatement -> WHILE . expression THEN LBRACE declaration_list RBRACE
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 53
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 24

    (26) printStatement -> PRINT . expression
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 54
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 25

    (21) returnStatement -> RETURN . expression
    (22) returnStatement -> RETURN .
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    SEMICOLON       reduce using rule 22 (returnStatement -> RETURN .)
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 55
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 26

    (34) assignment -> property . ASSIGN logical
    (57) property -> property . DOT ID
    (58) property -> property . LPAREN arguments RPAREN
    (55) unary -> property .

    ASSIGN          shift and go to state 56
    DOT             shift and go to state 57
    LPAREN          shift and go to state 58
    TIMES           reduce using rule 55 (unary -> property .)
    DIVIDE          reduce using rule 55 (unary -> property .)
    PLUS            reduce using rule 55 (unary -> property .)
    MINUS           reduce using rule 55 (unary -> property .)
    GREATER         reduce using rule 55 (unary -> property .)
    LESS            reduce using rule 55 (unary -> property .)
    GREATEROREQUAL  reduce using rule 55 (unary -> property .)
    LESSOREQUAL     reduce using rule 55 (unary -> property .)
    EQUALS          reduce using rule 55 (unary -> property .)
    NOTEQUALS       reduce using rule 55 (unary -> property .)
    OR              reduce using rule 55 (unary -> property .)
    AND             reduce using rule 55 (unary -> property .)
    SEMICOLON       reduce using rule 55 (unary -> property .)
    RPAREN          reduce using rule 55 (unary -> property .)
    THEN            reduce using rule 55 (unary -> property .)
    COMMA           reduce using rule 55 (unary -> property .)


state 27

    (35) assignment -> logical .
    (36) logical -> logical . OR equality
    (37) logical -> logical . AND equality

    SEMICOLON       reduce using rule 35 (assignment -> logical .)
    RPAREN          reduce using rule 35 (assignment -> logical .)
    THEN            reduce using rule 35 (assignment -> logical .)
    COMMA           reduce using rule 35 (assignment -> logical .)
    OR              shift and go to state 59
    AND             shift and go to state 60


state 28

    (56) property -> NEW . primary LPAREN RPAREN
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    primary                        shift and go to state 61

state 29

    (60) call -> primary . LPAREN arguments RPAREN
    (61) call -> primary .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 62
    ASSIGN          reduce using rule 61 (call -> primary .)
    DOT             reduce using rule 61 (call -> primary .)
    TIMES           reduce using rule 61 (call -> primary .)
    DIVIDE          reduce using rule 61 (call -> primary .)
    PLUS            reduce using rule 61 (call -> primary .)
    MINUS           reduce using rule 61 (call -> primary .)
    GREATER         reduce using rule 61 (call -> primary .)
    LESS            reduce using rule 61 (call -> primary .)
    GREATEROREQUAL  reduce using rule 61 (call -> primary .)
    LESSOREQUAL     reduce using rule 61 (call -> primary .)
    EQUALS          reduce using rule 61 (call -> primary .)
    NOTEQUALS       reduce using rule 61 (call -> primary .)
    OR              reduce using rule 61 (call -> primary .)
    AND             reduce using rule 61 (call -> primary .)
    SEMICOLON       reduce using rule 61 (call -> primary .)
    RPAREN          reduce using rule 61 (call -> primary .)
    THEN            reduce using rule 61 (call -> primary .)
    COMMA           reduce using rule 61 (call -> primary .)

  ! LPAREN          [ reduce using rule 61 (call -> primary .) ]


state 30

    (59) property -> call .

    ASSIGN          reduce using rule 59 (property -> call .)
    DOT             reduce using rule 59 (property -> call .)
    LPAREN          reduce using rule 59 (property -> call .)
    TIMES           reduce using rule 59 (property -> call .)
    DIVIDE          reduce using rule 59 (property -> call .)
    PLUS            reduce using rule 59 (property -> call .)
    MINUS           reduce using rule 59 (property -> call .)
    GREATER         reduce using rule 59 (property -> call .)
    LESS            reduce using rule 59 (property -> call .)
    GREATEROREQUAL  reduce using rule 59 (property -> call .)
    LESSOREQUAL     reduce using rule 59 (property -> call .)
    EQUALS          reduce using rule 59 (property -> call .)
    NOTEQUALS       reduce using rule 59 (property -> call .)
    OR              reduce using rule 59 (property -> call .)
    AND             reduce using rule 59 (property -> call .)
    SEMICOLON       reduce using rule 59 (property -> call .)
    RPAREN          reduce using rule 59 (property -> call .)
    THEN            reduce using rule 59 (property -> call .)
    COMMA           reduce using rule 59 (property -> call .)


state 31

    (38) logical -> equality .
    (39) equality -> equality . EQUALS comparison
    (40) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 38 (logical -> equality .)
    AND             reduce using rule 38 (logical -> equality .)
    SEMICOLON       reduce using rule 38 (logical -> equality .)
    RPAREN          reduce using rule 38 (logical -> equality .)
    THEN            reduce using rule 38 (logical -> equality .)
    COMMA           reduce using rule 38 (logical -> equality .)
    EQUALS          shift and go to state 63
    NOTEQUALS       shift and go to state 64


state 32

    (41) equality -> comparison .
    (42) comparison -> comparison . GREATER term
    (43) comparison -> comparison . LESS term
    (44) comparison -> comparison . GREATEROREQUAL term
    (45) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 41 (equality -> comparison .)
    NOTEQUALS       reduce using rule 41 (equality -> comparison .)
    OR              reduce using rule 41 (equality -> comparison .)
    AND             reduce using rule 41 (equality -> comparison .)
    SEMICOLON       reduce using rule 41 (equality -> comparison .)
    RPAREN          reduce using rule 41 (equality -> comparison .)
    THEN            reduce using rule 41 (equality -> comparison .)
    COMMA           reduce using rule 41 (equality -> comparison .)
    GREATER         shift and go to state 65
    LESS            shift and go to state 66
    GREATEROREQUAL  shift and go to state 67
    LESSOREQUAL     shift and go to state 68


state 33

    (62) primary -> NUMBER .

    LPAREN          reduce using rule 62 (primary -> NUMBER .)
    ASSIGN          reduce using rule 62 (primary -> NUMBER .)
    DOT             reduce using rule 62 (primary -> NUMBER .)
    TIMES           reduce using rule 62 (primary -> NUMBER .)
    DIVIDE          reduce using rule 62 (primary -> NUMBER .)
    PLUS            reduce using rule 62 (primary -> NUMBER .)
    MINUS           reduce using rule 62 (primary -> NUMBER .)
    GREATER         reduce using rule 62 (primary -> NUMBER .)
    LESS            reduce using rule 62 (primary -> NUMBER .)
    GREATEROREQUAL  reduce using rule 62 (primary -> NUMBER .)
    LESSOREQUAL     reduce using rule 62 (primary -> NUMBER .)
    EQUALS          reduce using rule 62 (primary -> NUMBER .)
    NOTEQUALS       reduce using rule 62 (primary -> NUMBER .)
    OR              reduce using rule 62 (primary -> NUMBER .)
    AND             reduce using rule 62 (primary -> NUMBER .)
    SEMICOLON       reduce using rule 62 (primary -> NUMBER .)
    RPAREN          reduce using rule 62 (primary -> NUMBER .)
    THEN            reduce using rule 62 (primary -> NUMBER .)
    COMMA           reduce using rule 62 (primary -> NUMBER .)


state 34

    (64) primary -> TRUE .

    LPAREN          reduce using rule 64 (primary -> TRUE .)
    ASSIGN          reduce using rule 64 (primary -> TRUE .)
    DOT             reduce using rule 64 (primary -> TRUE .)
    TIMES           reduce using rule 64 (primary -> TRUE .)
    DIVIDE          reduce using rule 64 (primary -> TRUE .)
    PLUS            reduce using rule 64 (primary -> TRUE .)
    MINUS           reduce using rule 64 (primary -> TRUE .)
    GREATER         reduce using rule 64 (primary -> TRUE .)
    LESS            reduce using rule 64 (primary -> TRUE .)
    GREATEROREQUAL  reduce using rule 64 (primary -> TRUE .)
    LESSOREQUAL     reduce using rule 64 (primary -> TRUE .)
    EQUALS          reduce using rule 64 (primary -> TRUE .)
    NOTEQUALS       reduce using rule 64 (primary -> TRUE .)
    OR              reduce using rule 64 (primary -> TRUE .)
    AND             reduce using rule 64 (primary -> TRUE .)
    SEMICOLON       reduce using rule 64 (primary -> TRUE .)
    RPAREN          reduce using rule 64 (primary -> TRUE .)
    THEN            reduce using rule 64 (primary -> TRUE .)
    COMMA           reduce using rule 64 (primary -> TRUE .)


state 35

    (65) primary -> FALSE .

    LPAREN          reduce using rule 65 (primary -> FALSE .)
    ASSIGN          reduce using rule 65 (primary -> FALSE .)
    DOT             reduce using rule 65 (primary -> FALSE .)
    TIMES           reduce using rule 65 (primary -> FALSE .)
    DIVIDE          reduce using rule 65 (primary -> FALSE .)
    PLUS            reduce using rule 65 (primary -> FALSE .)
    MINUS           reduce using rule 65 (primary -> FALSE .)
    GREATER         reduce using rule 65 (primary -> FALSE .)
    LESS            reduce using rule 65 (primary -> FALSE .)
    GREATEROREQUAL  reduce using rule 65 (primary -> FALSE .)
    LESSOREQUAL     reduce using rule 65 (primary -> FALSE .)
    EQUALS          reduce using rule 65 (primary -> FALSE .)
    NOTEQUALS       reduce using rule 65 (primary -> FALSE .)
    OR              reduce using rule 65 (primary -> FALSE .)
    AND             reduce using rule 65 (primary -> FALSE .)
    SEMICOLON       reduce using rule 65 (primary -> FALSE .)
    RPAREN          reduce using rule 65 (primary -> FALSE .)
    THEN            reduce using rule 65 (primary -> FALSE .)
    COMMA           reduce using rule 65 (primary -> FALSE .)


state 36

    (66) primary -> NULL .

    LPAREN          reduce using rule 66 (primary -> NULL .)
    ASSIGN          reduce using rule 66 (primary -> NULL .)
    DOT             reduce using rule 66 (primary -> NULL .)
    TIMES           reduce using rule 66 (primary -> NULL .)
    DIVIDE          reduce using rule 66 (primary -> NULL .)
    PLUS            reduce using rule 66 (primary -> NULL .)
    MINUS           reduce using rule 66 (primary -> NULL .)
    GREATER         reduce using rule 66 (primary -> NULL .)
    LESS            reduce using rule 66 (primary -> NULL .)
    GREATEROREQUAL  reduce using rule 66 (primary -> NULL .)
    LESSOREQUAL     reduce using rule 66 (primary -> NULL .)
    EQUALS          reduce using rule 66 (primary -> NULL .)
    NOTEQUALS       reduce using rule 66 (primary -> NULL .)
    OR              reduce using rule 66 (primary -> NULL .)
    AND             reduce using rule 66 (primary -> NULL .)
    SEMICOLON       reduce using rule 66 (primary -> NULL .)
    RPAREN          reduce using rule 66 (primary -> NULL .)
    THEN            reduce using rule 66 (primary -> NULL .)
    COMMA           reduce using rule 66 (primary -> NULL .)


state 37

    (46) comparison -> term .
    (47) term -> term . PLUS factor
    (48) term -> term . MINUS factor

    GREATER         reduce using rule 46 (comparison -> term .)
    LESS            reduce using rule 46 (comparison -> term .)
    GREATEROREQUAL  reduce using rule 46 (comparison -> term .)
    LESSOREQUAL     reduce using rule 46 (comparison -> term .)
    EQUALS          reduce using rule 46 (comparison -> term .)
    NOTEQUALS       reduce using rule 46 (comparison -> term .)
    OR              reduce using rule 46 (comparison -> term .)
    AND             reduce using rule 46 (comparison -> term .)
    SEMICOLON       reduce using rule 46 (comparison -> term .)
    RPAREN          reduce using rule 46 (comparison -> term .)
    THEN            reduce using rule 46 (comparison -> term .)
    COMMA           reduce using rule 46 (comparison -> term .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70


state 38

    (49) term -> factor .
    (50) factor -> factor . TIMES unary
    (51) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 49 (term -> factor .)
    MINUS           reduce using rule 49 (term -> factor .)
    GREATER         reduce using rule 49 (term -> factor .)
    LESS            reduce using rule 49 (term -> factor .)
    GREATEROREQUAL  reduce using rule 49 (term -> factor .)
    LESSOREQUAL     reduce using rule 49 (term -> factor .)
    EQUALS          reduce using rule 49 (term -> factor .)
    NOTEQUALS       reduce using rule 49 (term -> factor .)
    OR              reduce using rule 49 (term -> factor .)
    AND             reduce using rule 49 (term -> factor .)
    SEMICOLON       reduce using rule 49 (term -> factor .)
    RPAREN          reduce using rule 49 (term -> factor .)
    THEN            reduce using rule 49 (term -> factor .)
    COMMA           reduce using rule 49 (term -> factor .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72


state 39

    (54) unary -> MINUS . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    unary                          shift and go to state 73
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 40

    (52) factor -> unary .

    TIMES           reduce using rule 52 (factor -> unary .)
    DIVIDE          reduce using rule 52 (factor -> unary .)
    PLUS            reduce using rule 52 (factor -> unary .)
    MINUS           reduce using rule 52 (factor -> unary .)
    GREATER         reduce using rule 52 (factor -> unary .)
    LESS            reduce using rule 52 (factor -> unary .)
    GREATEROREQUAL  reduce using rule 52 (factor -> unary .)
    LESSOREQUAL     reduce using rule 52 (factor -> unary .)
    EQUALS          reduce using rule 52 (factor -> unary .)
    NOTEQUALS       reduce using rule 52 (factor -> unary .)
    OR              reduce using rule 52 (factor -> unary .)
    AND             reduce using rule 52 (factor -> unary .)
    SEMICOLON       reduce using rule 52 (factor -> unary .)
    RPAREN          reduce using rule 52 (factor -> unary .)
    THEN            reduce using rule 52 (factor -> unary .)
    COMMA           reduce using rule 52 (factor -> unary .)


state 41

    (53) unary -> NOT . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    unary                          shift and go to state 75
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 42

    (3) declaration_list -> declaration_list declaration .

    FUNC            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    CLASS           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    BOOL            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 3 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 3 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    PRINT           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    RETURN          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NEW             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NUMBER          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    TRUE            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    FALSE           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NULL            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 3 (declaration_list -> declaration_list declaration .)
    NOT             reduce using rule 3 (declaration_list -> declaration_list declaration .)
    MINUS           reduce using rule 3 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration_list declaration .)
    RBRACE          reduce using rule 3 (declaration_list -> declaration_list declaration .)


state 43

    (4) declaration -> varDeclaration SEMICOLON .

    FUNC            reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    CLASS           reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    INT             reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    BOOL            reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    VOID            reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    ID              reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    IF              reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    WHILE           reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    PRINT           reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    RETURN          reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    NEW             reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    NUMBER          reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    TRUE            reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    FALSE           reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    NULL            reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    LPAREN          reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    NOT             reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    MINUS           reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    $end            reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)
    RBRACE          reduce using rule 4 (declaration -> varDeclaration SEMICOLON .)


state 44

    (27) varDeclaration -> type ID .
    (28) varDeclaration -> type ID . ASSIGN expression

    SEMICOLON       reduce using rule 27 (varDeclaration -> type ID .)
    ASSIGN          shift and go to state 76


state 45

    (16) statement -> expression SEMICOLON .

    FUNC            reduce using rule 16 (statement -> expression SEMICOLON .)
    CLASS           reduce using rule 16 (statement -> expression SEMICOLON .)
    INT             reduce using rule 16 (statement -> expression SEMICOLON .)
    BOOL            reduce using rule 16 (statement -> expression SEMICOLON .)
    VOID            reduce using rule 16 (statement -> expression SEMICOLON .)
    ID              reduce using rule 16 (statement -> expression SEMICOLON .)
    IF              reduce using rule 16 (statement -> expression SEMICOLON .)
    WHILE           reduce using rule 16 (statement -> expression SEMICOLON .)
    PRINT           reduce using rule 16 (statement -> expression SEMICOLON .)
    RETURN          reduce using rule 16 (statement -> expression SEMICOLON .)
    NEW             reduce using rule 16 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 16 (statement -> expression SEMICOLON .)
    TRUE            reduce using rule 16 (statement -> expression SEMICOLON .)
    FALSE           reduce using rule 16 (statement -> expression SEMICOLON .)
    NULL            reduce using rule 16 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 16 (statement -> expression SEMICOLON .)
    NOT             reduce using rule 16 (statement -> expression SEMICOLON .)
    MINUS           reduce using rule 16 (statement -> expression SEMICOLON .)
    $end            reduce using rule 16 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 16 (statement -> expression SEMICOLON .)


state 46

    (19) statement -> printStatement SEMICOLON .

    FUNC            reduce using rule 19 (statement -> printStatement SEMICOLON .)
    CLASS           reduce using rule 19 (statement -> printStatement SEMICOLON .)
    INT             reduce using rule 19 (statement -> printStatement SEMICOLON .)
    BOOL            reduce using rule 19 (statement -> printStatement SEMICOLON .)
    VOID            reduce using rule 19 (statement -> printStatement SEMICOLON .)
    ID              reduce using rule 19 (statement -> printStatement SEMICOLON .)
    IF              reduce using rule 19 (statement -> printStatement SEMICOLON .)
    WHILE           reduce using rule 19 (statement -> printStatement SEMICOLON .)
    PRINT           reduce using rule 19 (statement -> printStatement SEMICOLON .)
    RETURN          reduce using rule 19 (statement -> printStatement SEMICOLON .)
    NEW             reduce using rule 19 (statement -> printStatement SEMICOLON .)
    NUMBER          reduce using rule 19 (statement -> printStatement SEMICOLON .)
    TRUE            reduce using rule 19 (statement -> printStatement SEMICOLON .)
    FALSE           reduce using rule 19 (statement -> printStatement SEMICOLON .)
    NULL            reduce using rule 19 (statement -> printStatement SEMICOLON .)
    LPAREN          reduce using rule 19 (statement -> printStatement SEMICOLON .)
    NOT             reduce using rule 19 (statement -> printStatement SEMICOLON .)
    MINUS           reduce using rule 19 (statement -> printStatement SEMICOLON .)
    $end            reduce using rule 19 (statement -> printStatement SEMICOLON .)
    RBRACE          reduce using rule 19 (statement -> printStatement SEMICOLON .)


state 47

    (20) statement -> returnStatement SEMICOLON .

    FUNC            reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    CLASS           reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    INT             reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    BOOL            reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    VOID            reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    ID              reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    IF              reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    WHILE           reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    PRINT           reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    RETURN          reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    NEW             reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    NUMBER          reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    TRUE            reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    FALSE           reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    NULL            reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    LPAREN          reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    NOT             reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    MINUS           reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    $end            reduce using rule 20 (statement -> returnStatement SEMICOLON .)
    RBRACE          reduce using rule 20 (statement -> returnStatement SEMICOLON .)


state 48

    (71) funcDeclaration -> FUNC ID . LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE

    LPAREN          shift and go to state 77


state 49

    (67) primary -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 78


state 50

    (63) primary -> ID .

    LPAREN          reduce using rule 63 (primary -> ID .)
    ASSIGN          reduce using rule 63 (primary -> ID .)
    DOT             reduce using rule 63 (primary -> ID .)
    TIMES           reduce using rule 63 (primary -> ID .)
    DIVIDE          reduce using rule 63 (primary -> ID .)
    PLUS            reduce using rule 63 (primary -> ID .)
    MINUS           reduce using rule 63 (primary -> ID .)
    GREATER         reduce using rule 63 (primary -> ID .)
    LESS            reduce using rule 63 (primary -> ID .)
    GREATEROREQUAL  reduce using rule 63 (primary -> ID .)
    LESSOREQUAL     reduce using rule 63 (primary -> ID .)
    EQUALS          reduce using rule 63 (primary -> ID .)
    NOTEQUALS       reduce using rule 63 (primary -> ID .)
    OR              reduce using rule 63 (primary -> ID .)
    AND             reduce using rule 63 (primary -> ID .)
    RPAREN          reduce using rule 63 (primary -> ID .)
    THEN            reduce using rule 63 (primary -> ID .)
    SEMICOLON       reduce using rule 63 (primary -> ID .)
    COMMA           reduce using rule 63 (primary -> ID .)


state 51

    (8) class -> CLASS ID . extends LBRACE classDeclarationList RBRACE
    (9) extends -> . EXTENDS ID
    (10) extends -> . empty
    (75) empty -> .

    EXTENDS         shift and go to state 80
    LBRACE          reduce using rule 75 (empty -> .)

    extends                        shift and go to state 79
    empty                          shift and go to state 81

state 52

    (23) ifStatement -> IF expression . THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> IF expression . THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE

    THEN            shift and go to state 82


state 53

    (25) whileStatement -> WHILE expression . THEN LBRACE declaration_list RBRACE

    THEN            shift and go to state 83


state 54

    (26) printStatement -> PRINT expression .

    SEMICOLON       reduce using rule 26 (printStatement -> PRINT expression .)


state 55

    (21) returnStatement -> RETURN expression .

    SEMICOLON       reduce using rule 21 (returnStatement -> RETURN expression .)


state 56

    (34) assignment -> property ASSIGN . logical
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    property                       shift and go to state 74
    logical                        shift and go to state 84
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 57

    (57) property -> property DOT . ID

    ID              shift and go to state 85


state 58

    (58) property -> property LPAREN . arguments RPAREN
    (68) arguments -> . arguments COMMA expression
    (69) arguments -> . expression
    (70) arguments -> .
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RPAREN          reduce using rule 70 (arguments -> .)
    COMMA           reduce using rule 70 (arguments -> .)
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    property                       shift and go to state 26
    arguments                      shift and go to state 86
    expression                     shift and go to state 87
    assignment                     shift and go to state 21
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 59

    (36) logical -> logical OR . equality
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    equality                       shift and go to state 88
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 60

    (37) logical -> logical AND . equality
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    equality                       shift and go to state 89
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 61

    (56) property -> NEW primary . LPAREN RPAREN

    LPAREN          shift and go to state 90


state 62

    (60) call -> primary LPAREN . arguments RPAREN
    (68) arguments -> . arguments COMMA expression
    (69) arguments -> . expression
    (70) arguments -> .
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RPAREN          reduce using rule 70 (arguments -> .)
    COMMA           reduce using rule 70 (arguments -> .)
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    primary                        shift and go to state 29
    arguments                      shift and go to state 91
    expression                     shift and go to state 87
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 63

    (39) equality -> equality EQUALS . comparison
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 92
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 64

    (40) equality -> equality NOTEQUALS . comparison
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 93
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 65

    (42) comparison -> comparison GREATER . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    term                           shift and go to state 94
    factor                         shift and go to state 38
    unary                          shift and go to state 40
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 66

    (43) comparison -> comparison LESS . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    term                           shift and go to state 95
    factor                         shift and go to state 38
    unary                          shift and go to state 40
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 67

    (44) comparison -> comparison GREATEROREQUAL . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    term                           shift and go to state 96
    factor                         shift and go to state 38
    unary                          shift and go to state 40
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 68

    (45) comparison -> comparison LESSOREQUAL . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    term                           shift and go to state 97
    factor                         shift and go to state 38
    unary                          shift and go to state 40
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 69

    (47) term -> term PLUS . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    factor                         shift and go to state 98
    unary                          shift and go to state 40
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 70

    (48) term -> term MINUS . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    factor                         shift and go to state 99
    unary                          shift and go to state 40
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 71

    (50) factor -> factor TIMES . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    unary                          shift and go to state 100
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 72

    (51) factor -> factor DIVIDE . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN

    NOT             shift and go to state 41
    MINUS           shift and go to state 39
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16

    unary                          shift and go to state 101
    property                       shift and go to state 74
    primary                        shift and go to state 29
    call                           shift and go to state 30

state 73

    (54) unary -> MINUS unary .

    TIMES           reduce using rule 54 (unary -> MINUS unary .)
    DIVIDE          reduce using rule 54 (unary -> MINUS unary .)
    PLUS            reduce using rule 54 (unary -> MINUS unary .)
    MINUS           reduce using rule 54 (unary -> MINUS unary .)
    GREATER         reduce using rule 54 (unary -> MINUS unary .)
    LESS            reduce using rule 54 (unary -> MINUS unary .)
    GREATEROREQUAL  reduce using rule 54 (unary -> MINUS unary .)
    LESSOREQUAL     reduce using rule 54 (unary -> MINUS unary .)
    EQUALS          reduce using rule 54 (unary -> MINUS unary .)
    NOTEQUALS       reduce using rule 54 (unary -> MINUS unary .)
    OR              reduce using rule 54 (unary -> MINUS unary .)
    AND             reduce using rule 54 (unary -> MINUS unary .)
    SEMICOLON       reduce using rule 54 (unary -> MINUS unary .)
    RPAREN          reduce using rule 54 (unary -> MINUS unary .)
    THEN            reduce using rule 54 (unary -> MINUS unary .)
    COMMA           reduce using rule 54 (unary -> MINUS unary .)


state 74

    (55) unary -> property .
    (57) property -> property . DOT ID
    (58) property -> property . LPAREN arguments RPAREN

    TIMES           reduce using rule 55 (unary -> property .)
    DIVIDE          reduce using rule 55 (unary -> property .)
    PLUS            reduce using rule 55 (unary -> property .)
    MINUS           reduce using rule 55 (unary -> property .)
    GREATER         reduce using rule 55 (unary -> property .)
    LESS            reduce using rule 55 (unary -> property .)
    GREATEROREQUAL  reduce using rule 55 (unary -> property .)
    LESSOREQUAL     reduce using rule 55 (unary -> property .)
    EQUALS          reduce using rule 55 (unary -> property .)
    NOTEQUALS       reduce using rule 55 (unary -> property .)
    OR              reduce using rule 55 (unary -> property .)
    AND             reduce using rule 55 (unary -> property .)
    SEMICOLON       reduce using rule 55 (unary -> property .)
    RPAREN          reduce using rule 55 (unary -> property .)
    THEN            reduce using rule 55 (unary -> property .)
    COMMA           reduce using rule 55 (unary -> property .)
    DOT             shift and go to state 57
    LPAREN          shift and go to state 58


state 75

    (53) unary -> NOT unary .

    TIMES           reduce using rule 53 (unary -> NOT unary .)
    DIVIDE          reduce using rule 53 (unary -> NOT unary .)
    PLUS            reduce using rule 53 (unary -> NOT unary .)
    MINUS           reduce using rule 53 (unary -> NOT unary .)
    GREATER         reduce using rule 53 (unary -> NOT unary .)
    LESS            reduce using rule 53 (unary -> NOT unary .)
    GREATEROREQUAL  reduce using rule 53 (unary -> NOT unary .)
    LESSOREQUAL     reduce using rule 53 (unary -> NOT unary .)
    EQUALS          reduce using rule 53 (unary -> NOT unary .)
    NOTEQUALS       reduce using rule 53 (unary -> NOT unary .)
    OR              reduce using rule 53 (unary -> NOT unary .)
    AND             reduce using rule 53 (unary -> NOT unary .)
    SEMICOLON       reduce using rule 53 (unary -> NOT unary .)
    RPAREN          reduce using rule 53 (unary -> NOT unary .)
    THEN            reduce using rule 53 (unary -> NOT unary .)
    COMMA           reduce using rule 53 (unary -> NOT unary .)


state 76

    (28) varDeclaration -> type ID ASSIGN . expression
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 102
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 77

    (71) funcDeclaration -> FUNC ID LPAREN . parameter_list RPAREN type LBRACE declaration_list RBRACE
    (72) parameter_list -> . parameter_list COMMA type ID
    (73) parameter_list -> . type ID
    (74) parameter_list -> .
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    RPAREN          reduce using rule 74 (parameter_list -> .)
    COMMA           reduce using rule 74 (parameter_list -> .)
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 103

    parameter_list                 shift and go to state 104
    type                           shift and go to state 105

state 78

    (67) primary -> LPAREN expression RPAREN .

    LPAREN          reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    ASSIGN          reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    DOT             reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    LESS            reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    GREATEROREQUAL  reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    LESSOREQUAL     reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    NOTEQUALS       reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    OR              reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    AND             reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    THEN            reduce using rule 67 (primary -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 67 (primary -> LPAREN expression RPAREN .)


state 79

    (8) class -> CLASS ID extends . LBRACE classDeclarationList RBRACE

    LBRACE          shift and go to state 106


state 80

    (9) extends -> EXTENDS . ID

    ID              shift and go to state 107


state 81

    (10) extends -> empty .

    LBRACE          reduce using rule 10 (extends -> empty .)


state 82

    (23) ifStatement -> IF expression THEN . LBRACE declaration_list RBRACE
    (24) ifStatement -> IF expression THEN . LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 108


state 83

    (25) whileStatement -> WHILE expression THEN . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 109


state 84

    (34) assignment -> property ASSIGN logical .
    (36) logical -> logical . OR equality
    (37) logical -> logical . AND equality

    SEMICOLON       reduce using rule 34 (assignment -> property ASSIGN logical .)
    RPAREN          reduce using rule 34 (assignment -> property ASSIGN logical .)
    THEN            reduce using rule 34 (assignment -> property ASSIGN logical .)
    COMMA           reduce using rule 34 (assignment -> property ASSIGN logical .)
    OR              shift and go to state 59
    AND             shift and go to state 60


state 85

    (57) property -> property DOT ID .

    ASSIGN          reduce using rule 57 (property -> property DOT ID .)
    DOT             reduce using rule 57 (property -> property DOT ID .)
    LPAREN          reduce using rule 57 (property -> property DOT ID .)
    TIMES           reduce using rule 57 (property -> property DOT ID .)
    DIVIDE          reduce using rule 57 (property -> property DOT ID .)
    PLUS            reduce using rule 57 (property -> property DOT ID .)
    MINUS           reduce using rule 57 (property -> property DOT ID .)
    GREATER         reduce using rule 57 (property -> property DOT ID .)
    LESS            reduce using rule 57 (property -> property DOT ID .)
    GREATEROREQUAL  reduce using rule 57 (property -> property DOT ID .)
    LESSOREQUAL     reduce using rule 57 (property -> property DOT ID .)
    EQUALS          reduce using rule 57 (property -> property DOT ID .)
    NOTEQUALS       reduce using rule 57 (property -> property DOT ID .)
    OR              reduce using rule 57 (property -> property DOT ID .)
    AND             reduce using rule 57 (property -> property DOT ID .)
    SEMICOLON       reduce using rule 57 (property -> property DOT ID .)
    RPAREN          reduce using rule 57 (property -> property DOT ID .)
    THEN            reduce using rule 57 (property -> property DOT ID .)
    COMMA           reduce using rule 57 (property -> property DOT ID .)


state 86

    (58) property -> property LPAREN arguments . RPAREN
    (68) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 110
    COMMA           shift and go to state 111


state 87

    (69) arguments -> expression .

    RPAREN          reduce using rule 69 (arguments -> expression .)
    COMMA           reduce using rule 69 (arguments -> expression .)


state 88

    (36) logical -> logical OR equality .
    (39) equality -> equality . EQUALS comparison
    (40) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 36 (logical -> logical OR equality .)
    AND             reduce using rule 36 (logical -> logical OR equality .)
    SEMICOLON       reduce using rule 36 (logical -> logical OR equality .)
    RPAREN          reduce using rule 36 (logical -> logical OR equality .)
    THEN            reduce using rule 36 (logical -> logical OR equality .)
    COMMA           reduce using rule 36 (logical -> logical OR equality .)
    EQUALS          shift and go to state 63
    NOTEQUALS       shift and go to state 64


state 89

    (37) logical -> logical AND equality .
    (39) equality -> equality . EQUALS comparison
    (40) equality -> equality . NOTEQUALS comparison

    OR              reduce using rule 37 (logical -> logical AND equality .)
    AND             reduce using rule 37 (logical -> logical AND equality .)
    SEMICOLON       reduce using rule 37 (logical -> logical AND equality .)
    RPAREN          reduce using rule 37 (logical -> logical AND equality .)
    THEN            reduce using rule 37 (logical -> logical AND equality .)
    COMMA           reduce using rule 37 (logical -> logical AND equality .)
    EQUALS          shift and go to state 63
    NOTEQUALS       shift and go to state 64


state 90

    (56) property -> NEW primary LPAREN . RPAREN

    RPAREN          shift and go to state 112


state 91

    (60) call -> primary LPAREN arguments . RPAREN
    (68) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 113
    COMMA           shift and go to state 111


state 92

    (39) equality -> equality EQUALS comparison .
    (42) comparison -> comparison . GREATER term
    (43) comparison -> comparison . LESS term
    (44) comparison -> comparison . GREATEROREQUAL term
    (45) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 39 (equality -> equality EQUALS comparison .)
    NOTEQUALS       reduce using rule 39 (equality -> equality EQUALS comparison .)
    OR              reduce using rule 39 (equality -> equality EQUALS comparison .)
    AND             reduce using rule 39 (equality -> equality EQUALS comparison .)
    SEMICOLON       reduce using rule 39 (equality -> equality EQUALS comparison .)
    RPAREN          reduce using rule 39 (equality -> equality EQUALS comparison .)
    THEN            reduce using rule 39 (equality -> equality EQUALS comparison .)
    COMMA           reduce using rule 39 (equality -> equality EQUALS comparison .)
    GREATER         shift and go to state 65
    LESS            shift and go to state 66
    GREATEROREQUAL  shift and go to state 67
    LESSOREQUAL     shift and go to state 68


state 93

    (40) equality -> equality NOTEQUALS comparison .
    (42) comparison -> comparison . GREATER term
    (43) comparison -> comparison . LESS term
    (44) comparison -> comparison . GREATEROREQUAL term
    (45) comparison -> comparison . LESSOREQUAL term

    EQUALS          reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    NOTEQUALS       reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    OR              reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    AND             reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    SEMICOLON       reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    RPAREN          reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    THEN            reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    COMMA           reduce using rule 40 (equality -> equality NOTEQUALS comparison .)
    GREATER         shift and go to state 65
    LESS            shift and go to state 66
    GREATEROREQUAL  shift and go to state 67
    LESSOREQUAL     shift and go to state 68


state 94

    (42) comparison -> comparison GREATER term .
    (47) term -> term . PLUS factor
    (48) term -> term . MINUS factor

    GREATER         reduce using rule 42 (comparison -> comparison GREATER term .)
    LESS            reduce using rule 42 (comparison -> comparison GREATER term .)
    GREATEROREQUAL  reduce using rule 42 (comparison -> comparison GREATER term .)
    LESSOREQUAL     reduce using rule 42 (comparison -> comparison GREATER term .)
    EQUALS          reduce using rule 42 (comparison -> comparison GREATER term .)
    NOTEQUALS       reduce using rule 42 (comparison -> comparison GREATER term .)
    OR              reduce using rule 42 (comparison -> comparison GREATER term .)
    AND             reduce using rule 42 (comparison -> comparison GREATER term .)
    SEMICOLON       reduce using rule 42 (comparison -> comparison GREATER term .)
    RPAREN          reduce using rule 42 (comparison -> comparison GREATER term .)
    THEN            reduce using rule 42 (comparison -> comparison GREATER term .)
    COMMA           reduce using rule 42 (comparison -> comparison GREATER term .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70


state 95

    (43) comparison -> comparison LESS term .
    (47) term -> term . PLUS factor
    (48) term -> term . MINUS factor

    GREATER         reduce using rule 43 (comparison -> comparison LESS term .)
    LESS            reduce using rule 43 (comparison -> comparison LESS term .)
    GREATEROREQUAL  reduce using rule 43 (comparison -> comparison LESS term .)
    LESSOREQUAL     reduce using rule 43 (comparison -> comparison LESS term .)
    EQUALS          reduce using rule 43 (comparison -> comparison LESS term .)
    NOTEQUALS       reduce using rule 43 (comparison -> comparison LESS term .)
    OR              reduce using rule 43 (comparison -> comparison LESS term .)
    AND             reduce using rule 43 (comparison -> comparison LESS term .)
    SEMICOLON       reduce using rule 43 (comparison -> comparison LESS term .)
    RPAREN          reduce using rule 43 (comparison -> comparison LESS term .)
    THEN            reduce using rule 43 (comparison -> comparison LESS term .)
    COMMA           reduce using rule 43 (comparison -> comparison LESS term .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70


state 96

    (44) comparison -> comparison GREATEROREQUAL term .
    (47) term -> term . PLUS factor
    (48) term -> term . MINUS factor

    GREATER         reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    LESS            reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    GREATEROREQUAL  reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    LESSOREQUAL     reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    EQUALS          reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    NOTEQUALS       reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    OR              reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    AND             reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    SEMICOLON       reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    RPAREN          reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    THEN            reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    COMMA           reduce using rule 44 (comparison -> comparison GREATEROREQUAL term .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70


state 97

    (45) comparison -> comparison LESSOREQUAL term .
    (47) term -> term . PLUS factor
    (48) term -> term . MINUS factor

    GREATER         reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    LESS            reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    GREATEROREQUAL  reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    LESSOREQUAL     reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    EQUALS          reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    NOTEQUALS       reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    OR              reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    AND             reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    SEMICOLON       reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    RPAREN          reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    THEN            reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    COMMA           reduce using rule 45 (comparison -> comparison LESSOREQUAL term .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70


state 98

    (47) term -> term PLUS factor .
    (50) factor -> factor . TIMES unary
    (51) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 47 (term -> term PLUS factor .)
    MINUS           reduce using rule 47 (term -> term PLUS factor .)
    GREATER         reduce using rule 47 (term -> term PLUS factor .)
    LESS            reduce using rule 47 (term -> term PLUS factor .)
    GREATEROREQUAL  reduce using rule 47 (term -> term PLUS factor .)
    LESSOREQUAL     reduce using rule 47 (term -> term PLUS factor .)
    EQUALS          reduce using rule 47 (term -> term PLUS factor .)
    NOTEQUALS       reduce using rule 47 (term -> term PLUS factor .)
    OR              reduce using rule 47 (term -> term PLUS factor .)
    AND             reduce using rule 47 (term -> term PLUS factor .)
    SEMICOLON       reduce using rule 47 (term -> term PLUS factor .)
    RPAREN          reduce using rule 47 (term -> term PLUS factor .)
    THEN            reduce using rule 47 (term -> term PLUS factor .)
    COMMA           reduce using rule 47 (term -> term PLUS factor .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72


state 99

    (48) term -> term MINUS factor .
    (50) factor -> factor . TIMES unary
    (51) factor -> factor . DIVIDE unary

    PLUS            reduce using rule 48 (term -> term MINUS factor .)
    MINUS           reduce using rule 48 (term -> term MINUS factor .)
    GREATER         reduce using rule 48 (term -> term MINUS factor .)
    LESS            reduce using rule 48 (term -> term MINUS factor .)
    GREATEROREQUAL  reduce using rule 48 (term -> term MINUS factor .)
    LESSOREQUAL     reduce using rule 48 (term -> term MINUS factor .)
    EQUALS          reduce using rule 48 (term -> term MINUS factor .)
    NOTEQUALS       reduce using rule 48 (term -> term MINUS factor .)
    OR              reduce using rule 48 (term -> term MINUS factor .)
    AND             reduce using rule 48 (term -> term MINUS factor .)
    SEMICOLON       reduce using rule 48 (term -> term MINUS factor .)
    RPAREN          reduce using rule 48 (term -> term MINUS factor .)
    THEN            reduce using rule 48 (term -> term MINUS factor .)
    COMMA           reduce using rule 48 (term -> term MINUS factor .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72


state 100

    (50) factor -> factor TIMES unary .

    TIMES           reduce using rule 50 (factor -> factor TIMES unary .)
    DIVIDE          reduce using rule 50 (factor -> factor TIMES unary .)
    PLUS            reduce using rule 50 (factor -> factor TIMES unary .)
    MINUS           reduce using rule 50 (factor -> factor TIMES unary .)
    GREATER         reduce using rule 50 (factor -> factor TIMES unary .)
    LESS            reduce using rule 50 (factor -> factor TIMES unary .)
    GREATEROREQUAL  reduce using rule 50 (factor -> factor TIMES unary .)
    LESSOREQUAL     reduce using rule 50 (factor -> factor TIMES unary .)
    EQUALS          reduce using rule 50 (factor -> factor TIMES unary .)
    NOTEQUALS       reduce using rule 50 (factor -> factor TIMES unary .)
    OR              reduce using rule 50 (factor -> factor TIMES unary .)
    AND             reduce using rule 50 (factor -> factor TIMES unary .)
    SEMICOLON       reduce using rule 50 (factor -> factor TIMES unary .)
    RPAREN          reduce using rule 50 (factor -> factor TIMES unary .)
    THEN            reduce using rule 50 (factor -> factor TIMES unary .)
    COMMA           reduce using rule 50 (factor -> factor TIMES unary .)


state 101

    (51) factor -> factor DIVIDE unary .

    TIMES           reduce using rule 51 (factor -> factor DIVIDE unary .)
    DIVIDE          reduce using rule 51 (factor -> factor DIVIDE unary .)
    PLUS            reduce using rule 51 (factor -> factor DIVIDE unary .)
    MINUS           reduce using rule 51 (factor -> factor DIVIDE unary .)
    GREATER         reduce using rule 51 (factor -> factor DIVIDE unary .)
    LESS            reduce using rule 51 (factor -> factor DIVIDE unary .)
    GREATEROREQUAL  reduce using rule 51 (factor -> factor DIVIDE unary .)
    LESSOREQUAL     reduce using rule 51 (factor -> factor DIVIDE unary .)
    EQUALS          reduce using rule 51 (factor -> factor DIVIDE unary .)
    NOTEQUALS       reduce using rule 51 (factor -> factor DIVIDE unary .)
    OR              reduce using rule 51 (factor -> factor DIVIDE unary .)
    AND             reduce using rule 51 (factor -> factor DIVIDE unary .)
    SEMICOLON       reduce using rule 51 (factor -> factor DIVIDE unary .)
    RPAREN          reduce using rule 51 (factor -> factor DIVIDE unary .)
    THEN            reduce using rule 51 (factor -> factor DIVIDE unary .)
    COMMA           reduce using rule 51 (factor -> factor DIVIDE unary .)


state 102

    (28) varDeclaration -> type ID ASSIGN expression .

    SEMICOLON       reduce using rule 28 (varDeclaration -> type ID ASSIGN expression .)


state 103

    (32) type -> ID .

    ID              reduce using rule 32 (type -> ID .)
    LBRACE          reduce using rule 32 (type -> ID .)


state 104

    (71) funcDeclaration -> FUNC ID LPAREN parameter_list . RPAREN type LBRACE declaration_list RBRACE
    (72) parameter_list -> parameter_list . COMMA type ID

    RPAREN          shift and go to state 114
    COMMA           shift and go to state 115


state 105

    (73) parameter_list -> type . ID

    ID              shift and go to state 116


state 106

    (8) class -> CLASS ID extends LBRACE . classDeclarationList RBRACE
    (11) classDeclarationList -> . classDeclarationList classDeclaration
    (12) classDeclarationList -> . classDeclaration
    (13) classDeclaration -> . varDeclaration SEMICOLON
    (14) classDeclaration -> . methodDeclaration
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (15) methodDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    FUNC            shift and go to state 121
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 103

    classDeclarationList           shift and go to state 117
    classDeclaration               shift and go to state 118
    varDeclaration                 shift and go to state 119
    methodDeclaration              shift and go to state 120
    type                           shift and go to state 8

state 107

    (9) extends -> EXTENDS ID .

    LBRACE          reduce using rule 9 (extends -> EXTENDS ID .)


state 108

    (23) ifStatement -> IF expression THEN LBRACE . declaration_list RBRACE
    (24) ifStatement -> IF expression THEN LBRACE . declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 10
    declaration_list               shift and go to state 122
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 109

    (25) whileStatement -> WHILE expression THEN LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 10
    declaration_list               shift and go to state 123
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 110

    (58) property -> property LPAREN arguments RPAREN .

    ASSIGN          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    DOT             reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    TIMES           reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    PLUS            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    MINUS           reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    GREATER         reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    LESS            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    GREATEROREQUAL  reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    LESSOREQUAL     reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    EQUALS          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    NOTEQUALS       reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    OR              reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    AND             reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    SEMICOLON       reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    THEN            reduce using rule 58 (property -> property LPAREN arguments RPAREN .)
    COMMA           reduce using rule 58 (property -> property LPAREN arguments RPAREN .)


state 111

    (68) arguments -> arguments COMMA . expression
    (33) expression -> . assignment
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    ID              shift and go to state 50
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 124
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 112

    (56) property -> NEW primary LPAREN RPAREN .

    ASSIGN          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    DOT             reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    LPAREN          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    TIMES           reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    DIVIDE          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    PLUS            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    MINUS           reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    GREATER         reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    LESS            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    GREATEROREQUAL  reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    LESSOREQUAL     reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    EQUALS          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    NOTEQUALS       reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    OR              reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    AND             reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    SEMICOLON       reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    RPAREN          reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    THEN            reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)
    COMMA           reduce using rule 56 (property -> NEW primary LPAREN RPAREN .)


state 113

    (60) call -> primary LPAREN arguments RPAREN .

    ASSIGN          reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    DOT             reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    TIMES           reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    PLUS            reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    MINUS           reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    GREATER         reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    LESS            reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    GREATEROREQUAL  reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    LESSOREQUAL     reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    EQUALS          reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    NOTEQUALS       reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    OR              reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    AND             reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    SEMICOLON       reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    THEN            reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)
    COMMA           reduce using rule 60 (call -> primary LPAREN arguments RPAREN .)


state 114

    (71) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN . type LBRACE declaration_list RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 103

    type                           shift and go to state 125

state 115

    (72) parameter_list -> parameter_list COMMA . type ID
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 103

    type                           shift and go to state 126

state 116

    (73) parameter_list -> type ID .

    RPAREN          reduce using rule 73 (parameter_list -> type ID .)
    COMMA           reduce using rule 73 (parameter_list -> type ID .)


state 117

    (8) class -> CLASS ID extends LBRACE classDeclarationList . RBRACE
    (11) classDeclarationList -> classDeclarationList . classDeclaration
    (13) classDeclaration -> . varDeclaration SEMICOLON
    (14) classDeclaration -> . methodDeclaration
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (15) methodDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    RBRACE          shift and go to state 127
    FUNC            shift and go to state 121
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 103

    classDeclaration               shift and go to state 128
    varDeclaration                 shift and go to state 119
    methodDeclaration              shift and go to state 120
    type                           shift and go to state 8

state 118

    (12) classDeclarationList -> classDeclaration .

    RBRACE          reduce using rule 12 (classDeclarationList -> classDeclaration .)
    FUNC            reduce using rule 12 (classDeclarationList -> classDeclaration .)
    INT             reduce using rule 12 (classDeclarationList -> classDeclaration .)
    BOOL            reduce using rule 12 (classDeclarationList -> classDeclaration .)
    VOID            reduce using rule 12 (classDeclarationList -> classDeclaration .)
    ID              reduce using rule 12 (classDeclarationList -> classDeclaration .)


state 119

    (13) classDeclaration -> varDeclaration . SEMICOLON

    SEMICOLON       shift and go to state 129


state 120

    (14) classDeclaration -> methodDeclaration .

    RBRACE          reduce using rule 14 (classDeclaration -> methodDeclaration .)
    FUNC            reduce using rule 14 (classDeclaration -> methodDeclaration .)
    INT             reduce using rule 14 (classDeclaration -> methodDeclaration .)
    BOOL            reduce using rule 14 (classDeclaration -> methodDeclaration .)
    VOID            reduce using rule 14 (classDeclaration -> methodDeclaration .)
    ID              reduce using rule 14 (classDeclaration -> methodDeclaration .)


state 121

    (15) methodDeclaration -> FUNC . ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE

    ID              shift and go to state 130


state 122

    (23) ifStatement -> IF expression THEN LBRACE declaration_list . RBRACE
    (24) ifStatement -> IF expression THEN LBRACE declaration_list . RBRACE ELSE LBRACE declaration_list RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RBRACE          shift and go to state 131
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 10
    declaration                    shift and go to state 42
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 123

    (25) whileStatement -> WHILE expression THEN LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RBRACE          shift and go to state 132
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 10
    declaration                    shift and go to state 42
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 124

    (68) arguments -> arguments COMMA expression .

    RPAREN          reduce using rule 68 (arguments -> arguments COMMA expression .)
    COMMA           reduce using rule 68 (arguments -> arguments COMMA expression .)


state 125

    (71) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 133


state 126

    (72) parameter_list -> parameter_list COMMA type . ID

    ID              shift and go to state 134


state 127

    (8) class -> CLASS ID extends LBRACE classDeclarationList RBRACE .

    FUNC            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    CLASS           reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    INT             reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    BOOL            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    VOID            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    ID              reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    IF              reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    WHILE           reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    PRINT           reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    RETURN          reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    NEW             reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    NUMBER          reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    TRUE            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    FALSE           reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    NULL            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    LPAREN          reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    NOT             reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    MINUS           reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    $end            reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)
    RBRACE          reduce using rule 8 (class -> CLASS ID extends LBRACE classDeclarationList RBRACE .)


state 128

    (11) classDeclarationList -> classDeclarationList classDeclaration .

    RBRACE          reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)
    FUNC            reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)
    INT             reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)
    BOOL            reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)
    VOID            reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)
    ID              reduce using rule 11 (classDeclarationList -> classDeclarationList classDeclaration .)


state 129

    (13) classDeclaration -> varDeclaration SEMICOLON .

    RBRACE          reduce using rule 13 (classDeclaration -> varDeclaration SEMICOLON .)
    FUNC            reduce using rule 13 (classDeclaration -> varDeclaration SEMICOLON .)
    INT             reduce using rule 13 (classDeclaration -> varDeclaration SEMICOLON .)
    BOOL            reduce using rule 13 (classDeclaration -> varDeclaration SEMICOLON .)
    VOID            reduce using rule 13 (classDeclaration -> varDeclaration SEMICOLON .)
    ID              reduce using rule 13 (classDeclaration -> varDeclaration SEMICOLON .)


state 130

    (15) methodDeclaration -> FUNC ID . LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE

    LPAREN          shift and go to state 135


state 131

    (23) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .
    (24) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE . ELSE LBRACE declaration_list RBRACE

    FUNC            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    INT             reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    ID              reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    IF              reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    TRUE            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    FALSE           reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NULL            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    $end            reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 23 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE .)
    ELSE            shift and go to state 136


state 132

    (25) whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .

    FUNC            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    INT             reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    ID              reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    IF              reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    TRUE            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    FALSE           reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NULL            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    $end            reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 25 (whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE .)


state 133

    (71) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    type                           shift and go to state 8
    declaration_list               shift and go to state 137
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 134

    (72) parameter_list -> parameter_list COMMA type ID .

    RPAREN          reduce using rule 72 (parameter_list -> parameter_list COMMA type ID .)
    COMMA           reduce using rule 72 (parameter_list -> parameter_list COMMA type ID .)


state 135

    (15) methodDeclaration -> FUNC ID LPAREN . parameter_list RPAREN type LBRACE declaration_list RBRACE
    (72) parameter_list -> . parameter_list COMMA type ID
    (73) parameter_list -> . type ID
    (74) parameter_list -> .
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    RPAREN          reduce using rule 74 (parameter_list -> .)
    COMMA           reduce using rule 74 (parameter_list -> .)
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 103

    parameter_list                 shift and go to state 138
    type                           shift and go to state 105

state 136

    (24) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 139


state 137

    (71) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RBRACE          shift and go to state 140
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    type                           shift and go to state 8
    declaration                    shift and go to state 42
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 138

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list . RPAREN type LBRACE declaration_list RBRACE
    (72) parameter_list -> parameter_list . COMMA type ID

    RPAREN          shift and go to state 141
    COMMA           shift and go to state 115


state 139

    (24) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 10
    declaration_list               shift and go to state 142
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 140

    (71) funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .

    FUNC            reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    INT             reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    ID              reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    IF              reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    TRUE            reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    FALSE           reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    NULL            reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    $end            reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 71 (funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)


state 141

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN . type LBRACE declaration_list RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID

    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 103

    type                           shift and go to state 143

state 142

    (24) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RBRACE          shift and go to state 144
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    expression                     shift and go to state 10
    declaration                    shift and go to state 42
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    type                           shift and go to state 8
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 143

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type . LBRACE declaration_list RBRACE

    LBRACE          shift and go to state 145


state 144

    (24) ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .

    FUNC            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    CLASS           reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    INT             reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    ID              reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    IF              reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NEW             reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NUMBER          reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    TRUE            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    FALSE           reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NULL            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    LPAREN          reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    $end            reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 24 (ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE .)


state 145

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE . declaration_list RBRACE
    (2) declaration_list -> . declaration
    (3) declaration_list -> . declaration_list declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    type                           shift and go to state 8
    declaration_list               shift and go to state 146
    declaration                    shift and go to state 3
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 146

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list . RBRACE
    (3) declaration_list -> declaration_list . declaration
    (4) declaration -> . varDeclaration SEMICOLON
    (5) declaration -> . statement
    (6) declaration -> . funcDeclaration
    (7) declaration -> . class
    (27) varDeclaration -> . type ID
    (28) varDeclaration -> . type ID ASSIGN expression
    (16) statement -> . expression SEMICOLON
    (17) statement -> . ifStatement
    (18) statement -> . whileStatement
    (19) statement -> . printStatement SEMICOLON
    (20) statement -> . returnStatement SEMICOLON
    (71) funcDeclaration -> . FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE
    (8) class -> . CLASS ID extends LBRACE classDeclarationList RBRACE
    (29) type -> . INT
    (30) type -> . BOOL
    (31) type -> . VOID
    (32) type -> . ID
    (33) expression -> . assignment
    (23) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE
    (24) ifStatement -> . IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE
    (25) whileStatement -> . WHILE expression THEN LBRACE declaration_list RBRACE
    (26) printStatement -> . PRINT expression
    (21) returnStatement -> . RETURN expression
    (22) returnStatement -> . RETURN
    (34) assignment -> . property ASSIGN logical
    (35) assignment -> . logical
    (56) property -> . NEW primary LPAREN RPAREN
    (57) property -> . property DOT ID
    (58) property -> . property LPAREN arguments RPAREN
    (59) property -> . call
    (36) logical -> . logical OR equality
    (37) logical -> . logical AND equality
    (38) logical -> . equality
    (60) call -> . primary LPAREN arguments RPAREN
    (61) call -> . primary
    (39) equality -> . equality EQUALS comparison
    (40) equality -> . equality NOTEQUALS comparison
    (41) equality -> . comparison
    (62) primary -> . NUMBER
    (63) primary -> . ID
    (64) primary -> . TRUE
    (65) primary -> . FALSE
    (66) primary -> . NULL
    (67) primary -> . LPAREN expression RPAREN
    (42) comparison -> . comparison GREATER term
    (43) comparison -> . comparison LESS term
    (44) comparison -> . comparison GREATEROREQUAL term
    (45) comparison -> . comparison LESSOREQUAL term
    (46) comparison -> . term
    (47) term -> . term PLUS factor
    (48) term -> . term MINUS factor
    (49) term -> . factor
    (50) factor -> . factor TIMES unary
    (51) factor -> . factor DIVIDE unary
    (52) factor -> . unary
    (53) unary -> . NOT unary
    (54) unary -> . MINUS unary
    (55) unary -> . property

    RBRACE          shift and go to state 147
    FUNC            shift and go to state 15
    CLASS           shift and go to state 17
    INT             shift and go to state 18
    BOOL            shift and go to state 19
    VOID            shift and go to state 20
    ID              shift and go to state 9
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    PRINT           shift and go to state 24
    RETURN          shift and go to state 25
    NEW             shift and go to state 28
    NUMBER          shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    NULL            shift and go to state 36
    LPAREN          shift and go to state 16
    NOT             shift and go to state 41
    MINUS           shift and go to state 39

    type                           shift and go to state 8
    declaration                    shift and go to state 42
    varDeclaration                 shift and go to state 4
    statement                      shift and go to state 5
    funcDeclaration                shift and go to state 6
    class                          shift and go to state 7
    expression                     shift and go to state 10
    ifStatement                    shift and go to state 11
    whileStatement                 shift and go to state 12
    printStatement                 shift and go to state 13
    returnStatement                shift and go to state 14
    assignment                     shift and go to state 21
    property                       shift and go to state 26
    logical                        shift and go to state 27
    primary                        shift and go to state 29
    call                           shift and go to state 30
    equality                       shift and go to state 31
    comparison                     shift and go to state 32
    term                           shift and go to state 37
    factor                         shift and go to state 38
    unary                          shift and go to state 40

state 147

    (15) methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .

    RBRACE          reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    FUNC            reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    INT             reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    BOOL            reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)
    ID              reduce using rule 15 (methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 29 resolved as shift
