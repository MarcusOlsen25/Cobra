
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN COMMA DIVIDE ELSE EQUALS FUNC GREATER GREATEROREQUAL ID IF LBRACE LESS LESSOREQUAL LPAREN MINUS NOT NOTEQUALS NUMBER OR PLUS PRINT RBRACE RETURN RPAREN THEN TIMES VAR WHILEprogram : declaration_listdeclaration_list : declaration\n                        | declaration_list declarationdeclaration : varDeclaration\n                   | statement\n                   | funcDeclarationstatement : expression\n                 | ifStatement\n                 | whileStatement\n                 | printStatement\n                 | returnStatementreturnStatement : RETURN expressionifStatement : IF expression THEN LBRACE declaration_list RBRACEifStatement : IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACEwhileStatement : WHILE expression THEN LBRACE declaration_list RBRACEprintStatement : PRINT expressionvarDeclaration : VAR IDvarDeclaration : VAR ID ASSIGN expressionexpression : assignmentassignment : ID ASSIGN assignmentassignment : logicallogical : logical OR equalitylogical : logical AND equalitylogical : equalityequality : equality EQUALS comparisonequality : equality NOTEQUALS comparisonequality : comparisoncomparison : comparison GREATER termcomparison : comparison LESS termcomparison : comparison GREATEROREQUAL termcomparison : comparison LESSOREQUAL termcomparison : termterm : term PLUS factorterm : term MINUS factorterm : factorfactor : factor TIMES unaryfactor : factor DIVIDE unaryfactor : unaryunary : NOT unaryunary : MINUS unaryunary : callcall : primary LPAREN arguments RPARENcall : primaryprimary : NUMBERprimary : IDprimary : LPAREN expression RPARENarguments : arguments COMMA expressionarguments : expressionarguments : funcDeclaration : FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACEparameter_list : parameter_list COMMA IDparameter_list : IDparameter_list :'
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,8,9,10,11,12,13,16,21,22,23,24,25,27,29,30,31,32,33,39,40,53,54,55,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,86,87,89,91,92,93,95,96,97,98,],[7,7,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,-3,-17,-16,-12,-40,-45,-39,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,7,7,-42,7,7,7,-13,-15,7,-50,7,7,-14,]),'FUNC':([0,2,3,4,5,6,8,9,10,11,12,13,16,21,22,23,24,25,27,29,30,31,32,33,39,40,53,54,55,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,86,87,89,91,92,93,95,96,97,98,],[14,14,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,-3,-17,-16,-12,-40,-45,-39,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,14,14,-42,14,14,14,-13,-15,14,-50,14,14,-14,]),'IF':([0,2,3,4,5,6,8,9,10,11,12,13,16,21,22,23,24,25,27,29,30,31,32,33,39,40,53,54,55,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,86,87,89,91,92,93,95,96,97,98,],[17,17,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,-3,-17,-16,-12,-40,-45,-39,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,17,17,-42,17,17,17,-13,-15,17,-50,17,17,-14,]),'WHILE':([0,2,3,4,5,6,8,9,10,11,12,13,16,21,22,23,24,25,27,29,30,31,32,33,39,40,53,54,55,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,86,87,89,91,92,93,95,96,97,98,],[18,18,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,-3,-17,-16,-12,-40,-45,-39,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,18,18,-42,18,18,18,-13,-15,18,-50,18,18,-14,]),'PRINT':([0,2,3,4,5,6,8,9,10,11,12,13,16,21,22,23,24,25,27,29,30,31,32,33,39,40,53,54,55,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,86,87,89,91,92,93,95,96,97,98,],[19,19,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,-3,-17,-16,-12,-40,-45,-39,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,19,19,-42,19,19,19,-13,-15,19,-50,19,19,-14,]),'RETURN':([0,2,3,4,5,6,8,9,10,11,12,13,16,21,22,23,24,25,27,29,30,31,32,33,39,40,53,54,55,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,86,87,89,91,92,93,95,96,97,98,],[20,20,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,-3,-17,-16,-12,-40,-45,-39,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,20,20,-42,20,20,20,-13,-15,20,-50,20,20,-14,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,83,85,86,87,89,91,92,93,95,96,97,98,],[8,8,-2,-4,-5,-6,33,-45,-7,-8,-9,-10,-11,35,8,-19,8,8,8,8,-21,-24,-27,-32,-35,54,-38,54,-41,-43,-44,-3,-17,8,-16,-12,54,54,54,54,54,54,54,54,54,54,54,54,-40,-45,-39,8,8,-20,78,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,8,8,-42,8,90,8,8,8,-13,-15,8,-50,8,8,-14,]),'NOT':([0,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,83,86,87,89,91,92,93,95,96,97,98,],[28,28,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,28,-19,28,28,28,28,-21,-24,-27,-32,-35,28,-38,28,-41,-43,-44,-3,-17,28,-16,-12,28,28,28,28,28,28,28,28,28,28,28,28,-40,-45,-39,28,28,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,28,28,-42,28,28,28,28,-13,-15,28,-50,28,28,-14,]),'MINUS':([0,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,83,86,87,89,91,92,93,95,96,97,98,],[26,26,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,26,-19,26,26,26,26,-21,-24,-27,50,-35,26,-38,26,-41,-43,-44,-3,-17,26,-16,-12,26,26,26,26,26,26,26,26,26,26,26,26,-40,-45,-39,26,26,-20,-46,-22,-23,-25,-26,50,50,50,50,-33,-34,-36,-37,-18,26,26,-42,26,26,26,26,-13,-15,26,-50,26,26,-14,]),'NUMBER':([0,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,83,86,87,89,91,92,93,95,96,97,98,],[31,31,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,31,-19,31,31,31,31,-21,-24,-27,-32,-35,31,-38,31,-41,-43,-44,-3,-17,31,-16,-12,31,31,31,31,31,31,31,31,31,31,31,31,-40,-45,-39,31,31,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,31,31,-42,31,31,31,31,-13,-15,31,-50,31,31,-14,]),'LPAREN':([0,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,80,81,82,83,86,87,89,91,92,93,95,96,97,98,],[15,15,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,15,-19,15,15,15,15,-21,-24,-27,-32,-35,15,-38,15,-41,56,-44,-3,-17,15,59,-16,-12,15,15,15,15,15,15,15,15,15,15,15,15,-40,-45,-39,15,15,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,15,15,-42,15,15,15,15,-13,-15,15,-50,15,15,-14,]),'$end':([1,2,3,4,5,6,8,9,10,11,12,13,16,21,22,23,24,25,27,29,30,31,32,33,39,40,53,54,55,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,82,91,92,95,98,],[0,-1,-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,-3,-17,-16,-12,-40,-45,-39,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,-42,-13,-15,-50,-14,]),'RBRACE':([3,4,5,6,8,9,10,11,12,13,16,21,22,23,24,25,27,29,30,31,32,33,39,40,53,54,55,58,60,63,64,65,66,67,68,69,70,71,72,73,74,77,82,86,87,91,92,93,95,97,98,],[-2,-4,-5,-6,-45,-7,-8,-9,-10,-11,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,-3,-17,-16,-12,-40,-45,-39,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-18,-42,91,92,-13,-15,95,-50,98,-14,]),'ASSIGN':([8,33,],[34,57,]),'TIMES':([8,25,27,29,30,31,53,54,55,60,71,72,73,74,82,],[-45,51,-38,-41,-43,-44,-40,-45,-39,-46,51,51,-36,-37,-42,]),'DIVIDE':([8,25,27,29,30,31,53,54,55,60,71,72,73,74,82,],[-45,52,-38,-41,-43,-44,-40,-45,-39,-46,52,52,-36,-37,-42,]),'PLUS':([8,24,25,27,29,30,31,53,54,55,60,67,68,69,70,71,72,73,74,82,],[-45,49,-35,-38,-41,-43,-44,-40,-45,-39,-46,49,49,49,49,-33,-34,-36,-37,-42,]),'GREATER':([8,23,24,25,27,29,30,31,53,54,55,60,65,66,67,68,69,70,71,72,73,74,82,],[-45,45,-32,-35,-38,-41,-43,-44,-40,-45,-39,-46,45,45,-28,-29,-30,-31,-33,-34,-36,-37,-42,]),'LESS':([8,23,24,25,27,29,30,31,53,54,55,60,65,66,67,68,69,70,71,72,73,74,82,],[-45,46,-32,-35,-38,-41,-43,-44,-40,-45,-39,-46,46,46,-28,-29,-30,-31,-33,-34,-36,-37,-42,]),'GREATEROREQUAL':([8,23,24,25,27,29,30,31,53,54,55,60,65,66,67,68,69,70,71,72,73,74,82,],[-45,47,-32,-35,-38,-41,-43,-44,-40,-45,-39,-46,47,47,-28,-29,-30,-31,-33,-34,-36,-37,-42,]),'LESSOREQUAL':([8,23,24,25,27,29,30,31,53,54,55,60,65,66,67,68,69,70,71,72,73,74,82,],[-45,48,-32,-35,-38,-41,-43,-44,-40,-45,-39,-46,48,48,-28,-29,-30,-31,-33,-34,-36,-37,-42,]),'EQUALS':([8,22,23,24,25,27,29,30,31,53,54,55,60,63,64,65,66,67,68,69,70,71,72,73,74,82,],[-45,43,-27,-32,-35,-38,-41,-43,-44,-40,-45,-39,-46,43,43,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-42,]),'NOTEQUALS':([8,22,23,24,25,27,29,30,31,53,54,55,60,63,64,65,66,67,68,69,70,71,72,73,74,82,],[-45,44,-27,-32,-35,-38,-41,-43,-44,-40,-45,-39,-46,44,44,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-42,]),'OR':([8,21,22,23,24,25,27,29,30,31,53,54,55,60,63,64,65,66,67,68,69,70,71,72,73,74,82,],[-45,41,-24,-27,-32,-35,-38,-41,-43,-44,-40,-45,-39,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-42,]),'AND':([8,21,22,23,24,25,27,29,30,31,53,54,55,60,63,64,65,66,67,68,69,70,71,72,73,74,82,],[-45,42,-24,-27,-32,-35,-38,-41,-43,-44,-40,-45,-39,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-42,]),'RPAREN':([8,16,21,22,23,24,25,27,29,30,31,36,53,54,55,56,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,82,88,90,],[-45,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,60,-40,-45,-39,-49,-20,-53,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,82,-48,-52,84,-42,-47,-51,]),'THEN':([8,16,21,22,23,24,25,27,29,30,31,37,38,53,54,55,58,60,63,64,65,66,67,68,69,70,71,72,73,74,82,],[-45,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,61,62,-40,-45,-39,-20,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,-42,]),'COMMA':([8,16,21,22,23,24,25,27,29,30,31,53,54,55,56,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,82,88,90,],[-45,-19,-21,-24,-27,-32,-35,-38,-41,-43,-44,-40,-45,-39,-49,-20,-53,-46,-22,-23,-25,-26,-28,-29,-30,-31,-33,-34,-36,-37,83,-48,-52,85,-42,-47,-51,]),'LBRACE':([61,62,84,94,],[80,81,89,96,]),'ELSE':([91,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,80,81,89,96,],[2,86,87,93,97,]),'declaration':([0,2,80,81,86,87,89,93,96,97,],[3,32,3,3,32,32,3,32,3,32,]),'varDeclaration':([0,2,80,81,86,87,89,93,96,97,],[4,4,4,4,4,4,4,4,4,4,]),'statement':([0,2,80,81,86,87,89,93,96,97,],[5,5,5,5,5,5,5,5,5,5,]),'funcDeclaration':([0,2,80,81,86,87,89,93,96,97,],[6,6,6,6,6,6,6,6,6,6,]),'expression':([0,2,15,17,18,19,20,56,57,80,81,83,86,87,89,93,96,97,],[9,9,36,37,38,39,40,76,77,9,9,88,9,9,9,9,9,9,]),'ifStatement':([0,2,80,81,86,87,89,93,96,97,],[10,10,10,10,10,10,10,10,10,10,]),'whileStatement':([0,2,80,81,86,87,89,93,96,97,],[11,11,11,11,11,11,11,11,11,11,]),'printStatement':([0,2,80,81,86,87,89,93,96,97,],[12,12,12,12,12,12,12,12,12,12,]),'returnStatement':([0,2,80,81,86,87,89,93,96,97,],[13,13,13,13,13,13,13,13,13,13,]),'assignment':([0,2,15,17,18,19,20,34,56,57,80,81,83,86,87,89,93,96,97,],[16,16,16,16,16,16,16,58,16,16,16,16,16,16,16,16,16,16,16,]),'logical':([0,2,15,17,18,19,20,34,56,57,80,81,83,86,87,89,93,96,97,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'equality':([0,2,15,17,18,19,20,34,41,42,56,57,80,81,83,86,87,89,93,96,97,],[22,22,22,22,22,22,22,22,63,64,22,22,22,22,22,22,22,22,22,22,22,]),'comparison':([0,2,15,17,18,19,20,34,41,42,43,44,56,57,80,81,83,86,87,89,93,96,97,],[23,23,23,23,23,23,23,23,23,23,65,66,23,23,23,23,23,23,23,23,23,23,23,]),'term':([0,2,15,17,18,19,20,34,41,42,43,44,45,46,47,48,56,57,80,81,83,86,87,89,93,96,97,],[24,24,24,24,24,24,24,24,24,24,24,24,67,68,69,70,24,24,24,24,24,24,24,24,24,24,24,]),'factor':([0,2,15,17,18,19,20,34,41,42,43,44,45,46,47,48,49,50,56,57,80,81,83,86,87,89,93,96,97,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,71,72,25,25,25,25,25,25,25,25,25,25,25,]),'unary':([0,2,15,17,18,19,20,26,28,34,41,42,43,44,45,46,47,48,49,50,51,52,56,57,80,81,83,86,87,89,93,96,97,],[27,27,27,27,27,27,27,53,55,27,27,27,27,27,27,27,27,27,27,27,73,74,27,27,27,27,27,27,27,27,27,27,27,]),'call':([0,2,15,17,18,19,20,26,28,34,41,42,43,44,45,46,47,48,49,50,51,52,56,57,80,81,83,86,87,89,93,96,97,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'primary':([0,2,15,17,18,19,20,26,28,34,41,42,43,44,45,46,47,48,49,50,51,52,56,57,80,81,83,86,87,89,93,96,97,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'arguments':([56,],[75,]),'parameter_list':([59,],[79,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','Parser.py',7),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',12),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','Parser.py',13),
  ('declaration -> varDeclaration','declaration',1,'p_declaration','Parser.py',21),
  ('declaration -> statement','declaration',1,'p_declaration','Parser.py',22),
  ('declaration -> funcDeclaration','declaration',1,'p_declaration','Parser.py',23),
  ('statement -> expression','statement',1,'p_statement','Parser.py',29),
  ('statement -> ifStatement','statement',1,'p_statement','Parser.py',30),
  ('statement -> whileStatement','statement',1,'p_statement','Parser.py',31),
  ('statement -> printStatement','statement',1,'p_statement','Parser.py',32),
  ('statement -> returnStatement','statement',1,'p_statement','Parser.py',33),
  ('returnStatement -> RETURN expression','returnStatement',2,'p_returnStatement','Parser.py',37),
  ('ifStatement -> IF expression THEN LBRACE declaration_list RBRACE','ifStatement',6,'p_ifStatement_single','Parser.py',42),
  ('ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE','ifStatement',10,'p_ifStatement_else','Parser.py',46),
  ('whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE','whileStatement',6,'p_whileStatement','Parser.py',51),
  ('printStatement -> PRINT expression','printStatement',2,'p_printStatement','Parser.py',56),
  ('varDeclaration -> VAR ID','varDeclaration',2,'p_varDeclaration_uninitialized','Parser.py',61),
  ('varDeclaration -> VAR ID ASSIGN expression','varDeclaration',4,'p_varDeclaration_initialized','Parser.py',67),
  ('expression -> assignment','expression',1,'p_expression_assignment','Parser.py',72),
  ('assignment -> ID ASSIGN assignment','assignment',3,'p_assignment','Parser.py',78),
  ('assignment -> logical','assignment',1,'p_assignment_logical','Parser.py',83),
  ('logical -> logical OR equality','logical',3,'p_logical_or','Parser.py',88),
  ('logical -> logical AND equality','logical',3,'p_logical_and','Parser.py',93),
  ('logical -> equality','logical',1,'p_logical_equality','Parser.py',98),
  ('equality -> equality EQUALS comparison','equality',3,'p_equality_equals','Parser.py',103),
  ('equality -> equality NOTEQUALS comparison','equality',3,'p_equality_not_equals','Parser.py',108),
  ('equality -> comparison','equality',1,'p_equality_comparison','Parser.py',113),
  ('comparison -> comparison GREATER term','comparison',3,'p_comparison_greater','Parser.py',118),
  ('comparison -> comparison LESS term','comparison',3,'p_comparison_less','Parser.py',123),
  ('comparison -> comparison GREATEROREQUAL term','comparison',3,'p_comparison_greater_or_equal','Parser.py',128),
  ('comparison -> comparison LESSOREQUAL term','comparison',3,'p_comparison_less_or_equal','Parser.py',133),
  ('comparison -> term','comparison',1,'p_comparison_term','Parser.py',138),
  ('term -> term PLUS factor','term',3,'p_term_plus','Parser.py',143),
  ('term -> term MINUS factor','term',3,'p_term_minus','Parser.py',148),
  ('term -> factor','term',1,'p_term_factor','Parser.py',153),
  ('factor -> factor TIMES unary','factor',3,'p_factor_times','Parser.py',158),
  ('factor -> factor DIVIDE unary','factor',3,'p_factor_div','Parser.py',163),
  ('factor -> unary','factor',1,'p_factor_unary','Parser.py',168),
  ('unary -> NOT unary','unary',2,'p_unary','Parser.py',173),
  ('unary -> MINUS unary','unary',2,'p_unary_minus','Parser.py',177),
  ('unary -> call','unary',1,'p_unary_num','Parser.py',182),
  ('call -> primary LPAREN arguments RPAREN','call',4,'p_call_func','Parser.py',187),
  ('call -> primary','call',1,'p_call_other','Parser.py',192),
  ('primary -> NUMBER','primary',1,'p_primary_number','Parser.py',197),
  ('primary -> ID','primary',1,'p_primary_ID','Parser.py',202),
  ('primary -> LPAREN expression RPAREN','primary',3,'p_primary','Parser.py',207),
  ('arguments -> arguments COMMA expression','arguments',3,'p_arguments_multiple','Parser.py',213),
  ('arguments -> expression','arguments',1,'p_arguments_single','Parser.py',217),
  ('arguments -> <empty>','arguments',0,'p_arguments_empty','Parser.py',221),
  ('funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE','funcDeclaration',8,'p_funcDeclaration_statement','Parser.py',227),
  ('parameter_list -> parameter_list COMMA ID','parameter_list',3,'p_parameter_list_multiple','Parser.py',242),
  ('parameter_list -> ID','parameter_list',1,'p_parameter_list_single','Parser.py',246),
  ('parameter_list -> <empty>','parameter_list',0,'p_parameter_list_empty','Parser.py',250),
]
