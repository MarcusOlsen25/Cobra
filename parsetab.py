
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN COMMA DIVIDE ELSE EQUALS FUNC GREATER GREATEROREQUAL ID IF LBRACE LESS LESSOREQUAL LPAREN MINUS NOT NOTEQUALS NUMBER OR PLUS PRINT RBRACE RETURN RPAREN THEN TIMES VAR WHILEprogram : declaration_listdeclaration_list : declaration\n                        | declaration_list declarationdeclaration : varDeclaration\n                   | statement\n                   | funcDeclarationstatement : expression\n                 | ifStatement\n                 | whileStatement\n                 | printStatementifStatement : IF expression THEN LBRACE declaration_list RBRACEifStatement : IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACEwhileStatement : WHILE expression THEN LBRACE declaration_list RBRACEprintStatement : PRINT expressionvarDeclaration : VAR IDvarDeclaration : VAR ID ASSIGN expressionexpression : assignmentassignment : ID ASSIGN assignmentassignment : logicallogical : logical OR equalitylogical : logical AND equalitylogical : equalityequality : equality EQUALS comparisonequality : equality NOTEQUALS comparisonequality : comparisoncomparison : comparison GREATER termcomparison : comparison LESS termcomparison : comparison GREATEROREQUAL termcomparison : comparison LESSOREQUAL termcomparison : termterm : term PLUS factorterm : term MINUS factorterm : factorfactor : factor TIMES unaryfactor : factor DIVIDE unaryfactor : unaryunary : NOT unaryunary : MINUS unaryunary : callcall : primary LPAREN arguments RPARENcall : primaryprimary : NUMBERprimary : IDprimary : LPAREN expression RPARENarguments : arguments COMMA expressionarguments : expressionarguments : funcDeclaration : FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACEparameter_list : parameter_list COMMA IDparameter_list : IDparameter_list :'
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,25,27,28,29,30,31,37,50,51,52,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,83,84,86,88,89,90,92,93,94,95,],[7,7,-2,-4,-5,-6,-43,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-39,-41,-42,-3,-15,-14,-38,-43,-37,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,7,7,-40,7,7,7,-11,-13,7,-48,7,7,-12,]),'FUNC':([0,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,25,27,28,29,30,31,37,50,51,52,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,83,84,86,88,89,90,92,93,94,95,],[13,13,-2,-4,-5,-6,-43,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-39,-41,-42,-3,-15,-14,-38,-43,-37,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,13,13,-40,13,13,13,-11,-13,13,-48,13,13,-12,]),'IF':([0,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,25,27,28,29,30,31,37,50,51,52,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,83,84,86,88,89,90,92,93,94,95,],[16,16,-2,-4,-5,-6,-43,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-39,-41,-42,-3,-15,-14,-38,-43,-37,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,16,16,-40,16,16,16,-11,-13,16,-48,16,16,-12,]),'WHILE':([0,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,25,27,28,29,30,31,37,50,51,52,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,83,84,86,88,89,90,92,93,94,95,],[17,17,-2,-4,-5,-6,-43,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-39,-41,-42,-3,-15,-14,-38,-43,-37,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,17,17,-40,17,17,17,-11,-13,17,-48,17,17,-12,]),'PRINT':([0,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,25,27,28,29,30,31,37,50,51,52,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,83,84,86,88,89,90,92,93,94,95,],[18,18,-2,-4,-5,-6,-43,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-39,-41,-42,-3,-15,-14,-38,-43,-37,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,18,18,-40,18,18,18,-11,-13,18,-48,18,18,-12,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,80,82,83,84,86,88,89,90,92,93,94,95,],[8,8,-2,-4,-5,-6,31,-43,-7,-8,-9,-10,33,8,-17,8,8,8,-19,-22,-25,-30,-33,51,-36,51,-39,-41,-42,-3,-15,8,-14,51,51,51,51,51,51,51,51,51,51,51,51,-38,-43,-37,8,8,-18,75,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,8,8,-40,8,87,8,8,8,-11,-13,8,-48,8,8,-12,]),'NOT':([0,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,80,83,84,86,88,89,90,92,93,94,95,],[26,26,-2,-4,-5,-6,-43,-7,-8,-9,-10,26,-17,26,26,26,-19,-22,-25,-30,-33,26,-36,26,-39,-41,-42,-3,-15,26,-14,26,26,26,26,26,26,26,26,26,26,26,26,-38,-43,-37,26,26,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,26,26,-40,26,26,26,26,-11,-13,26,-48,26,26,-12,]),'MINUS':([0,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,80,83,84,86,88,89,90,92,93,94,95,],[24,24,-2,-4,-5,-6,-43,-7,-8,-9,-10,24,-17,24,24,24,-19,-22,-25,47,-33,24,-36,24,-39,-41,-42,-3,-15,24,-14,24,24,24,24,24,24,24,24,24,24,24,24,-38,-43,-37,24,24,-18,-44,-20,-21,-23,-24,47,47,47,47,-31,-32,-34,-35,-16,24,24,-40,24,24,24,24,-11,-13,24,-48,24,24,-12,]),'NUMBER':([0,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,80,83,84,86,88,89,90,92,93,94,95,],[29,29,-2,-4,-5,-6,-43,-7,-8,-9,-10,29,-17,29,29,29,-19,-22,-25,-30,-33,29,-36,29,-39,-41,-42,-3,-15,29,-14,29,29,29,29,29,29,29,29,29,29,29,29,-38,-43,-37,29,29,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,29,29,-40,29,29,29,29,-11,-13,29,-48,29,29,-12,]),'LPAREN':([0,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,77,78,79,80,83,84,86,88,89,90,92,93,94,95,],[14,14,-2,-4,-5,-6,-43,-7,-8,-9,-10,14,-17,14,14,14,-19,-22,-25,-30,-33,14,-36,14,-39,53,-42,-3,-15,14,56,-14,14,14,14,14,14,14,14,14,14,14,14,14,-38,-43,-37,14,14,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,14,14,-40,14,14,14,14,-11,-13,14,-48,14,14,-12,]),'$end':([1,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,25,27,28,29,30,31,37,50,51,52,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,79,88,89,92,95,],[0,-1,-2,-4,-5,-6,-43,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-39,-41,-42,-3,-15,-14,-38,-43,-37,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,-40,-11,-13,-48,-12,]),'RBRACE':([3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,25,27,28,29,30,31,37,50,51,52,55,57,60,61,62,63,64,65,66,67,68,69,70,71,74,79,83,84,88,89,90,92,94,95,],[-2,-4,-5,-6,-43,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-39,-41,-42,-3,-15,-14,-38,-43,-37,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,-40,88,89,-11,-13,92,-48,95,-12,]),'ASSIGN':([8,31,],[32,54,]),'TIMES':([8,23,25,27,28,29,50,51,52,57,68,69,70,71,79,],[-43,48,-36,-39,-41,-42,-38,-43,-37,-44,48,48,-34,-35,-40,]),'DIVIDE':([8,23,25,27,28,29,50,51,52,57,68,69,70,71,79,],[-43,49,-36,-39,-41,-42,-38,-43,-37,-44,49,49,-34,-35,-40,]),'PLUS':([8,22,23,25,27,28,29,50,51,52,57,64,65,66,67,68,69,70,71,79,],[-43,46,-33,-36,-39,-41,-42,-38,-43,-37,-44,46,46,46,46,-31,-32,-34,-35,-40,]),'GREATER':([8,21,22,23,25,27,28,29,50,51,52,57,62,63,64,65,66,67,68,69,70,71,79,],[-43,42,-30,-33,-36,-39,-41,-42,-38,-43,-37,-44,42,42,-26,-27,-28,-29,-31,-32,-34,-35,-40,]),'LESS':([8,21,22,23,25,27,28,29,50,51,52,57,62,63,64,65,66,67,68,69,70,71,79,],[-43,43,-30,-33,-36,-39,-41,-42,-38,-43,-37,-44,43,43,-26,-27,-28,-29,-31,-32,-34,-35,-40,]),'GREATEROREQUAL':([8,21,22,23,25,27,28,29,50,51,52,57,62,63,64,65,66,67,68,69,70,71,79,],[-43,44,-30,-33,-36,-39,-41,-42,-38,-43,-37,-44,44,44,-26,-27,-28,-29,-31,-32,-34,-35,-40,]),'LESSOREQUAL':([8,21,22,23,25,27,28,29,50,51,52,57,62,63,64,65,66,67,68,69,70,71,79,],[-43,45,-30,-33,-36,-39,-41,-42,-38,-43,-37,-44,45,45,-26,-27,-28,-29,-31,-32,-34,-35,-40,]),'EQUALS':([8,20,21,22,23,25,27,28,29,50,51,52,57,60,61,62,63,64,65,66,67,68,69,70,71,79,],[-43,40,-25,-30,-33,-36,-39,-41,-42,-38,-43,-37,-44,40,40,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-40,]),'NOTEQUALS':([8,20,21,22,23,25,27,28,29,50,51,52,57,60,61,62,63,64,65,66,67,68,69,70,71,79,],[-43,41,-25,-30,-33,-36,-39,-41,-42,-38,-43,-37,-44,41,41,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-40,]),'OR':([8,19,20,21,22,23,25,27,28,29,50,51,52,57,60,61,62,63,64,65,66,67,68,69,70,71,79,],[-43,38,-22,-25,-30,-33,-36,-39,-41,-42,-38,-43,-37,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-40,]),'AND':([8,19,20,21,22,23,25,27,28,29,50,51,52,57,60,61,62,63,64,65,66,67,68,69,70,71,79,],[-43,39,-22,-25,-30,-33,-36,-39,-41,-42,-38,-43,-37,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-40,]),'RPAREN':([8,15,19,20,21,22,23,25,27,28,29,34,50,51,52,53,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,79,85,87,],[-43,-17,-19,-22,-25,-30,-33,-36,-39,-41,-42,57,-38,-43,-37,-47,-18,-51,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,79,-46,-50,81,-40,-45,-49,]),'THEN':([8,15,19,20,21,22,23,25,27,28,29,35,36,50,51,52,55,57,60,61,62,63,64,65,66,67,68,69,70,71,79,],[-43,-17,-19,-22,-25,-30,-33,-36,-39,-41,-42,58,59,-38,-43,-37,-18,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-40,]),'COMMA':([8,15,19,20,21,22,23,25,27,28,29,50,51,52,53,55,56,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,79,85,87,],[-43,-17,-19,-22,-25,-30,-33,-36,-39,-41,-42,-38,-43,-37,-47,-18,-51,-44,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,80,-46,-50,82,-40,-45,-49,]),'LBRACE':([58,59,81,91,],[77,78,86,93,]),'ELSE':([88,],[91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,77,78,86,93,],[2,83,84,90,94,]),'declaration':([0,2,77,78,83,84,86,90,93,94,],[3,30,3,3,30,30,3,30,3,30,]),'varDeclaration':([0,2,77,78,83,84,86,90,93,94,],[4,4,4,4,4,4,4,4,4,4,]),'statement':([0,2,77,78,83,84,86,90,93,94,],[5,5,5,5,5,5,5,5,5,5,]),'funcDeclaration':([0,2,77,78,83,84,86,90,93,94,],[6,6,6,6,6,6,6,6,6,6,]),'expression':([0,2,14,16,17,18,53,54,77,78,80,83,84,86,90,93,94,],[9,9,34,35,36,37,73,74,9,9,85,9,9,9,9,9,9,]),'ifStatement':([0,2,77,78,83,84,86,90,93,94,],[10,10,10,10,10,10,10,10,10,10,]),'whileStatement':([0,2,77,78,83,84,86,90,93,94,],[11,11,11,11,11,11,11,11,11,11,]),'printStatement':([0,2,77,78,83,84,86,90,93,94,],[12,12,12,12,12,12,12,12,12,12,]),'assignment':([0,2,14,16,17,18,32,53,54,77,78,80,83,84,86,90,93,94,],[15,15,15,15,15,15,55,15,15,15,15,15,15,15,15,15,15,15,]),'logical':([0,2,14,16,17,18,32,53,54,77,78,80,83,84,86,90,93,94,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'equality':([0,2,14,16,17,18,32,38,39,53,54,77,78,80,83,84,86,90,93,94,],[20,20,20,20,20,20,20,60,61,20,20,20,20,20,20,20,20,20,20,20,]),'comparison':([0,2,14,16,17,18,32,38,39,40,41,53,54,77,78,80,83,84,86,90,93,94,],[21,21,21,21,21,21,21,21,21,62,63,21,21,21,21,21,21,21,21,21,21,21,]),'term':([0,2,14,16,17,18,32,38,39,40,41,42,43,44,45,53,54,77,78,80,83,84,86,90,93,94,],[22,22,22,22,22,22,22,22,22,22,22,64,65,66,67,22,22,22,22,22,22,22,22,22,22,22,]),'factor':([0,2,14,16,17,18,32,38,39,40,41,42,43,44,45,46,47,53,54,77,78,80,83,84,86,90,93,94,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,68,69,23,23,23,23,23,23,23,23,23,23,23,]),'unary':([0,2,14,16,17,18,24,26,32,38,39,40,41,42,43,44,45,46,47,48,49,53,54,77,78,80,83,84,86,90,93,94,],[25,25,25,25,25,25,50,52,25,25,25,25,25,25,25,25,25,25,25,70,71,25,25,25,25,25,25,25,25,25,25,25,]),'call':([0,2,14,16,17,18,24,26,32,38,39,40,41,42,43,44,45,46,47,48,49,53,54,77,78,80,83,84,86,90,93,94,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'primary':([0,2,14,16,17,18,24,26,32,38,39,40,41,42,43,44,45,46,47,48,49,53,54,77,78,80,83,84,86,90,93,94,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'arguments':([53,],[72,]),'parameter_list':([56,],[76,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','Parser.py',7),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',12),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','Parser.py',13),
  ('declaration -> varDeclaration','declaration',1,'p_declaration','Parser.py',21),
  ('declaration -> statement','declaration',1,'p_declaration','Parser.py',22),
  ('declaration -> funcDeclaration','declaration',1,'p_declaration','Parser.py',23),
  ('statement -> expression','statement',1,'p_statement','Parser.py',29),
  ('statement -> ifStatement','statement',1,'p_statement','Parser.py',30),
  ('statement -> whileStatement','statement',1,'p_statement','Parser.py',31),
  ('statement -> printStatement','statement',1,'p_statement','Parser.py',32),
  ('ifStatement -> IF expression THEN LBRACE declaration_list RBRACE','ifStatement',6,'p_ifStatement_single','Parser.py',37),
  ('ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE','ifStatement',10,'p_ifStatement_else','Parser.py',41),
  ('whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE','whileStatement',6,'p_whileStatement','Parser.py',46),
  ('printStatement -> PRINT expression','printStatement',2,'p_printStatement','Parser.py',51),
  ('varDeclaration -> VAR ID','varDeclaration',2,'p_varDeclaration_uninitialized','Parser.py',56),
  ('varDeclaration -> VAR ID ASSIGN expression','varDeclaration',4,'p_varDeclaration_initialized','Parser.py',62),
  ('expression -> assignment','expression',1,'p_expression_assignment','Parser.py',67),
  ('assignment -> ID ASSIGN assignment','assignment',3,'p_assignment','Parser.py',73),
  ('assignment -> logical','assignment',1,'p_assignment_logical','Parser.py',78),
  ('logical -> logical OR equality','logical',3,'p_logical_or','Parser.py',83),
  ('logical -> logical AND equality','logical',3,'p_logical_and','Parser.py',88),
  ('logical -> equality','logical',1,'p_logical_equality','Parser.py',93),
  ('equality -> equality EQUALS comparison','equality',3,'p_equality_equals','Parser.py',98),
  ('equality -> equality NOTEQUALS comparison','equality',3,'p_equality_not_equals','Parser.py',103),
  ('equality -> comparison','equality',1,'p_equality_comparison','Parser.py',108),
  ('comparison -> comparison GREATER term','comparison',3,'p_comparison_greater','Parser.py',113),
  ('comparison -> comparison LESS term','comparison',3,'p_comparison_less','Parser.py',118),
  ('comparison -> comparison GREATEROREQUAL term','comparison',3,'p_comparison_greater_or_equal','Parser.py',123),
  ('comparison -> comparison LESSOREQUAL term','comparison',3,'p_comparison_less_or_equal','Parser.py',128),
  ('comparison -> term','comparison',1,'p_comparison_term','Parser.py',133),
  ('term -> term PLUS factor','term',3,'p_term_plus','Parser.py',138),
  ('term -> term MINUS factor','term',3,'p_term_minus','Parser.py',143),
  ('term -> factor','term',1,'p_term_factor','Parser.py',148),
  ('factor -> factor TIMES unary','factor',3,'p_factor_times','Parser.py',153),
  ('factor -> factor DIVIDE unary','factor',3,'p_factor_div','Parser.py',158),
  ('factor -> unary','factor',1,'p_factor_unary','Parser.py',163),
  ('unary -> NOT unary','unary',2,'p_unary','Parser.py',168),
  ('unary -> MINUS unary','unary',2,'p_unary_minus','Parser.py',172),
  ('unary -> call','unary',1,'p_unary_num','Parser.py',177),
  ('call -> primary LPAREN arguments RPAREN','call',4,'p_call_func','Parser.py',182),
  ('call -> primary','call',1,'p_call_other','Parser.py',187),
  ('primary -> NUMBER','primary',1,'p_primary_number','Parser.py',192),
  ('primary -> ID','primary',1,'p_primary_ID','Parser.py',197),
  ('primary -> LPAREN expression RPAREN','primary',3,'p_primary','Parser.py',202),
  ('arguments -> arguments COMMA expression','arguments',3,'p_arguments_multiple','Parser.py',208),
  ('arguments -> expression','arguments',1,'p_arguments_single','Parser.py',212),
  ('arguments -> <empty>','arguments',0,'p_arguments_empty','Parser.py',216),
  ('funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE','funcDeclaration',8,'p_funcDeclaration_statement','Parser.py',222),
  ('parameter_list -> parameter_list COMMA ID','parameter_list',3,'p_parameter_list_multiple','Parser.py',237),
  ('parameter_list -> ID','parameter_list',1,'p_parameter_list_single','Parser.py',241),
  ('parameter_list -> <empty>','parameter_list',0,'p_parameter_list_empty','Parser.py',245),
]
