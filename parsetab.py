
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOL CLASS COMMA DIVIDE DOT ELSE EQUALS EXTENDS FALSE FUNC GREATER GREATEROREQUAL ID IF INT LBRACE LESS LESSOREQUAL LPAREN MINUS NEW NOT NOTEQUALS NULL NUMBER OR PLUS PRINT RBRACE RETURN RPAREN SEMICOLON THEN TIMES TRUE VOID WHILEprogram : declaration_listdeclaration_list : declaration\n                            | declaration_list declarationdeclaration : varDeclaration SEMICOLON\n                    | statement\n                    | funcDeclaration\n                    | classclass : CLASS ID extends LBRACE classDeclarationList RBRACEextends : EXTENDS ID\n                | emptyclassDeclarationList : classDeclarationList classDeclarationclassDeclarationList : classDeclarationclassDeclaration : varDeclaration SEMICOLON\n                            | methodDeclarationmethodDeclaration : FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACEstatement : expression SEMICOLON\n                    | ifStatement\n                    | whileStatement\n                    | printStatement SEMICOLON\n                    | returnStatement SEMICOLONreturnStatement : RETURN expressionreturnStatement : RETURNifStatement : IF expression THEN LBRACE declaration_list RBRACEifStatement : IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACEwhileStatement : WHILE expression THEN LBRACE declaration_list RBRACEprintStatement : PRINT expressionvarDeclaration : type IDvarDeclaration : type ID ASSIGN expressiontype : INT\n                | BOOL\n                | VOID\n                | IDexpression : assignmentassignment : property ASSIGN logicalassignment : logicallogical : logical OR equalitylogical : logical AND equalitylogical : equalityequality : equality EQUALS comparisonequality : equality NOTEQUALS comparisonequality : comparisoncomparison : comparison GREATER termcomparison : comparison LESS termcomparison : comparison GREATEROREQUAL termcomparison : comparison LESSOREQUAL termcomparison : termterm : term PLUS factorterm : term MINUS factorterm : factorfactor : factor TIMES unaryfactor : factor DIVIDE unaryfactor : unaryunary : NOT unaryunary : MINUS unaryunary : propertyproperty : NEW primary LPAREN RPARENproperty : property DOT IDproperty : property LPAREN arguments RPARENproperty : callcall : primary LPAREN arguments RPARENcall : primaryprimary : NUMBERprimary : IDprimary : TRUE\n                | FALSEprimary : NULLprimary : LPAREN expression RPARENarguments : arguments COMMA expressionarguments : expressionarguments : funcDeclaration : FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACEparameter_list : parameter_list COMMA type IDparameter_list : type IDparameter_list :empty :'
    
_lr_action_items = {'FUNC':([0,2,3,5,6,7,11,12,42,43,45,46,47,106,108,109,117,118,120,122,123,127,128,129,131,132,133,137,139,140,142,144,145,146,147,],[15,15,-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,121,15,15,121,-12,-14,15,15,-8,-11,-13,-23,-25,15,15,15,-71,15,-24,15,15,-15,]),'CLASS':([0,2,3,5,6,7,11,12,42,43,45,46,47,108,109,122,123,127,131,132,133,137,139,140,142,144,145,146,],[17,17,-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,17,17,17,17,-8,-23,-25,17,17,17,-71,17,-24,17,17,]),'INT':([0,2,3,5,6,7,11,12,42,43,45,46,47,77,106,108,109,114,115,117,118,120,122,123,127,128,129,131,132,133,135,137,139,140,141,142,144,145,146,147,],[18,18,-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,18,18,18,18,18,18,18,-12,-14,18,18,-8,-11,-13,-23,-25,18,18,18,18,-71,18,18,-24,18,18,-15,]),'BOOL':([0,2,3,5,6,7,11,12,42,43,45,46,47,77,106,108,109,114,115,117,118,120,122,123,127,128,129,131,132,133,135,137,139,140,141,142,144,145,146,147,],[19,19,-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,19,19,19,19,19,19,19,-12,-14,19,19,-8,-11,-13,-23,-25,19,19,19,19,-71,19,19,-24,19,19,-15,]),'VOID':([0,2,3,5,6,7,11,12,42,43,45,46,47,77,106,108,109,114,115,117,118,120,122,123,127,128,129,131,132,133,135,137,139,140,141,142,144,145,146,147,],[20,20,-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,20,20,20,20,20,20,20,-12,-14,20,20,-8,-11,-13,-23,-25,20,20,20,20,-71,20,20,-24,20,20,-15,]),'ID':([0,2,3,5,6,7,8,9,11,12,15,16,17,18,19,20,22,23,24,25,28,39,41,42,43,45,46,47,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,77,80,103,105,106,108,109,111,114,115,117,118,120,121,122,123,126,127,128,129,131,132,133,135,137,139,140,141,142,144,145,146,147,],[9,9,-2,-5,-6,-7,44,-32,-17,-18,48,50,51,-29,-30,-31,50,50,50,50,50,50,50,-3,-4,-16,-19,-20,50,85,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,103,107,-32,116,103,9,9,50,103,103,103,-12,-14,130,9,9,134,-8,-11,-13,-23,-25,9,103,9,9,-71,103,9,-24,9,9,-15,]),'IF':([0,2,3,5,6,7,11,12,42,43,45,46,47,108,109,122,123,127,131,132,133,137,139,140,142,144,145,146,],[22,22,-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,22,22,22,22,-8,-23,-25,22,22,22,-71,22,-24,22,22,]),'WHILE':([0,2,3,5,6,7,11,12,42,43,45,46,47,108,109,122,123,127,131,132,133,137,139,140,142,144,145,146,],[23,23,-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,23,23,23,23,-8,-23,-25,23,23,23,-71,23,-24,23,23,]),'PRINT':([0,2,3,5,6,7,11,12,42,43,45,46,47,108,109,122,123,127,131,132,133,137,139,140,142,144,145,146,],[24,24,-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,24,24,24,24,-8,-23,-25,24,24,24,-71,24,-24,24,24,]),'RETURN':([0,2,3,5,6,7,11,12,42,43,45,46,47,108,109,122,123,127,131,132,133,137,139,140,142,144,145,146,],[25,25,-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,25,25,25,25,-8,-23,-25,25,25,25,-71,25,-24,25,25,]),'NEW':([0,2,3,5,6,7,11,12,16,22,23,24,25,39,41,42,43,45,46,47,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,108,109,111,122,123,127,131,132,133,137,139,140,142,144,145,146,],[28,28,-2,-5,-6,-7,-17,-18,28,28,28,28,28,28,28,-3,-4,-16,-19,-20,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-8,-23,-25,28,28,28,-71,28,-24,28,28,]),'NUMBER':([0,2,3,5,6,7,11,12,16,22,23,24,25,28,39,41,42,43,45,46,47,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,108,109,111,122,123,127,131,132,133,137,139,140,142,144,145,146,],[33,33,-2,-5,-6,-7,-17,-18,33,33,33,33,33,33,33,33,-3,-4,-16,-19,-20,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-8,-23,-25,33,33,33,-71,33,-24,33,33,]),'TRUE':([0,2,3,5,6,7,11,12,16,22,23,24,25,28,39,41,42,43,45,46,47,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,108,109,111,122,123,127,131,132,133,137,139,140,142,144,145,146,],[34,34,-2,-5,-6,-7,-17,-18,34,34,34,34,34,34,34,34,-3,-4,-16,-19,-20,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-8,-23,-25,34,34,34,-71,34,-24,34,34,]),'FALSE':([0,2,3,5,6,7,11,12,16,22,23,24,25,28,39,41,42,43,45,46,47,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,108,109,111,122,123,127,131,132,133,137,139,140,142,144,145,146,],[35,35,-2,-5,-6,-7,-17,-18,35,35,35,35,35,35,35,35,-3,-4,-16,-19,-20,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-8,-23,-25,35,35,35,-71,35,-24,35,35,]),'NULL':([0,2,3,5,6,7,11,12,16,22,23,24,25,28,39,41,42,43,45,46,47,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,108,109,111,122,123,127,131,132,133,137,139,140,142,144,145,146,],[36,36,-2,-5,-6,-7,-17,-18,36,36,36,36,36,36,36,36,-3,-4,-16,-19,-20,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-8,-23,-25,36,36,36,-71,36,-24,36,36,]),'LPAREN':([0,2,3,5,6,7,9,11,12,16,22,23,24,25,26,28,29,30,33,34,35,36,39,41,42,43,45,46,47,48,50,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,76,78,85,108,109,110,111,112,113,122,123,127,130,131,132,133,137,139,140,142,144,145,146,],[16,16,-2,-5,-6,-7,-63,-17,-18,16,16,16,16,16,58,16,62,-59,-62,-64,-65,-66,16,16,-3,-4,-16,-19,-20,77,-63,16,16,16,16,90,16,16,16,16,16,16,16,16,16,16,16,58,16,-67,-57,16,16,-58,16,-56,-60,16,16,-8,135,-23,-25,16,16,16,-71,16,-24,16,16,]),'NOT':([0,2,3,5,6,7,11,12,16,22,23,24,25,39,41,42,43,45,46,47,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,108,109,111,122,123,127,131,132,133,137,139,140,142,144,145,146,],[41,41,-2,-5,-6,-7,-17,-18,41,41,41,41,41,41,41,-3,-4,-16,-19,-20,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-8,-23,-25,41,41,41,-71,41,-24,41,41,]),'MINUS':([0,2,3,5,6,7,9,11,12,16,22,23,24,25,26,29,30,33,34,35,36,37,38,39,40,41,42,43,45,46,47,50,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,85,94,95,96,97,98,99,100,101,108,109,110,111,112,113,122,123,127,131,132,133,137,139,140,142,144,145,146,],[39,39,-2,-5,-6,-7,-63,-17,-18,39,39,39,39,39,-55,-61,-59,-62,-64,-65,-66,70,-49,39,-52,39,-3,-4,-16,-19,-20,-63,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-54,-55,-53,39,-67,-57,70,70,70,70,-47,-48,-50,-51,39,39,-58,39,-56,-60,39,39,-8,-23,-25,39,39,39,-71,39,-24,39,39,]),'$end':([1,2,3,5,6,7,11,12,42,43,45,46,47,127,131,132,140,144,],[0,-1,-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,-8,-23,-25,-71,-24,]),'RBRACE':([3,5,6,7,11,12,42,43,45,46,47,117,118,120,122,123,127,128,129,131,132,137,140,142,144,146,147,],[-2,-5,-6,-7,-17,-18,-3,-4,-16,-19,-20,127,-12,-14,131,132,-8,-11,-13,-23,-25,140,-71,144,-24,147,-15,]),'SEMICOLON':([4,9,10,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,38,40,44,50,54,55,73,74,75,78,84,85,88,89,92,93,94,95,96,97,98,99,100,101,102,110,112,113,119,],[43,-63,45,46,47,-33,-22,-55,-35,-61,-59,-38,-41,-62,-64,-65,-66,-46,-49,-52,-27,-63,-26,-21,-54,-55,-53,-67,-34,-57,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,-58,-56,-60,129,]),'ASSIGN':([9,26,29,30,33,34,35,36,44,50,78,85,110,112,113,],[-63,56,-61,-59,-62,-64,-65,-66,76,-63,-67,-57,-58,-56,-60,]),'DOT':([9,26,29,30,33,34,35,36,50,74,78,85,110,112,113,],[-63,57,-61,-59,-62,-64,-65,-66,-63,57,-67,-57,-58,-56,-60,]),'TIMES':([9,26,29,30,33,34,35,36,38,40,50,73,74,75,78,85,98,99,100,101,110,112,113,],[-63,-55,-61,-59,-62,-64,-65,-66,71,-52,-63,-54,-55,-53,-67,-57,71,71,-50,-51,-58,-56,-60,]),'DIVIDE':([9,26,29,30,33,34,35,36,38,40,50,73,74,75,78,85,98,99,100,101,110,112,113,],[-63,-55,-61,-59,-62,-64,-65,-66,72,-52,-63,-54,-55,-53,-67,-57,72,72,-50,-51,-58,-56,-60,]),'PLUS':([9,26,29,30,33,34,35,36,37,38,40,50,73,74,75,78,85,94,95,96,97,98,99,100,101,110,112,113,],[-63,-55,-61,-59,-62,-64,-65,-66,69,-49,-52,-63,-54,-55,-53,-67,-57,69,69,69,69,-47,-48,-50,-51,-58,-56,-60,]),'GREATER':([9,26,29,30,32,33,34,35,36,37,38,40,50,73,74,75,78,85,92,93,94,95,96,97,98,99,100,101,110,112,113,],[-63,-55,-61,-59,65,-62,-64,-65,-66,-46,-49,-52,-63,-54,-55,-53,-67,-57,65,65,-42,-43,-44,-45,-47,-48,-50,-51,-58,-56,-60,]),'LESS':([9,26,29,30,32,33,34,35,36,37,38,40,50,73,74,75,78,85,92,93,94,95,96,97,98,99,100,101,110,112,113,],[-63,-55,-61,-59,66,-62,-64,-65,-66,-46,-49,-52,-63,-54,-55,-53,-67,-57,66,66,-42,-43,-44,-45,-47,-48,-50,-51,-58,-56,-60,]),'GREATEROREQUAL':([9,26,29,30,32,33,34,35,36,37,38,40,50,73,74,75,78,85,92,93,94,95,96,97,98,99,100,101,110,112,113,],[-63,-55,-61,-59,67,-62,-64,-65,-66,-46,-49,-52,-63,-54,-55,-53,-67,-57,67,67,-42,-43,-44,-45,-47,-48,-50,-51,-58,-56,-60,]),'LESSOREQUAL':([9,26,29,30,32,33,34,35,36,37,38,40,50,73,74,75,78,85,92,93,94,95,96,97,98,99,100,101,110,112,113,],[-63,-55,-61,-59,68,-62,-64,-65,-66,-46,-49,-52,-63,-54,-55,-53,-67,-57,68,68,-42,-43,-44,-45,-47,-48,-50,-51,-58,-56,-60,]),'EQUALS':([9,26,29,30,31,32,33,34,35,36,37,38,40,50,73,74,75,78,85,88,89,92,93,94,95,96,97,98,99,100,101,110,112,113,],[-63,-55,-61,-59,63,-41,-62,-64,-65,-66,-46,-49,-52,-63,-54,-55,-53,-67,-57,63,63,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-58,-56,-60,]),'NOTEQUALS':([9,26,29,30,31,32,33,34,35,36,37,38,40,50,73,74,75,78,85,88,89,92,93,94,95,96,97,98,99,100,101,110,112,113,],[-63,-55,-61,-59,64,-41,-62,-64,-65,-66,-46,-49,-52,-63,-54,-55,-53,-67,-57,64,64,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-58,-56,-60,]),'OR':([9,26,27,29,30,31,32,33,34,35,36,37,38,40,50,73,74,75,78,84,85,88,89,92,93,94,95,96,97,98,99,100,101,110,112,113,],[-63,-55,59,-61,-59,-38,-41,-62,-64,-65,-66,-46,-49,-52,-63,-54,-55,-53,-67,59,-57,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-58,-56,-60,]),'AND':([9,26,27,29,30,31,32,33,34,35,36,37,38,40,50,73,74,75,78,84,85,88,89,92,93,94,95,96,97,98,99,100,101,110,112,113,],[-63,-55,60,-61,-59,-38,-41,-62,-64,-65,-66,-46,-49,-52,-63,-54,-55,-53,-67,60,-57,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-58,-56,-60,]),'LBRACE':([18,19,20,51,79,81,82,83,103,107,125,136,143,],[-29,-30,-31,-75,106,-10,108,109,-32,-9,133,139,145,]),'RPAREN':([21,26,27,29,30,31,32,33,34,35,36,37,38,40,49,50,58,62,73,74,75,77,78,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,110,112,113,116,124,134,135,138,],[-33,-55,-35,-61,-59,-38,-41,-62,-64,-65,-66,-46,-49,-52,78,-63,-70,-70,-54,-55,-53,-74,-67,-34,-57,110,-69,-36,-37,112,113,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,114,-58,-56,-60,-73,-68,-72,-74,141,]),'THEN':([21,26,27,29,30,31,32,33,34,35,36,37,38,40,50,52,53,73,74,75,78,84,85,88,89,92,93,94,95,96,97,98,99,100,101,110,112,113,],[-33,-55,-35,-61,-59,-38,-41,-62,-64,-65,-66,-46,-49,-52,-63,82,83,-54,-55,-53,-67,-34,-57,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-58,-56,-60,]),'COMMA':([21,26,27,29,30,31,32,33,34,35,36,37,38,40,50,58,62,73,74,75,77,78,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,104,110,112,113,116,124,134,135,138,],[-33,-55,-35,-61,-59,-38,-41,-62,-64,-65,-66,-46,-49,-52,-63,-70,-70,-54,-55,-53,-74,-67,-34,-57,111,-69,-36,-37,111,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,115,-58,-56,-60,-73,-68,-72,-74,115,]),'EXTENDS':([51,],[80,]),'ELSE':([131,],[136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,108,109,133,139,145,],[2,122,123,137,142,146,]),'declaration':([0,2,108,109,122,123,133,137,139,142,145,146,],[3,42,3,3,42,42,3,42,3,42,3,42,]),'varDeclaration':([0,2,106,108,109,117,122,123,133,137,139,142,145,146,],[4,4,119,4,4,119,4,4,4,4,4,4,4,4,]),'statement':([0,2,108,109,122,123,133,137,139,142,145,146,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'funcDeclaration':([0,2,108,109,122,123,133,137,139,142,145,146,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'class':([0,2,108,109,122,123,133,137,139,142,145,146,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'type':([0,2,77,106,108,109,114,115,117,122,123,133,135,137,139,141,142,145,146,],[8,8,105,8,8,8,125,126,8,8,8,8,105,8,8,143,8,8,8,]),'expression':([0,2,16,22,23,24,25,58,62,76,108,109,111,122,123,133,137,139,142,145,146,],[10,10,49,52,53,54,55,87,87,102,10,10,124,10,10,10,10,10,10,10,10,]),'ifStatement':([0,2,108,109,122,123,133,137,139,142,145,146,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'whileStatement':([0,2,108,109,122,123,133,137,139,142,145,146,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'printStatement':([0,2,108,109,122,123,133,137,139,142,145,146,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'returnStatement':([0,2,108,109,122,123,133,137,139,142,145,146,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'assignment':([0,2,16,22,23,24,25,58,62,76,108,109,111,122,123,133,137,139,142,145,146,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'property':([0,2,16,22,23,24,25,39,41,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,108,109,111,122,123,133,137,139,142,145,146,],[26,26,26,26,26,26,26,74,74,74,26,74,74,26,74,74,74,74,74,74,74,74,74,74,26,26,26,26,26,26,26,26,26,26,26,26,]),'logical':([0,2,16,22,23,24,25,56,58,62,76,108,109,111,122,123,133,137,139,142,145,146,],[27,27,27,27,27,27,27,84,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'primary':([0,2,16,22,23,24,25,28,39,41,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,108,109,111,122,123,133,137,139,142,145,146,],[29,29,29,29,29,29,29,61,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'call':([0,2,16,22,23,24,25,39,41,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,108,109,111,122,123,133,137,139,142,145,146,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'equality':([0,2,16,22,23,24,25,56,58,59,60,62,76,108,109,111,122,123,133,137,139,142,145,146,],[31,31,31,31,31,31,31,31,31,88,89,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'comparison':([0,2,16,22,23,24,25,56,58,59,60,62,63,64,76,108,109,111,122,123,133,137,139,142,145,146,],[32,32,32,32,32,32,32,32,32,32,32,32,92,93,32,32,32,32,32,32,32,32,32,32,32,32,]),'term':([0,2,16,22,23,24,25,56,58,59,60,62,63,64,65,66,67,68,76,108,109,111,122,123,133,137,139,142,145,146,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,94,95,96,97,37,37,37,37,37,37,37,37,37,37,37,37,]),'factor':([0,2,16,22,23,24,25,56,58,59,60,62,63,64,65,66,67,68,69,70,76,108,109,111,122,123,133,137,139,142,145,146,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,98,99,38,38,38,38,38,38,38,38,38,38,38,38,]),'unary':([0,2,16,22,23,24,25,39,41,56,58,59,60,62,63,64,65,66,67,68,69,70,71,72,76,108,109,111,122,123,133,137,139,142,145,146,],[40,40,40,40,40,40,40,73,75,40,40,40,40,40,40,40,40,40,40,40,40,40,100,101,40,40,40,40,40,40,40,40,40,40,40,40,]),'extends':([51,],[79,]),'empty':([51,],[81,]),'arguments':([58,62,],[86,91,]),'parameter_list':([77,135,],[104,138,]),'classDeclarationList':([106,],[117,]),'classDeclaration':([106,117,],[118,128,]),'methodDeclaration':([106,117,],[120,120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','Parser.py',15),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',20),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','Parser.py',21),
  ('declaration -> varDeclaration SEMICOLON','declaration',2,'p_declaration','Parser.py',29),
  ('declaration -> statement','declaration',1,'p_declaration','Parser.py',30),
  ('declaration -> funcDeclaration','declaration',1,'p_declaration','Parser.py',31),
  ('declaration -> class','declaration',1,'p_declaration','Parser.py',32),
  ('class -> CLASS ID extends LBRACE classDeclarationList RBRACE','class',6,'p_class','Parser.py',36),
  ('extends -> EXTENDS ID','extends',2,'p_extends','Parser.py',43),
  ('extends -> empty','extends',1,'p_extends','Parser.py',44),
  ('classDeclarationList -> classDeclarationList classDeclaration','classDeclarationList',2,'p_classDeclarationList_multiple','Parser.py',52),
  ('classDeclarationList -> classDeclaration','classDeclarationList',1,'p_classDeclarationList_single','Parser.py',56),
  ('classDeclaration -> varDeclaration SEMICOLON','classDeclaration',2,'p_classDeclaration','Parser.py',60),
  ('classDeclaration -> methodDeclaration','classDeclaration',1,'p_classDeclaration','Parser.py',61),
  ('methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE','methodDeclaration',9,'p_methodDeclaration','Parser.py',65),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','Parser.py',70),
  ('statement -> ifStatement','statement',1,'p_statement','Parser.py',71),
  ('statement -> whileStatement','statement',1,'p_statement','Parser.py',72),
  ('statement -> printStatement SEMICOLON','statement',2,'p_statement','Parser.py',73),
  ('statement -> returnStatement SEMICOLON','statement',2,'p_statement','Parser.py',74),
  ('returnStatement -> RETURN expression','returnStatement',2,'p_returnStatement','Parser.py',79),
  ('returnStatement -> RETURN','returnStatement',1,'p_returnStatement_empty','Parser.py',84),
  ('ifStatement -> IF expression THEN LBRACE declaration_list RBRACE','ifStatement',6,'p_ifStatement_single','Parser.py',89),
  ('ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE','ifStatement',10,'p_ifStatement_else','Parser.py',94),
  ('whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE','whileStatement',6,'p_whileStatement','Parser.py',99),
  ('printStatement -> PRINT expression','printStatement',2,'p_printStatement','Parser.py',104),
  ('varDeclaration -> type ID','varDeclaration',2,'p_varDeclaration_uninitialized','Parser.py',109),
  ('varDeclaration -> type ID ASSIGN expression','varDeclaration',4,'p_varDeclaration_initialized','Parser.py',114),
  ('type -> INT','type',1,'p_type','Parser.py',119),
  ('type -> BOOL','type',1,'p_type','Parser.py',120),
  ('type -> VOID','type',1,'p_type','Parser.py',121),
  ('type -> ID','type',1,'p_type','Parser.py',122),
  ('expression -> assignment','expression',1,'p_expression_assignment','Parser.py',127),
  ('assignment -> property ASSIGN logical','assignment',3,'p_assignment','Parser.py',132),
  ('assignment -> logical','assignment',1,'p_assignment_logical','Parser.py',138),
  ('logical -> logical OR equality','logical',3,'p_logical_or','Parser.py',143),
  ('logical -> logical AND equality','logical',3,'p_logical_and','Parser.py',148),
  ('logical -> equality','logical',1,'p_logical_equality','Parser.py',153),
  ('equality -> equality EQUALS comparison','equality',3,'p_equality_equals','Parser.py',158),
  ('equality -> equality NOTEQUALS comparison','equality',3,'p_equality_not_equals','Parser.py',163),
  ('equality -> comparison','equality',1,'p_equality_comparison','Parser.py',168),
  ('comparison -> comparison GREATER term','comparison',3,'p_comparison_greater','Parser.py',173),
  ('comparison -> comparison LESS term','comparison',3,'p_comparison_less','Parser.py',178),
  ('comparison -> comparison GREATEROREQUAL term','comparison',3,'p_comparison_greater_or_equal','Parser.py',183),
  ('comparison -> comparison LESSOREQUAL term','comparison',3,'p_comparison_less_or_equal','Parser.py',188),
  ('comparison -> term','comparison',1,'p_comparison_term','Parser.py',193),
  ('term -> term PLUS factor','term',3,'p_term_plus','Parser.py',198),
  ('term -> term MINUS factor','term',3,'p_term_minus','Parser.py',203),
  ('term -> factor','term',1,'p_term_factor','Parser.py',208),
  ('factor -> factor TIMES unary','factor',3,'p_factor_times','Parser.py',213),
  ('factor -> factor DIVIDE unary','factor',3,'p_factor_div','Parser.py',218),
  ('factor -> unary','factor',1,'p_factor_unary','Parser.py',223),
  ('unary -> NOT unary','unary',2,'p_unary','Parser.py',228),
  ('unary -> MINUS unary','unary',2,'p_unary_minus','Parser.py',233),
  ('unary -> property','unary',1,'p_unary_num','Parser.py',238),
  ('property -> NEW primary LPAREN RPAREN','property',4,'p_call_constructor','Parser.py',244),
  ('property -> property DOT ID','property',3,'p_property_dot','Parser.py',248),
  ('property -> property LPAREN arguments RPAREN','property',4,'p_property_call','Parser.py',252),
  ('property -> call','property',1,'p_property','Parser.py',257),
  ('call -> primary LPAREN arguments RPAREN','call',4,'p_call_func','Parser.py',261),
  ('call -> primary','call',1,'p_call','Parser.py',265),
  ('primary -> NUMBER','primary',1,'p_primary_number','Parser.py',270),
  ('primary -> ID','primary',1,'p_primary_ID','Parser.py',275),
  ('primary -> TRUE','primary',1,'p_primary_bool','Parser.py',280),
  ('primary -> FALSE','primary',1,'p_primary_bool','Parser.py',281),
  ('primary -> NULL','primary',1,'p_primary_null','Parser.py',285),
  ('primary -> LPAREN expression RPAREN','primary',3,'p_primary','Parser.py',290),
  ('arguments -> arguments COMMA expression','arguments',3,'p_arguments_multiple','Parser.py',297),
  ('arguments -> expression','arguments',1,'p_arguments_single','Parser.py',301),
  ('arguments -> <empty>','arguments',0,'p_arguments_empty','Parser.py',305),
  ('funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE','funcDeclaration',9,'p_funcDeclaration_statement','Parser.py',310),
  ('parameter_list -> parameter_list COMMA type ID','parameter_list',4,'p_parameter_list_multiple','Parser.py',316),
  ('parameter_list -> type ID','parameter_list',2,'p_parameter_list_single','Parser.py',320),
  ('parameter_list -> <empty>','parameter_list',0,'p_parameter_list_empty','Parser.py',324),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',329),
]
