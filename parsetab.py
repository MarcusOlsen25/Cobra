
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN COMMA DIVIDE ELSE EQUALS FUNC GREATER GREATEROREQUAL ID IF LBRACE LESS LESSOREQUAL LPAREN MINUS NOT NOTEQUALS NUMBER OR PLUS PRINT RBRACE RETURN RPAREN THEN TIMES VAR WHILEprogram : declaration_listdeclaration_list : declaration\n                        | declaration_list declarationdeclaration : varDeclaration\n                   | statement\n                   | funcDeclarationstatement : expression\n                 | ifStatement\n                 | whileStatement\n                 | printStatementifStatement : IF expression THEN LBRACE declaration_list RBRACEifStatement : IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACEwhileStatement : WHILE expression THEN LBRACE declaration_list RBRACEprintStatement : PRINT expressionvarDeclaration : VAR IDvarDeclaration : VAR ID ASSIGN expressionexpression : assignmentassignment : ID ASSIGN assignmentassignment : logicallogical : logical OR equalitylogical : logical AND equalitylogical : equalityequality : equality EQUALS comparisonequality : equality NOTEQUALS comparisonequality : comparisoncomparison : comparison GREATER termcomparison : comparison LESS termcomparison : comparison GREATEROREQUAL termcomparison : comparison LESSOREQUAL termcomparison : termterm : term PLUS factorterm : term MINUS factorterm : factorfactor : factor TIMES unaryfactor : factor DIVIDE unaryfactor : unaryunary : NOT unaryunary : callcall : primary LPAREN arguments RPARENcall : primaryprimary : NUMBERprimary : IDprimary : LPAREN expression RPARENarguments : arguments COMMA expressionarguments : expressionarguments : funcDeclaration : FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACEparameter_list : parameter_list COMMA IDparameter_list : IDparameter_list :'
    
_lr_action_items = {'VAR':([0,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,24,26,27,28,29,30,36,49,50,53,55,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,81,82,84,86,87,88,90,91,92,93,],[7,7,-2,-4,-5,-6,-42,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-38,-40,-41,-3,-15,-14,-37,-42,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,7,7,-39,7,7,7,-11,-13,7,-47,7,7,-12,]),'FUNC':([0,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,24,26,27,28,29,30,36,49,50,53,55,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,81,82,84,86,87,88,90,91,92,93,],[13,13,-2,-4,-5,-6,-42,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-38,-40,-41,-3,-15,-14,-37,-42,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,13,13,-39,13,13,13,-11,-13,13,-47,13,13,-12,]),'IF':([0,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,24,26,27,28,29,30,36,49,50,53,55,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,81,82,84,86,87,88,90,91,92,93,],[16,16,-2,-4,-5,-6,-42,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-38,-40,-41,-3,-15,-14,-37,-42,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,16,16,-39,16,16,16,-11,-13,16,-47,16,16,-12,]),'WHILE':([0,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,24,26,27,28,29,30,36,49,50,53,55,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,81,82,84,86,87,88,90,91,92,93,],[17,17,-2,-4,-5,-6,-42,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-38,-40,-41,-3,-15,-14,-37,-42,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,17,17,-39,17,17,17,-11,-13,17,-47,17,17,-12,]),'PRINT':([0,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,24,26,27,28,29,30,36,49,50,53,55,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,81,82,84,86,87,88,90,91,92,93,],[18,18,-2,-4,-5,-6,-42,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-38,-40,-41,-3,-15,-14,-37,-42,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,18,18,-39,18,18,18,-11,-13,18,-47,18,18,-12,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,78,80,81,82,84,86,87,88,90,91,92,93,],[8,8,-2,-4,-5,-6,30,-42,-7,-8,-9,-10,32,8,-17,8,8,8,-19,-22,-25,-30,-33,-36,50,-38,-40,-41,-3,-15,8,-14,50,50,50,50,50,50,50,50,50,50,50,50,-37,-42,8,8,-18,73,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,8,8,-39,8,85,8,8,8,-11,-13,8,-47,8,8,-12,]),'NOT':([0,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,78,81,82,84,86,87,88,90,91,92,93,],[25,25,-2,-4,-5,-6,-42,-7,-8,-9,-10,25,-17,25,25,25,-19,-22,-25,-30,-33,-36,25,-38,-40,-41,-3,-15,25,-14,25,25,25,25,25,25,25,25,25,25,25,25,-37,-42,25,25,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,25,25,-39,25,25,25,25,-11,-13,25,-47,25,25,-12,]),'NUMBER':([0,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,78,81,82,84,86,87,88,90,91,92,93,],[28,28,-2,-4,-5,-6,-42,-7,-8,-9,-10,28,-17,28,28,28,-19,-22,-25,-30,-33,-36,28,-38,-40,-41,-3,-15,28,-14,28,28,28,28,28,28,28,28,28,28,28,28,-37,-42,28,28,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,28,28,-39,28,28,28,28,-11,-13,28,-47,28,28,-12,]),'LPAREN':([0,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,58,59,60,61,62,63,64,65,66,67,68,69,72,75,76,77,78,81,82,84,86,87,88,90,91,92,93,],[14,14,-2,-4,-5,-6,-42,-7,-8,-9,-10,14,-17,14,14,14,-19,-22,-25,-30,-33,-36,14,-38,51,-41,-3,-15,14,54,-14,14,14,14,14,14,14,14,14,14,14,14,14,-37,-42,14,14,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,14,14,-39,14,14,14,14,-11,-13,14,-47,14,14,-12,]),'$end':([1,2,3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,24,26,27,28,29,30,36,49,50,53,55,58,59,60,61,62,63,64,65,66,67,68,69,72,77,86,87,90,93,],[0,-1,-2,-4,-5,-6,-42,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-38,-40,-41,-3,-15,-14,-37,-42,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,-39,-11,-13,-47,-12,]),'RBRACE':([3,4,5,6,8,9,10,11,12,15,19,20,21,22,23,24,26,27,28,29,30,36,49,50,53,55,58,59,60,61,62,63,64,65,66,67,68,69,72,77,81,82,86,87,88,90,92,93,],[-2,-4,-5,-6,-42,-7,-8,-9,-10,-17,-19,-22,-25,-30,-33,-36,-38,-40,-41,-3,-15,-14,-37,-42,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-16,-39,86,87,-11,-13,90,-47,93,-12,]),'ASSIGN':([8,30,],[31,52,]),'TIMES':([8,23,24,26,27,28,49,50,55,66,67,68,69,77,],[-42,47,-36,-38,-40,-41,-37,-42,-43,47,47,-34,-35,-39,]),'DIVIDE':([8,23,24,26,27,28,49,50,55,66,67,68,69,77,],[-42,48,-36,-38,-40,-41,-37,-42,-43,48,48,-34,-35,-39,]),'PLUS':([8,22,23,24,26,27,28,49,50,55,62,63,64,65,66,67,68,69,77,],[-42,45,-33,-36,-38,-40,-41,-37,-42,-43,45,45,45,45,-31,-32,-34,-35,-39,]),'MINUS':([8,22,23,24,26,27,28,49,50,55,62,63,64,65,66,67,68,69,77,],[-42,46,-33,-36,-38,-40,-41,-37,-42,-43,46,46,46,46,-31,-32,-34,-35,-39,]),'GREATER':([8,21,22,23,24,26,27,28,49,50,55,60,61,62,63,64,65,66,67,68,69,77,],[-42,41,-30,-33,-36,-38,-40,-41,-37,-42,-43,41,41,-26,-27,-28,-29,-31,-32,-34,-35,-39,]),'LESS':([8,21,22,23,24,26,27,28,49,50,55,60,61,62,63,64,65,66,67,68,69,77,],[-42,42,-30,-33,-36,-38,-40,-41,-37,-42,-43,42,42,-26,-27,-28,-29,-31,-32,-34,-35,-39,]),'GREATEROREQUAL':([8,21,22,23,24,26,27,28,49,50,55,60,61,62,63,64,65,66,67,68,69,77,],[-42,43,-30,-33,-36,-38,-40,-41,-37,-42,-43,43,43,-26,-27,-28,-29,-31,-32,-34,-35,-39,]),'LESSOREQUAL':([8,21,22,23,24,26,27,28,49,50,55,60,61,62,63,64,65,66,67,68,69,77,],[-42,44,-30,-33,-36,-38,-40,-41,-37,-42,-43,44,44,-26,-27,-28,-29,-31,-32,-34,-35,-39,]),'EQUALS':([8,20,21,22,23,24,26,27,28,49,50,55,58,59,60,61,62,63,64,65,66,67,68,69,77,],[-42,39,-25,-30,-33,-36,-38,-40,-41,-37,-42,-43,39,39,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-39,]),'NOTEQUALS':([8,20,21,22,23,24,26,27,28,49,50,55,58,59,60,61,62,63,64,65,66,67,68,69,77,],[-42,40,-25,-30,-33,-36,-38,-40,-41,-37,-42,-43,40,40,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-39,]),'OR':([8,19,20,21,22,23,24,26,27,28,49,50,55,58,59,60,61,62,63,64,65,66,67,68,69,77,],[-42,37,-22,-25,-30,-33,-36,-38,-40,-41,-37,-42,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-39,]),'AND':([8,19,20,21,22,23,24,26,27,28,49,50,55,58,59,60,61,62,63,64,65,66,67,68,69,77,],[-42,38,-22,-25,-30,-33,-36,-38,-40,-41,-37,-42,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-39,]),'RPAREN':([8,15,19,20,21,22,23,24,26,27,28,33,49,50,51,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,77,83,85,],[-42,-17,-19,-22,-25,-30,-33,-36,-38,-40,-41,55,-37,-42,-46,-18,-50,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,77,-45,-49,79,-39,-44,-48,]),'THEN':([8,15,19,20,21,22,23,24,26,27,28,34,35,49,50,53,55,58,59,60,61,62,63,64,65,66,67,68,69,77,],[-42,-17,-19,-22,-25,-30,-33,-36,-38,-40,-41,56,57,-37,-42,-18,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,-39,]),'COMMA':([8,15,19,20,21,22,23,24,26,27,28,49,50,51,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,77,83,85,],[-42,-17,-19,-22,-25,-30,-33,-36,-38,-40,-41,-37,-42,-46,-18,-50,-43,-20,-21,-23,-24,-26,-27,-28,-29,-31,-32,-34,-35,78,-45,-49,80,-39,-44,-48,]),'LBRACE':([56,57,79,89,],[75,76,84,91,]),'ELSE':([86,],[89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,75,76,84,91,],[2,81,82,88,92,]),'declaration':([0,2,75,76,81,82,84,88,91,92,],[3,29,3,3,29,29,3,29,3,29,]),'varDeclaration':([0,2,75,76,81,82,84,88,91,92,],[4,4,4,4,4,4,4,4,4,4,]),'statement':([0,2,75,76,81,82,84,88,91,92,],[5,5,5,5,5,5,5,5,5,5,]),'funcDeclaration':([0,2,75,76,81,82,84,88,91,92,],[6,6,6,6,6,6,6,6,6,6,]),'expression':([0,2,14,16,17,18,51,52,75,76,78,81,82,84,88,91,92,],[9,9,33,34,35,36,71,72,9,9,83,9,9,9,9,9,9,]),'ifStatement':([0,2,75,76,81,82,84,88,91,92,],[10,10,10,10,10,10,10,10,10,10,]),'whileStatement':([0,2,75,76,81,82,84,88,91,92,],[11,11,11,11,11,11,11,11,11,11,]),'printStatement':([0,2,75,76,81,82,84,88,91,92,],[12,12,12,12,12,12,12,12,12,12,]),'assignment':([0,2,14,16,17,18,31,51,52,75,76,78,81,82,84,88,91,92,],[15,15,15,15,15,15,53,15,15,15,15,15,15,15,15,15,15,15,]),'logical':([0,2,14,16,17,18,31,51,52,75,76,78,81,82,84,88,91,92,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'equality':([0,2,14,16,17,18,31,37,38,51,52,75,76,78,81,82,84,88,91,92,],[20,20,20,20,20,20,20,58,59,20,20,20,20,20,20,20,20,20,20,20,]),'comparison':([0,2,14,16,17,18,31,37,38,39,40,51,52,75,76,78,81,82,84,88,91,92,],[21,21,21,21,21,21,21,21,21,60,61,21,21,21,21,21,21,21,21,21,21,21,]),'term':([0,2,14,16,17,18,31,37,38,39,40,41,42,43,44,51,52,75,76,78,81,82,84,88,91,92,],[22,22,22,22,22,22,22,22,22,22,22,62,63,64,65,22,22,22,22,22,22,22,22,22,22,22,]),'factor':([0,2,14,16,17,18,31,37,38,39,40,41,42,43,44,45,46,51,52,75,76,78,81,82,84,88,91,92,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,66,67,23,23,23,23,23,23,23,23,23,23,23,]),'unary':([0,2,14,16,17,18,25,31,37,38,39,40,41,42,43,44,45,46,47,48,51,52,75,76,78,81,82,84,88,91,92,],[24,24,24,24,24,24,49,24,24,24,24,24,24,24,24,24,24,24,68,69,24,24,24,24,24,24,24,24,24,24,24,]),'call':([0,2,14,16,17,18,25,31,37,38,39,40,41,42,43,44,45,46,47,48,51,52,75,76,78,81,82,84,88,91,92,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'primary':([0,2,14,16,17,18,25,31,37,38,39,40,41,42,43,44,45,46,47,48,51,52,75,76,78,81,82,84,88,91,92,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'arguments':([51,],[70,]),'parameter_list':([54,],[74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','Parser.py',7),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',12),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','Parser.py',13),
  ('declaration -> varDeclaration','declaration',1,'p_declaration','Parser.py',21),
  ('declaration -> statement','declaration',1,'p_declaration','Parser.py',22),
  ('declaration -> funcDeclaration','declaration',1,'p_declaration','Parser.py',23),
  ('statement -> expression','statement',1,'p_statement','Parser.py',29),
  ('statement -> ifStatement','statement',1,'p_statement','Parser.py',30),
  ('statement -> whileStatement','statement',1,'p_statement','Parser.py',31),
  ('statement -> printStatement','statement',1,'p_statement','Parser.py',32),
  ('ifStatement -> IF expression THEN LBRACE declaration_list RBRACE','ifStatement',6,'p_ifStatement_single','Parser.py',37),
  ('ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE','ifStatement',10,'p_ifStatement_else','Parser.py',41),
  ('whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE','whileStatement',6,'p_whileStatement','Parser.py',46),
  ('printStatement -> PRINT expression','printStatement',2,'p_printStatement','Parser.py',51),
  ('varDeclaration -> VAR ID','varDeclaration',2,'p_varDeclaration_uninitialized','Parser.py',56),
  ('varDeclaration -> VAR ID ASSIGN expression','varDeclaration',4,'p_varDeclaration_initialized','Parser.py',62),
  ('expression -> assignment','expression',1,'p_expression_assignment','Parser.py',67),
  ('assignment -> ID ASSIGN assignment','assignment',3,'p_assignment','Parser.py',73),
  ('assignment -> logical','assignment',1,'p_assignment_logical','Parser.py',78),
  ('logical -> logical OR equality','logical',3,'p_logical_or','Parser.py',83),
  ('logical -> logical AND equality','logical',3,'p_logical_and','Parser.py',88),
  ('logical -> equality','logical',1,'p_logical_equality','Parser.py',93),
  ('equality -> equality EQUALS comparison','equality',3,'p_equality_equals','Parser.py',98),
  ('equality -> equality NOTEQUALS comparison','equality',3,'p_equality_not_equals','Parser.py',103),
  ('equality -> comparison','equality',1,'p_equality_comparison','Parser.py',108),
  ('comparison -> comparison GREATER term','comparison',3,'p_comparison_greater','Parser.py',113),
  ('comparison -> comparison LESS term','comparison',3,'p_comparison_less','Parser.py',118),
  ('comparison -> comparison GREATEROREQUAL term','comparison',3,'p_comparison_greater_or_equal','Parser.py',123),
  ('comparison -> comparison LESSOREQUAL term','comparison',3,'p_comparison_less_or_equal','Parser.py',128),
  ('comparison -> term','comparison',1,'p_comparison_term','Parser.py',133),
  ('term -> term PLUS factor','term',3,'p_term_plus','Parser.py',138),
  ('term -> term MINUS factor','term',3,'p_term_minus','Parser.py',143),
  ('term -> factor','term',1,'p_term_factor','Parser.py',148),
  ('factor -> factor TIMES unary','factor',3,'p_factor_times','Parser.py',153),
  ('factor -> factor DIVIDE unary','factor',3,'p_factor_div','Parser.py',158),
  ('factor -> unary','factor',1,'p_factor_unary','Parser.py',163),
  ('unary -> NOT unary','unary',2,'p_unary','Parser.py',168),
  ('unary -> call','unary',1,'p_unary_num','Parser.py',173),
  ('call -> primary LPAREN arguments RPAREN','call',4,'p_call_func','Parser.py',178),
  ('call -> primary','call',1,'p_call_other','Parser.py',183),
  ('primary -> NUMBER','primary',1,'p_primary_number','Parser.py',188),
  ('primary -> ID','primary',1,'p_primary_ID','Parser.py',193),
  ('primary -> LPAREN expression RPAREN','primary',3,'p_primary','Parser.py',198),
  ('arguments -> arguments COMMA expression','arguments',3,'p_arguments_multiple','Parser.py',204),
  ('arguments -> expression','arguments',1,'p_arguments_single','Parser.py',208),
  ('arguments -> <empty>','arguments',0,'p_arguments_empty','Parser.py',212),
  ('funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN LBRACE declaration_list RBRACE','funcDeclaration',8,'p_funcDeclaration_statement','Parser.py',218),
  ('parameter_list -> parameter_list COMMA ID','parameter_list',3,'p_parameter_list_multiple','Parser.py',224),
  ('parameter_list -> ID','parameter_list',1,'p_parameter_list_single','Parser.py',228),
  ('parameter_list -> <empty>','parameter_list',0,'p_parameter_list_empty','Parser.py',232),
]
