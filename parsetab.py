
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOL CLASS COMMA DIVIDE DOT ELSE EQUALS EXTENDS FALSE FUNC GREATER GREATEROREQUAL ID IF INT LBRACE LESS LESSOREQUAL LPAREN MINUS NEW NOT NOTEQUALS NULL NUMBER OR PLUS PRINT RBRACE RETURN RPAREN THEN TIMES TRUE VOID WHILEprogram : declaration_listdeclaration_list : declaration\n                            | declaration_list declarationdeclaration : varDeclaration\n                    | statement\n                    | funcDeclaration\n                    | classclass : CLASS ID extends LBRACE classDeclarationList RBRACEextends : EXTENDS ID\n                | emptyclassDeclarationList : classDeclarationList classDeclarationclassDeclarationList : classDeclarationclassDeclaration : varDeclaration\n                            | methodDeclarationmethodDeclaration : FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACEstatement : expression\n                    | ifStatement\n                    | whileStatement\n                    | printStatement\n                    | returnStatementreturnStatement : RETURN expressionreturnStatement : RETURNifStatement : IF expression THEN LBRACE declaration_list RBRACEifStatement : IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACEwhileStatement : WHILE expression THEN LBRACE declaration_list RBRACEprintStatement : PRINT expressionvarDeclaration : type IDvarDeclaration : type ID ASSIGN expressiontype : INT\n                | BOOL\n                | VOID\n                | IDexpression : assignmentassignment : property ASSIGN logicalassignment : logicallogical : logical OR equalitylogical : logical AND equalitylogical : equalityequality : equality EQUALS comparisonequality : equality NOTEQUALS comparisonequality : comparisoncomparison : comparison GREATER termcomparison : comparison LESS termcomparison : comparison GREATEROREQUAL termcomparison : comparison LESSOREQUAL termcomparison : termterm : term PLUS factorterm : term MINUS factorterm : factorfactor : factor TIMES unaryfactor : factor DIVIDE unaryfactor : unaryfactor : NULLunary : NOT unaryunary : MINUS unaryunary : propertyproperty : NEW primary LPAREN RPARENproperty : property DOT IDproperty : property LPAREN arguments RPARENproperty : callcall : primary LPAREN arguments RPARENcall : primaryprimary : NUMBERprimary : IDprimary : TRUE\n                | FALSEprimary : LPAREN expression RPARENarguments : arguments COMMA expressionarguments : expressionarguments : funcDeclaration : FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACEparameter_list : parameter_list COMMA type IDparameter_list : type IDparameter_list :empty :'
    
_lr_action_items = {'FUNC':([0,2,3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,102,104,105,106,108,109,113,114,115,116,118,119,123,124,126,127,128,132,134,135,137,139,140,141,142,],[15,15,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,117,15,15,-59,-57,-61,117,-12,-13,-14,15,15,-8,-11,-23,-25,15,15,15,-71,15,-24,15,15,-15,]),'CLASS':([0,2,3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[17,17,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,17,17,-59,-57,-61,17,17,-8,-23,-25,17,17,17,-71,17,-24,17,17,]),'INT':([0,2,3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,73,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,102,104,105,106,108,109,110,111,113,114,115,116,118,119,123,124,126,127,128,130,132,134,135,136,137,139,140,141,142,],[18,18,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,18,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,18,18,18,-59,-57,-61,18,18,18,-12,-13,-14,18,18,-8,-11,-23,-25,18,18,18,18,-71,18,18,-24,18,18,-15,]),'BOOL':([0,2,3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,73,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,102,104,105,106,108,109,110,111,113,114,115,116,118,119,123,124,126,127,128,130,132,134,135,136,137,139,140,141,142,],[19,19,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,19,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,19,19,19,-59,-57,-61,19,19,19,-12,-13,-14,19,19,-8,-11,-23,-25,19,19,19,19,-71,19,19,-24,19,19,-15,]),'VOID':([0,2,3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,73,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,102,104,105,106,108,109,110,111,113,114,115,116,118,119,123,124,126,127,128,130,132,134,135,136,137,139,140,141,142,],[20,20,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,20,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,20,20,20,-59,-57,-61,20,20,20,-12,-13,-14,20,20,-8,-11,-23,-25,20,20,20,20,-71,20,20,-24,20,20,-15,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,99,101,102,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,122,123,124,126,127,128,130,132,134,135,136,137,139,140,141,142,],[9,9,-2,-4,-5,-6,-7,43,-32,-16,-17,-18,-19,-20,44,46,47,-29,-30,-31,-33,46,46,46,46,-56,-35,46,-62,-60,-38,-41,-63,-65,-66,-46,-49,46,-52,-53,46,-3,-27,-64,-26,-21,46,81,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-55,-56,-54,46,99,-67,103,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,-32,112,99,9,9,-59,46,-57,-61,99,99,99,-12,-13,-14,125,9,9,129,-8,-11,-23,-25,9,99,9,9,-71,99,9,-24,9,9,-15,]),'IF':([0,2,3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[22,22,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,22,22,-59,-57,-61,22,22,-8,-23,-25,22,22,22,-71,22,-24,22,22,]),'WHILE':([0,2,3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[23,23,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,23,23,-59,-57,-61,23,23,-8,-23,-25,23,23,23,-71,23,-24,23,23,]),'PRINT':([0,2,3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[24,24,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,24,24,-59,-57,-61,24,24,-8,-23,-25,24,24,24,-71,24,-24,24,24,]),'RETURN':([0,2,3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[25,25,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,25,25,-59,-57,-61,25,25,-8,-23,-25,25,25,25,-71,25,-24,25,25,]),'NEW':([0,2,3,4,5,6,7,9,10,11,12,13,14,16,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,50,51,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,107,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[28,28,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,28,-33,28,28,28,28,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,28,-52,-53,28,-3,-27,-64,-26,-21,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-55,-56,-54,28,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,28,28,-59,28,-57,-61,28,28,-8,-23,-25,28,28,28,-71,28,-24,28,28,]),'NUMBER':([0,2,3,4,5,6,7,9,10,11,12,13,14,16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,50,51,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,107,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[33,33,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,33,-33,33,33,33,33,-56,-35,33,-62,-60,-38,-41,-63,-65,-66,-46,-49,33,-52,-53,33,-3,-27,-64,-26,-21,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-55,-56,-54,33,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,33,33,-59,33,-57,-61,33,33,-8,-23,-25,33,33,33,-71,33,-24,33,33,]),'TRUE':([0,2,3,4,5,6,7,9,10,11,12,13,14,16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,50,51,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,107,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[34,34,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,34,-33,34,34,34,34,-56,-35,34,-62,-60,-38,-41,-63,-65,-66,-46,-49,34,-52,-53,34,-3,-27,-64,-26,-21,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-55,-56,-54,34,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,34,34,-59,34,-57,-61,34,34,-8,-23,-25,34,34,34,-71,34,-24,34,34,]),'FALSE':([0,2,3,4,5,6,7,9,10,11,12,13,14,16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,50,51,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,107,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[35,35,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,35,-33,35,35,35,35,-56,-35,35,-62,-60,-38,-41,-63,-65,-66,-46,-49,35,-52,-53,35,-3,-27,-64,-26,-21,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-55,-56,-54,35,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,35,35,-59,35,-57,-61,35,35,-8,-23,-25,35,35,35,-71,35,-24,35,35,]),'LPAREN':([0,2,3,4,5,6,7,9,10,11,12,13,14,16,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,107,108,109,118,119,123,125,126,127,128,132,134,135,137,139,140,141,],[16,16,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,16,-33,16,16,16,16,54,-35,16,58,-60,-38,-41,-63,-65,-66,-46,-49,16,-52,-53,16,-3,-27,73,-64,-26,-21,16,16,16,16,86,16,16,16,16,16,16,16,16,16,16,16,-55,54,-54,16,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,16,16,-59,16,-57,-61,16,16,-8,130,-23,-25,16,16,16,-71,16,-24,16,16,]),'NULL':([0,2,3,4,5,6,7,9,10,11,12,13,14,16,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,52,54,55,56,58,59,60,61,62,63,64,65,66,69,70,71,72,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,107,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[40,40,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,40,-33,40,40,40,40,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,40,40,40,40,40,40,40,40,40,40,40,40,40,-55,-56,-54,40,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,40,40,-59,40,-57,-61,40,40,-8,-23,-25,40,40,40,-71,40,-24,40,40,]),'NOT':([0,2,3,4,5,6,7,9,10,11,12,13,14,16,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,50,51,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,107,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[41,41,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,41,-33,41,41,41,41,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,41,-52,-53,41,-3,-27,-64,-26,-21,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-55,-56,-54,41,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,41,41,-59,41,-57,-61,41,41,-8,-23,-25,41,41,41,-71,41,-24,41,41,]),'MINUS':([0,2,3,4,5,6,7,9,10,11,12,13,14,16,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,50,51,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,104,105,106,107,108,109,118,119,123,126,127,128,132,134,135,137,139,140,141,],[38,38,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,38,-33,38,38,38,38,-56,-35,-62,-60,-38,-41,-63,-65,-66,66,-49,38,-52,-53,38,-3,-27,-64,-26,-21,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-55,-56,-54,38,-67,-34,-58,-36,-37,-39,-40,66,66,66,66,-47,-48,-50,-51,-28,38,38,-59,38,-57,-61,38,38,-8,-23,-25,38,38,38,-71,38,-24,38,38,]),'$end':([1,2,3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,106,108,109,123,126,127,135,139,],[0,-1,-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,-59,-57,-61,-8,-23,-25,-71,-24,]),'RBRACE':([3,4,5,6,7,9,10,11,12,13,14,21,25,26,27,29,30,31,32,33,34,35,36,37,39,40,42,43,46,50,51,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,98,106,108,109,113,114,115,116,118,119,123,124,126,127,132,135,137,139,141,142,],[-2,-4,-5,-6,-7,-64,-16,-17,-18,-19,-20,-33,-22,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-3,-27,-64,-26,-21,-55,-56,-54,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-28,-59,-57,-61,123,-12,-13,-14,126,127,-8,-11,-23,-25,135,-71,139,-24,142,-15,]),'ASSIGN':([9,26,29,30,33,34,35,43,46,74,81,106,108,109,],[-64,52,-62,-60,-63,-65,-66,72,-64,-67,-58,-59,-57,-61,]),'DOT':([9,26,29,30,33,34,35,46,70,74,81,106,108,109,],[-64,53,-62,-60,-63,-65,-66,-64,53,-67,-58,-59,-57,-61,]),'TIMES':([9,26,29,30,33,34,35,37,39,40,46,69,70,71,74,81,94,95,96,97,106,108,109,],[-64,-56,-62,-60,-63,-65,-66,67,-52,-53,-64,-55,-56,-54,-67,-58,67,67,-50,-51,-59,-57,-61,]),'DIVIDE':([9,26,29,30,33,34,35,37,39,40,46,69,70,71,74,81,94,95,96,97,106,108,109,],[-64,-56,-62,-60,-63,-65,-66,68,-52,-53,-64,-55,-56,-54,-67,-58,68,68,-50,-51,-59,-57,-61,]),'PLUS':([9,26,29,30,33,34,35,36,37,39,40,46,69,70,71,74,81,90,91,92,93,94,95,96,97,106,108,109,],[-64,-56,-62,-60,-63,-65,-66,65,-49,-52,-53,-64,-55,-56,-54,-67,-58,65,65,65,65,-47,-48,-50,-51,-59,-57,-61,]),'GREATER':([9,26,29,30,32,33,34,35,36,37,39,40,46,69,70,71,74,81,88,89,90,91,92,93,94,95,96,97,106,108,109,],[-64,-56,-62,-60,61,-63,-65,-66,-46,-49,-52,-53,-64,-55,-56,-54,-67,-58,61,61,-42,-43,-44,-45,-47,-48,-50,-51,-59,-57,-61,]),'LESS':([9,26,29,30,32,33,34,35,36,37,39,40,46,69,70,71,74,81,88,89,90,91,92,93,94,95,96,97,106,108,109,],[-64,-56,-62,-60,62,-63,-65,-66,-46,-49,-52,-53,-64,-55,-56,-54,-67,-58,62,62,-42,-43,-44,-45,-47,-48,-50,-51,-59,-57,-61,]),'GREATEROREQUAL':([9,26,29,30,32,33,34,35,36,37,39,40,46,69,70,71,74,81,88,89,90,91,92,93,94,95,96,97,106,108,109,],[-64,-56,-62,-60,63,-63,-65,-66,-46,-49,-52,-53,-64,-55,-56,-54,-67,-58,63,63,-42,-43,-44,-45,-47,-48,-50,-51,-59,-57,-61,]),'LESSOREQUAL':([9,26,29,30,32,33,34,35,36,37,39,40,46,69,70,71,74,81,88,89,90,91,92,93,94,95,96,97,106,108,109,],[-64,-56,-62,-60,64,-63,-65,-66,-46,-49,-52,-53,-64,-55,-56,-54,-67,-58,64,64,-42,-43,-44,-45,-47,-48,-50,-51,-59,-57,-61,]),'EQUALS':([9,26,29,30,31,32,33,34,35,36,37,39,40,46,69,70,71,74,81,84,85,88,89,90,91,92,93,94,95,96,97,106,108,109,],[-64,-56,-62,-60,59,-41,-63,-65,-66,-46,-49,-52,-53,-64,-55,-56,-54,-67,-58,59,59,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-59,-57,-61,]),'NOTEQUALS':([9,26,29,30,31,32,33,34,35,36,37,39,40,46,69,70,71,74,81,84,85,88,89,90,91,92,93,94,95,96,97,106,108,109,],[-64,-56,-62,-60,60,-41,-63,-65,-66,-46,-49,-52,-53,-64,-55,-56,-54,-67,-58,60,60,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-59,-57,-61,]),'OR':([9,26,27,29,30,31,32,33,34,35,36,37,39,40,46,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,106,108,109,],[-64,-56,55,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-64,-55,-56,-54,-67,55,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-59,-57,-61,]),'AND':([9,26,27,29,30,31,32,33,34,35,36,37,39,40,46,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,106,108,109,],[-64,-56,56,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-64,-55,-56,-54,-67,56,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-59,-57,-61,]),'LBRACE':([18,19,20,47,75,77,78,79,99,103,121,131,138,],[-29,-30,-31,-75,102,-10,104,105,-32,-9,128,134,140,]),'RPAREN':([21,26,27,29,30,31,32,33,34,35,36,37,39,40,45,46,54,58,69,70,71,73,74,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,106,108,109,112,120,129,130,133,],[-33,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,74,-64,-70,-70,-55,-56,-54,-74,-67,-34,-58,106,-69,-36,-37,108,109,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,110,-59,-57,-61,-73,-68,-72,-74,136,]),'THEN':([21,26,27,29,30,31,32,33,34,35,36,37,39,40,46,48,49,69,70,71,74,80,81,84,85,88,89,90,91,92,93,94,95,96,97,106,108,109,],[-33,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-64,78,79,-55,-56,-54,-67,-34,-58,-36,-37,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,-59,-57,-61,]),'COMMA':([21,26,27,29,30,31,32,33,34,35,36,37,39,40,46,54,58,69,70,71,73,74,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,100,106,108,109,112,120,129,130,133,],[-33,-56,-35,-62,-60,-38,-41,-63,-65,-66,-46,-49,-52,-53,-64,-70,-70,-55,-56,-54,-74,-67,-34,-58,107,-69,-36,-37,107,-39,-40,-42,-43,-44,-45,-47,-48,-50,-51,111,-59,-57,-61,-73,-68,-72,-74,111,]),'EXTENDS':([47,],[76,]),'ELSE':([126,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,104,105,128,134,140,],[2,118,119,132,137,141,]),'declaration':([0,2,104,105,118,119,128,132,134,137,140,141,],[3,42,3,3,42,42,3,42,3,42,3,42,]),'varDeclaration':([0,2,102,104,105,113,118,119,128,132,134,137,140,141,],[4,4,115,4,4,115,4,4,4,4,4,4,4,4,]),'statement':([0,2,104,105,118,119,128,132,134,137,140,141,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'funcDeclaration':([0,2,104,105,118,119,128,132,134,137,140,141,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'class':([0,2,104,105,118,119,128,132,134,137,140,141,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'type':([0,2,73,102,104,105,110,111,113,118,119,128,130,132,134,136,137,140,141,],[8,8,101,8,8,8,121,122,8,8,8,8,101,8,8,138,8,8,8,]),'expression':([0,2,16,22,23,24,25,54,58,72,104,105,107,118,119,128,132,134,137,140,141,],[10,10,45,48,49,50,51,83,83,98,10,10,120,10,10,10,10,10,10,10,10,]),'ifStatement':([0,2,104,105,118,119,128,132,134,137,140,141,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'whileStatement':([0,2,104,105,118,119,128,132,134,137,140,141,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'printStatement':([0,2,104,105,118,119,128,132,134,137,140,141,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'returnStatement':([0,2,104,105,118,119,128,132,134,137,140,141,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'assignment':([0,2,16,22,23,24,25,54,58,72,104,105,107,118,119,128,132,134,137,140,141,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'property':([0,2,16,22,23,24,25,38,41,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,72,104,105,107,118,119,128,132,134,137,140,141,],[26,26,26,26,26,26,26,70,70,70,26,70,70,26,70,70,70,70,70,70,70,70,70,70,26,26,26,26,26,26,26,26,26,26,26,26,]),'logical':([0,2,16,22,23,24,25,52,54,58,72,104,105,107,118,119,128,132,134,137,140,141,],[27,27,27,27,27,27,27,80,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'primary':([0,2,16,22,23,24,25,28,38,41,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,72,104,105,107,118,119,128,132,134,137,140,141,],[29,29,29,29,29,29,29,57,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'call':([0,2,16,22,23,24,25,38,41,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,72,104,105,107,118,119,128,132,134,137,140,141,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'equality':([0,2,16,22,23,24,25,52,54,55,56,58,72,104,105,107,118,119,128,132,134,137,140,141,],[31,31,31,31,31,31,31,31,31,84,85,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'comparison':([0,2,16,22,23,24,25,52,54,55,56,58,59,60,72,104,105,107,118,119,128,132,134,137,140,141,],[32,32,32,32,32,32,32,32,32,32,32,32,88,89,32,32,32,32,32,32,32,32,32,32,32,32,]),'term':([0,2,16,22,23,24,25,52,54,55,56,58,59,60,61,62,63,64,72,104,105,107,118,119,128,132,134,137,140,141,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,90,91,92,93,36,36,36,36,36,36,36,36,36,36,36,36,]),'factor':([0,2,16,22,23,24,25,52,54,55,56,58,59,60,61,62,63,64,65,66,72,104,105,107,118,119,128,132,134,137,140,141,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,94,95,37,37,37,37,37,37,37,37,37,37,37,37,]),'unary':([0,2,16,22,23,24,25,38,41,52,54,55,56,58,59,60,61,62,63,64,65,66,67,68,72,104,105,107,118,119,128,132,134,137,140,141,],[39,39,39,39,39,39,39,69,71,39,39,39,39,39,39,39,39,39,39,39,39,39,96,97,39,39,39,39,39,39,39,39,39,39,39,39,]),'extends':([47,],[75,]),'empty':([47,],[77,]),'arguments':([54,58,],[82,87,]),'parameter_list':([73,130,],[100,133,]),'classDeclarationList':([102,],[113,]),'classDeclaration':([102,113,],[114,124,]),'methodDeclaration':([102,113,],[116,116,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','Parser.py',15),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Parser.py',20),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','Parser.py',21),
  ('declaration -> varDeclaration','declaration',1,'p_declaration','Parser.py',29),
  ('declaration -> statement','declaration',1,'p_declaration','Parser.py',30),
  ('declaration -> funcDeclaration','declaration',1,'p_declaration','Parser.py',31),
  ('declaration -> class','declaration',1,'p_declaration','Parser.py',32),
  ('class -> CLASS ID extends LBRACE classDeclarationList RBRACE','class',6,'p_class','Parser.py',36),
  ('extends -> EXTENDS ID','extends',2,'p_extends','Parser.py',43),
  ('extends -> empty','extends',1,'p_extends','Parser.py',44),
  ('classDeclarationList -> classDeclarationList classDeclaration','classDeclarationList',2,'p_classDeclarationList_multiple','Parser.py',52),
  ('classDeclarationList -> classDeclaration','classDeclarationList',1,'p_classDeclarationList_single','Parser.py',56),
  ('classDeclaration -> varDeclaration','classDeclaration',1,'p_classDeclaration','Parser.py',60),
  ('classDeclaration -> methodDeclaration','classDeclaration',1,'p_classDeclaration','Parser.py',61),
  ('methodDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE','methodDeclaration',9,'p_methodDeclaration','Parser.py',65),
  ('statement -> expression','statement',1,'p_statement','Parser.py',70),
  ('statement -> ifStatement','statement',1,'p_statement','Parser.py',71),
  ('statement -> whileStatement','statement',1,'p_statement','Parser.py',72),
  ('statement -> printStatement','statement',1,'p_statement','Parser.py',73),
  ('statement -> returnStatement','statement',1,'p_statement','Parser.py',74),
  ('returnStatement -> RETURN expression','returnStatement',2,'p_returnStatement','Parser.py',79),
  ('returnStatement -> RETURN','returnStatement',1,'p_returnStatement_empty','Parser.py',84),
  ('ifStatement -> IF expression THEN LBRACE declaration_list RBRACE','ifStatement',6,'p_ifStatement_single','Parser.py',89),
  ('ifStatement -> IF expression THEN LBRACE declaration_list RBRACE ELSE LBRACE declaration_list RBRACE','ifStatement',10,'p_ifStatement_else','Parser.py',94),
  ('whileStatement -> WHILE expression THEN LBRACE declaration_list RBRACE','whileStatement',6,'p_whileStatement','Parser.py',99),
  ('printStatement -> PRINT expression','printStatement',2,'p_printStatement','Parser.py',104),
  ('varDeclaration -> type ID','varDeclaration',2,'p_varDeclaration_uninitialized','Parser.py',109),
  ('varDeclaration -> type ID ASSIGN expression','varDeclaration',4,'p_varDeclaration_initialized','Parser.py',114),
  ('type -> INT','type',1,'p_type','Parser.py',119),
  ('type -> BOOL','type',1,'p_type','Parser.py',120),
  ('type -> VOID','type',1,'p_type','Parser.py',121),
  ('type -> ID','type',1,'p_type','Parser.py',122),
  ('expression -> assignment','expression',1,'p_expression_assignment','Parser.py',127),
  ('assignment -> property ASSIGN logical','assignment',3,'p_assignment','Parser.py',132),
  ('assignment -> logical','assignment',1,'p_assignment_logical','Parser.py',138),
  ('logical -> logical OR equality','logical',3,'p_logical_or','Parser.py',143),
  ('logical -> logical AND equality','logical',3,'p_logical_and','Parser.py',148),
  ('logical -> equality','logical',1,'p_logical_equality','Parser.py',153),
  ('equality -> equality EQUALS comparison','equality',3,'p_equality_equals','Parser.py',158),
  ('equality -> equality NOTEQUALS comparison','equality',3,'p_equality_not_equals','Parser.py',163),
  ('equality -> comparison','equality',1,'p_equality_comparison','Parser.py',168),
  ('comparison -> comparison GREATER term','comparison',3,'p_comparison_greater','Parser.py',173),
  ('comparison -> comparison LESS term','comparison',3,'p_comparison_less','Parser.py',178),
  ('comparison -> comparison GREATEROREQUAL term','comparison',3,'p_comparison_greater_or_equal','Parser.py',183),
  ('comparison -> comparison LESSOREQUAL term','comparison',3,'p_comparison_less_or_equal','Parser.py',188),
  ('comparison -> term','comparison',1,'p_comparison_term','Parser.py',193),
  ('term -> term PLUS factor','term',3,'p_term_plus','Parser.py',198),
  ('term -> term MINUS factor','term',3,'p_term_minus','Parser.py',203),
  ('term -> factor','term',1,'p_term_factor','Parser.py',208),
  ('factor -> factor TIMES unary','factor',3,'p_factor_times','Parser.py',213),
  ('factor -> factor DIVIDE unary','factor',3,'p_factor_div','Parser.py',218),
  ('factor -> unary','factor',1,'p_factor_unary','Parser.py',223),
  ('factor -> NULL','factor',1,'p_factor_none','Parser.py',228),
  ('unary -> NOT unary','unary',2,'p_unary','Parser.py',233),
  ('unary -> MINUS unary','unary',2,'p_unary_minus','Parser.py',238),
  ('unary -> property','unary',1,'p_unary_num','Parser.py',243),
  ('property -> NEW primary LPAREN RPAREN','property',4,'p_call_constructor','Parser.py',249),
  ('property -> property DOT ID','property',3,'p_property_dot','Parser.py',253),
  ('property -> property LPAREN arguments RPAREN','property',4,'p_property_call','Parser.py',257),
  ('property -> call','property',1,'p_property','Parser.py',270),
  ('call -> primary LPAREN arguments RPAREN','call',4,'p_call_func','Parser.py',274),
  ('call -> primary','call',1,'p_call','Parser.py',278),
  ('primary -> NUMBER','primary',1,'p_primary_number','Parser.py',283),
  ('primary -> ID','primary',1,'p_primary_ID','Parser.py',288),
  ('primary -> TRUE','primary',1,'p_primary_bool','Parser.py',293),
  ('primary -> FALSE','primary',1,'p_primary_bool','Parser.py',294),
  ('primary -> LPAREN expression RPAREN','primary',3,'p_primary','Parser.py',299),
  ('arguments -> arguments COMMA expression','arguments',3,'p_arguments_multiple','Parser.py',306),
  ('arguments -> expression','arguments',1,'p_arguments_single','Parser.py',310),
  ('arguments -> <empty>','arguments',0,'p_arguments_empty','Parser.py',314),
  ('funcDeclaration -> FUNC ID LPAREN parameter_list RPAREN type LBRACE declaration_list RBRACE','funcDeclaration',9,'p_funcDeclaration_statement','Parser.py',319),
  ('parameter_list -> parameter_list COMMA type ID','parameter_list',4,'p_parameter_list_multiple','Parser.py',325),
  ('parameter_list -> type ID','parameter_list',2,'p_parameter_list_single','Parser.py',329),
  ('parameter_list -> <empty>','parameter_list',0,'p_parameter_list_empty','Parser.py',333),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',338),
]
